CREATE OR ALTER   PROCEDURE [dbo].[sp_ImportItemFromXml]
@XMLFILE AS VARCHAR(200),@DeleteOld as tinyint=0
As
--declare @XMLFILE AS VARCHAR(200),@DeleteOld as tinyint=0
--set @DeleteOld=0; SET @xMLfILE='C:\Item_Export\cf menu.exp'
SET NOCOUNT on
--create table to hold xmldata
IF NOT EXISTS(SELECT * FROM SYSOBJECTS WHERE NAME='XMLwithOpenXML') CREATE TABLE XMLwithOpenXML(Id INT IDENTITY PRIMARY KEY,XMLData XML,LoadedDateTime DATETIME DEFAULT GETDATE())
--delete xml if exits previously
DELETE FROM XMLwithOpenXML 
--insert xml data from file
DECLARE @sql NVARCHAR(2000)
SET @sql='INSERT INTO XMLwithOpenXML(XMLData, LoadedDateTime)SELECT CONVERT(XML, BulkColumn) AS BulkColumn, GETDATE() 
FROM OPENROWSET(BULK ''' + @XMLFILE + ''', SINGLE_BLOB) AS x'; 
EXEC(@SQL)

DECLARE @XmlData xml
select @XmlData = xmldata from XMLwithOpenXML
--SELECT * FROM XMLWITHOPENXML
DECLARE @hdoc int

-- Prepare XML document
EXEC sp_xml_preparedocument @hdoc OUTPUT, @xmlData

Declare @param nvarchar(1000)
SET @param = N'@hdoc INT'

DECLARE @i int, @NodePath varchar(255), @NodeRow varchar(50), 
@NodeKeys varchar(255), @NodeCol varchar(MAX), @UpdateNodes varchar(MAX), 
@sSql nvarchar(MAX), @SetSchemaSelect varchar(MAX), @iVars varchar(MAX)

declare @trancount int;
set @trancount = @@trancount;
BEGIN TRY
	if @trancount = 0
            begin transaction
        else
            save transaction SP_SYNCSALE;
	--INSERTING IN TEMPORARY TABLE FOR PARENTS
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('MENUITEM')  ---GENERATING STRING FORM SCHEMA 
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('MENUITEM') ---GENERATING SELECT STRING
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('MENUITEM') ---GENERATING INSERT STRING
	IF OBJECT_ID('TEMPDB..#PARENTS') IS NOT NULL DROP TABLE #PARENTS
	SELECT * INTO #PARENTS FROM MENUITEM WHERE 1=0
	SET @sSql = 'INSERT INTO #PARENTS (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/PARENTGROUPS/PARENTGROUP'',2) WITH (' + @NodeCol + ') as xm '
	
		--PRINT @sSql; 
	EXEC sp_executesql @sSql, @param, @hdoc
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @sSql= 'INSERT INTO MENUITEM(' + @iVars +') SELECT ' + @SetSchemaSelect + ' FROM (  SELECT A.* FROM #PARENTS  A LEFT JOIN MENUITEM B ON A.MCODE=B.MCODE
	WHERE B.MCODE IS NULL) AS A'
	--print @ssql
	EXEC (@sSql)

	--INSERTING IN TEMPORARY TABLE FOR MENUITEM
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('MENUITEM')  ---GENERATING STRING FORM SCHEMA 
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('MENUITEM') ---GENERATING SELECT STRING
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('MENUITEM') ---GENERATING INSERT STRING
	IF OBJECT_ID('TEMPDB..#MENUITEMS') IS NOT NULL DROP TABLE #MENUITEMS
	SELECT * INTO #MENUITEMS FROM MENUITEM WHERE 1=0
	SET @sSql = 'INSERT INTO #MENUITEMS (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/MENUITEMS/MENUITEM'',2) WITH (' + @NodeCol + ') as xm '
	
		--PRINT @sSql; 
	EXEC sp_executesql @sSql, @param, @hdoc
	
	--UPDATETING MENUITEM
	UPDATE A SET A.MENUCODE=B.MENUCODE,A.DESCA=B.DESCA,A.BASEUNIT= B.BASEUNIT,A.RATE_A=B.RATE_A,A.RATE_B=B.RATE_B,A.PRATE_A=B.PRATE_A, A.PRATE_B=B.PRATE_B,
	A.MINLEVEL=B.MINLEVEL,A.MAXLEVEL=B.MAXLEVEL,A.MGROUP=B.MGROUP,A.DISMODE=B.DISMODE,A.DISRATE=B.DISRATE,A.DISAMOUNT=B.DISAMOUNT,A.PRESRATE=B.PRESRATE,
	A.SCHEME_A=B.SCHEME_A,A.SCHEME_B=B.SCHEME_B,A.SCHEME_C=B.SCHEME_C,A.SCHEME_D=B.SCHEME_D,A.SCHEME_E=B.SCHEME_E,A.PTYPE=B.PTYPE,A.MCAT=B.MCAT,
	A.CRATE=B.CRATE,A.GENERIC=B.GENERIC,A.EDATE=B.EDATE,A.MCAT1=B.MCAT1 FROM
	  MENUITEM A INNER JOIN #MENUITEMS B ON A.MCODE=B.MCODE
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @sSql= 'INSERT INTO MENUITEM(' + @iVars +') SELECT ' + @SetSchemaSelect + ' FROM (  SELECT A.* FROM #MENUITEMS  A LEFT JOIN MENUITEM B ON A.MCODE=B.MCODE
	WHERE B.MCODE IS NULL) AS A'
	--print @ssql
	EXEC (@sSql)
	
	
	
	

	----INSERTING INTO TEMPORARY TABLE FOR BARCODE
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('BARCODE')
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('BARCODE')
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('BARCODE')
	IF OBJECT_ID('TEMPDB..#BARCODE') IS NOT NULL DROP TABLE #BARCODE
	SELECT * INTO #BARCODE FROM BARCODE WHERE 1=0
	SET @sSql = 'INSERT INTO #BARCODE (' + @ivars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/BARCODES/BARCODE'',2) WITH (' + @NodeCol + ') as xm '
	--PRINT @sSql; 
	EXEC sp_executesql @sSql, @param, @hdoc
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @SSQL = 'INSERT INTO BARCODE (' + @iVars + ') SELECT '+ @SetSchemaSelect + ' FROM  ( SELECT A.* FROM #BARCODE   A LEFT JOIN BARCODE  B ON A.BCODE=B.BCODE AND A.MCODE=B.MCODE
	WHERE B.BCODE IS NULL) AS A'
	EXEC(@SSQL)
	

	----INSERTING INTO TEMPORARY TABLE FOR MULTIALTUNIT
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('MULTIALTUNIT')
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('MULTIALTUNIT')
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('MULTIALTUNIT')
	IF OBJECT_ID('TEMPDB..#MULTIALTUNIT') IS NOT NULL DROP TABLE #MULTIALTUNIT
	SELECT * INTO #MULTIALTUNIT FROM MULTIALTUNIT WHERE 1=0
	SET @sSql = 'INSERT INTO #MULTIALTUNIT (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/MULTIALTUNITS/MULTIALTUNIT'',2) WITH (' + @NodeCol + ') as xm '
	EXEC sp_executesql @sSql, @param, @hdoc
	--UPDATING THE MULTIALTUNIT
	UPDATE A SET A.CONFACTOR=B.CONFACTOR,A.RATE=B.RATE,A.ISDEFAULT=B.ISDEFAULT,A.BRCODE=B.BRCODE FROM MULTIALTUNIT A INNER JOIN #MULTIALTUNIT B ON A.MCODE=B.MCODE AND A.ALTUNIT=B.ALTUNIT
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @SSQL ='INSERT INTO MULTIALTUNIT (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM (SELECT A.* FROM #MULTIALTUNIT    A LEFT JOIN MULTIALTUNIT  B ON A.MCODE=B.MCODE and A.ALTUNIT=B.ALTUNIT 
		WHERE B.MCODE  IS NULL) AS A'
	EXEC (@sSql)
	
	----INSERTING INTO TEMPORARY TABLE FOR ITEMRATEDISCOUNT
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('ITEMRATEDISCOUNT')
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('ITEMRATEDISCOUNT')
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('ITEMRATEDISCOUNT')
	IF OBJECT_ID('TEMPDB..#ITEMRATEDISCOUNT') IS NOT NULL DROP TABLE #ITEMRATEDISCOUNT
	SELECT * INTO #ITEMRATEDISCOUNT FROM ITEMRATEDISCOUNT WHERE 1=0
	SET @sSql = 'INSERT INTO #ITEMRATEDISCOUNT (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/ITEMRATEDISCOUNTS/ITEMRATEDISCOUNT'',2) WITH (' + @NodeCol + ') as xm '
	EXEC sp_executesql @sSql, @param, @hdoc
	--UPDATING ITEMRATEDISCOUNT
	UPDATE A SET A.DTRRATE=B.DTRRATE,A.WSLRATE=B.WSLRATE,A.RTLRATE=B.FLTRATE FROM ITEMRATEDISCOUNT A INNER JOIN #ITEMRATEDISCOUNT B ON A.MCODE=B.MCODE
	--NOW INSERTING THE DIFFERENCE ONLY
    SET @sSql=	'INSERT INTO ITEMRATEDISCOUNT (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM (SELECT A.* FROM #ITEMRATEDISCOUNT    A LEFT JOIN ITEMRATEDISCOUNT  B ON A.MCODE=B.MCODE 
		WHERE B.MCODE  IS NULL) AS A'
	EXEC (@sSql)
	
	----INSERTING INTO TEMPORARY TABLE FOR ITEMRATE
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('ITEMRATE')
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('ITEMRATE')
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('ITEMRATE')
	IF OBJECT_ID('TEMPDB..#ITEMRATE') IS NOT NULL DROP TABLE #ITEMRATE
	SELECT * INTO #ITEMRATE FROM ITEMRATE WHERE 1=0
	SET @sSql = 'INSERT INTO #ITEMRATE (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/ITEMRATES/ITEMRATE'',2) WITH (' + @NodeCol + ') as xm '
	EXEC sp_executesql @sSql, @param, @hdoc
	--UPDATING ITEMRATE
	UPDATE A SET A.RATE=B.RATE,A.RATETYPE=B.RATETYPE,A.UNIT=B.UNIT,A.SNO=B.SNO,A.ISNEW=B.ISNEW FROM ITEMRATE A INNER JOIN #ITEMRATE B ON A.MCODE=B.MCODE AND A.RATEID=B.RATEID
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @sSql= 'INSERT INTO ITEMRATE (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM  (SELECT A.* FROM #ITEMRATE    A LEFT JOIN ITEMRATE  B ON A.MCODE=B.MCODE AND A.RATEID=B.RATEID
		WHERE B.MCODE  IS NULL) AS A'
	EXEC (@sSql)

	----INSERTING INTO TEMPORARY TABLE FOR RATEGROUP
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('RATEGROUP')
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('RATEGROUP')
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('RATEGROUP')
	IF OBJECT_ID('TEMPDB..#RATEGROUP') IS NOT NULL DROP TABLE #RATEGROUP
	SELECT * INTO #RATEGROUP FROM RATEGROUP WHERE 1=0
	SET @sSql = 'INSERT INTO #RATEGROUP (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/RATEGROUPS/RATEGROUP'',2) WITH (' + @NodeCol + ') as xm '
	EXEC sp_executesql @sSql, @param, @hdoc
	--UPDATING RATEGROUP
	UPDATE A SET A.DESCRIPTION=B.DESCRIPTION,A.SHORTNAME=B.SHORTNAME FROM RATEGROUP A INNER JOIN #RATEGROUP B ON A.RID=B.RID
	
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @sSql= 'INSERT INTO RATEGROUP (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM ( SELECT A.* FROM #RATEGROUP    A LEFT JOIN RATEGROUP  B ON A.RID=B.RID  
		WHERE B.RID IS NULL) AS A'
	EXEC (@sSql)
	

	----INSERTING INTO TEMPORARY TABLE FOR MULTISTOCKLEVEL
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('MULTISTOCKLEVEL')
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('MULTISTOCKLEVEL')
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('MULTISTOCKLEVEL')
	IF OBJECT_ID('TEMPDB..#MULTISTOCKLEVEL') IS NOT NULL DROP TABLE #MULTISTOCKLEVEL
	SELECT * INTO #MULTISTOCKLEVEL FROM MULTISTOCKLEVEL WHERE 1=0
	SET @sSql = 'INSERT INTO #MULTISTOCKLEVEL (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/MULTISTOCKLEVELS/MULTISTOCKLEVEL'',2) WITH (' + @NodeCol + ') as xm '
	EXEC sp_executesql @sSql, @param, @hdoc
	--UPDATEING MULTISTOCKLEVEL
	
	UPDATE A SET A.ROLEVEL=B.ROLEVEL,A.MINLEVEL=B.MINLEVEL,A.MAXLEVEL=B.MAXLEVEL FROM MULTISTOCKLEVEL A INNER JOIN #MULTISTOCKLEVEL B ON A.MCODE=B.MCODE AND A.WAREHOUSE=B.WAREHOUSE  
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @sSql= ' INSERT INTO MULTISTOCKLEVEL (' + @iVars + ') SELECT '+ @SetSchemaSelect + ' FROM (SELECT A.* FROM #MULTISTOCKLEVEL    A LEFT JOIN MULTISTOCKLEVEL  B ON A.MCODE=B.MCODE AND A.WAREHOUSE=B.WAREHOUSE  
		WHERE B.MCODE IS NULL) AS A '
	EXEC (@sSql)

	----INSERTING INTO TEMPORARY TABLE FOR SRATEUPDATELOG
	SELECT @NodeCol =[dbo].[fnGetTableSchemaInsert]('SRATEUPDATELOG')
	SELECT @SetSchemaSelect = [dbo].[fnSetTableSchemaSelect]('SRATEUPDATELOG')
	SELECT @ivars = [dbo].[fnGetTableSchemaSelectInto]('SRATEUPDATELOG')
	IF OBJECT_ID('TEMPDB..#SRATEUPDATELOG') IS NOT NULL DROP TABLE #SRATEUPDATELOG
	SELECT * INTO #SRATEUPDATELOG FROM SRATEUPDATELOG WHERE 1=0
	SET @sSql = 'INSERT INTO #SRATEUPDATELOG (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM OPENXML( @hdoc, ''/ITEMS/SRATEUPDATELOGS/SRATEUPDATELOG'',2) WITH (' + @NodeCol + ') as xm '
	EXEC sp_executesql @sSql, @param, @hdoc
	
	--UPDATING SRATEUPDATE
	
	--UPDATE A SET A.
	--NOW INSERTING THE DIFFERENCE ONLY
	SET @sSql= 'INSERT INTO SRATEUPDATELOG (' + @iVars + ') SELECT ' + @SetSchemaSelect + ' FROM ( SELECT A.* FROM #SRATEUPDATELOG   A LEFT JOIN SRATEUPDATELOG  B ON A.MCODE=B.MCODE  
		WHERE B.MCODE IS NULL) AS A'
	EXEC (@sSql)

	EXEC sp_xml_removedocument @hdoc
	drop table #MENUITEMS 
	drop table #BARCODE 
	drop table #ITEMRATE 
	drop table #ITEMRATEDISCOUNT 
	drop table #MULTIALTUNIT 
	drop table #MULTISTOCKLEVEL 
	drop table #RATEGROUP 
	drop table #SRATEUPDATELOG 
 lbexit:
        if @trancount = 0   
            commit;
			
 END TRY
 
 BEGIN CATCH
	declare @error int, @message varchar(4000), @xstate int;
        select @error = ERROR_NUMBER(), @message = ERROR_MESSAGE(), @xstate = XACT_STATE();
        if @xstate = -1
            rollback;
        if @xstate = 1 and @trancount = 0
            rollback
        if @xstate = 1 and @trancount > 0
            rollback transaction SP_SYNSALESSUMMARY;

        raiserror ('SP_IMTEMIMPORT: %d: %s', 16, 1, @error, @message) ;
        return;

 END CATCH

