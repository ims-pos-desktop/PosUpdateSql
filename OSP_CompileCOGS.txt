CREATE    PROC[dbo].[OSP_CompileCOGS]    
--DECLARE     
@DIVISION VARCHAR(3) ,    
@PhiscalId VARCHAR(10) ,    
@DATE1 DATE ,  
@DATE2 DATE ,  
@IgnoreNegativeStock BIT   
AS    
--SELECT @DIVISION = 'MHJ',  @PhiscalId ='79/80',  @DATE1 = '17 JUL 2022',@DATE2 = '2 APR 2023',@IgnoreNegativeStock = 1  
    
BEGIN TRY    
  
 IF OBJECT_ID('TEMPDB..#SALES_DATA') IS NOT NULL DROP TABLE #SALES_DATA    
 IF OBJECT_ID('TEMPDB..#PURCHASE_DATA') IS NOT NULL DROP TABLE #PURCHASE_DATA    
 IF OBJECT_ID('TempDB..#MessageList') IS  NOT NULL DROP TABLE #MessageList    
 CREATE TABLE #MessageList (MCODE VARCHAR(30) ,SalesQTY NUMERIC(18,2), PurchaseQTY NUMERIC(18,2), NegativeQty NUMERIC(18,2),Message varchar(500))    
    
 SELECT P.MCODE, SUM(REALQTY - REALQTY_IN) SOLD_QTY INTO #SALES_DATA  FROM RMD_TRNPROD P JOIN RMD_TRNMAIN M ON P.VCHRNO = M.VCHRNO WHERE P.VOUCHERTYPE IN ('SI','TI','CN') AND P.DIVISION Like @DIVISION AND P.PhiscalID = @PhiscalId  AND M.TRNDATE BETWEEN @D
ATE1 AND @DATE2  
 GROUP BY P.MCODE    
    
 SELECT P.MCODE, SUM(REALQTY_IN - REALQTY) STOCK INTO #PURCHASE_DATA FROM RMD_TRNPROD P JOIN RMD_TRNMAIN M ON P.VCHRNO = M.VCHRNO WHERE P.VOUCHERTYPE NOT IN ('SI','TI','CN') AND P.DIVISION Like @DIVISION AND P.PhiscalID = @PhiscalId AND M.TRNDATE <=@DATE2
  
 GROUP BY P.MCODE    
    
 INSERT INTO #MessageList    
 SELECT M.MCODE, COALESCE(SD.SOLD_QTY,0) SalesQTY,COALESCE(PD.STOCK,0) PurchaseQTY, COALESCE(PD.STOCK,0) - COALESCE(SD.SOLD_QTY,0) NegativeQty,   
 'Total Sales Quantity is greater then Total Purchase Qty' Message FROM MENUITEM M     
 LEFT JOIN #PURCHASE_DATA PD ON M.MCODE = PD.MCODE    
 LEFT JOIN #SALES_DATA SD ON M.MCODE = SD.MCODE    
 WHERE COALESCE(PD.STOCK,0) - COALESCE(SD.SOLD_QTY,0)<0    
    
 DECLARE  @MessageListCount INTEGER;    
 SET @MessageListCount = (SELECT COUNT(*) FROM #MessageList)    
    
 IF(@MessageListCount > 0)    
 BEGIN  
  --SELECT * FROM #MessageList    
  IF(@IgnoreNegativeStock = 0) GOTO GOTOEND  
  
 END    
   
  IF OBJECT_ID('TempDB..#VOUCHERLIST') IS  NOT NULL DROP TABLE #VOUCHERLIST    
  create table #VOUCHERLIST ( VCHRNO VARCHAR(25), TRNDATE DATETIME, MCODE VARCHAR(30) ,QTY NUMERIC(18,2))    
  
  IF OBJECT_ID('TempDB..#DISTINCTVOUCHERLIST') IS  NOT NULL DROP TABLE #DISTINCTVOUCHERLIST    
  CREATE TABLE #DISTINCTVOUCHERLIST ( VCHRNO VARCHAR(25), TRNDATE DATETIME)    
  
  IF OBJECT_ID('TempDB..#CRateList') IS  NOT NULL DROP TABLE #CRateList    
  create table #CRateList ( VCHRNO VARCHAR(25), MCODE VARCHAR(30),RATE NUMERIC(18,2) ,USED_QTY NUMERIC(18,2))    
  
  IF OBJECT_ID('TempDB..#CombineProdList') IS  NOT NULL DROP TABLE #CombineProdList    
  create table #CombineProdList (SALESVCHRNO VARCHAR(25), MCODE VARCHAR(25), QTY NUMERIC(18,2),PURCHASEVCHRNO VARCHAR(25),RATE NUMERIC(18,2) ,USED_QTY NUMERIC(18,2))    
  
  IF OBJECT_ID('TempDB..#CMI') IS NOT NULL DROP TABLE #CMI  
  CREATE TABLE #CMI (DIVISOIN VARCHAR(3) NOT NULL, VCHRNO VARCHAR(25) NULL, VAL_DATE DATE NOT NULL,MCODE VARCHAR (25) NOT NULL,VAL_RATE NUMERIC(18,6) NULL)  
    
  INSERT INTO #VOUCHERLIST    
  select TM.VCHRNO, TM.TRNDATE + TM.TRNTIME, TP.MCODE , SUM(TP.Quantity) Qty from SALES_TRNMAIN TM    
  LEFT JOIN RMD_TRNPROD TP ON TM.VCHRNO = TP.VCHRNO       
  WHERE TM.DIVISION LIKE @DIVISION AND TM.PhiscalID = @PhiscalId AND TM.TRNDATE BETWEEN @DATE1 AND @DATE2 AND TM.VoucherType IN ('TI', 'SI', 'CN') AND    
  TM.VCHRNO NOT IN   
  (    
   SELECT VCHRNO from vwTrnProd_COGS WHERE VCHRNO LIKE CONCAT('%','-',@DIVISION,'-',@PhiscalId)     
  )   
  --WHERE TM.VCHRNO = 'TI33-BDC-79/80'  
  GROUP BY TM.VCHRNO, TM.TRNDATE, TM.TRNTIME, TP.MCODE, TM.stamp     
  order by TM.stamp     
    
  INSERT INTO #DISTINCTVOUCHERLIST    
  SELECT DISTINCT VCHRNO, TRNDATE FROM #VOUCHERLIST    
    
  DECLARE @i INTEGER, @COUNT INTEGER;    
  DECLARE @VoucherNo Varchar(20);    
  DECLARE @Json Varchar(max);    
  DECLARE @Date DATETIME;    
  DECLARE @CRateListQty  NUMERIC(18,2);    
  SET @i = 0;    
  SET @COUNT = (SELECT COUNT(*) FROM #DISTINCTVOUCHERLIST);    
  --SELECT * FROM #DISTINCTVOUCHERLIST  
  WHILE @i < @COUNT    
  BEGIN    
   DELETE FROM #CRateList    
   DELETE FROM #CombineProdList    
   DELETE FROM #CMI  
   Select @VoucherNo = VCHRNO, @DATE = TRNDATE from #DISTINCTVOUCHERLIST order by CONVERT(INT, SUBSTRING(VCHRNO, 3, CHARINDEX('-',VCHRNO,3)-3)) asc, VCHRNO ASC offset @i rows fetch next 1 rows only  
   SET @Json = (Select MCODE, QTY FROM #VOUCHERLIST WHERE VCHRNO = @VoucherNo FOR JSON AUTO)    
  
   IF LEFT(@VoucherNo,2) = 'CN'  
    SELECT @Date = (TM.TRNDATE + TM.TRNTIME) FROM SALES_TRNMAIN TM WHERE TM.VCHRNO = (SELECT REFBILL FROM SALES_TRNMAIN WHERE VCHRNO = @VoucherNo)  
   --C @JSON  
   --PRINT @DATE  
   INSERT INTO #CRateList    
   EXEC RSP_STOCKVALUATION_FIFO_DIVISIONWISE @Json = @Json, @FYID = @PhiscalId,@DIVISION = @DIVISION, @Detail = 3, @Date = @Date, @IsStampWise = 1    
    
   INSERT INTO #CombineProdList    
   SELECT  V.VCHRNO, V.MCODE, V.QTY, C.VCHRNO, C.RATE, C.USED_QTY FROM #CRateList C Left Join (SELECT * FROM #VOUCHERLIST WHERE VCHRNO = @VoucherNo) V on C.MCODE = V.MCODE    
  
   --SELECT * FROM #CRateList  
   --SELECT * FROM #CombineProdList ORDER BY SALESVCHRNO  
  
   DECLARE @CostMissingItemsJson VARCHAR(MAX)  
  
   SET @CostMissingItemsJson =   
   (  
    SELECT DISTINCT P.MCODE FROM SALES_TRNPROD P LEFT JOIN #CombineProdList C ON P.MCODE = C.MCODE AND P.VCHRNO = C.SALESVCHRNO WHERE P.VCHRNO = @VoucherNo FOR JSON AUTO  
   )   
   --PRINT @CostMissingItemsJson  
     
   IF @CostMissingItemsJson <> ''  
   BEGIN  
    INSERT INTO #CMI  
    SELECT C.DIVISION, C.VCHRNO, CONVERT(DATE,@DATE) [DATE],C.MCODE,C.VAL_RATE FROM FN_GetLastValuationRate(@DATE, @CostMissingItemsJson, @DIVISION, @PhiscalId, 'TR') C  
   END  
  
   --SELECT * FROM #CMI  
     
   INSERT INTO vwTrnProd_COGS(VCHRNO, VOUCHERTYPE, MCODE, BC, BATCH, SNO, COSTING_INVOICE, Quantity, CRATE, STAMP)  
   SELECT RP.VCHRNO, RP.VoucherType,RP.MCODE,RP.BC, RP.BATCH,RP.SNO, COALESCE(CP.PURCHASEVCHRNO, CONCAT(CMI.VCHRNO, ' (LP)'), 'N/A' ) COSTING_INVOICE, COALESCE(CP.USED_QTY, RP.QUANTITY) Quantity,   
   COALESCE(CP.RATE, CMI.VAL_RATE, NULLIF(MI.CRATE,0), MI.PRATE_A) CRATE, Convert(Float,GETDATE()) STAMP from RMD_TRNPROD RP   
   LEFT JOIN #CombineProdList CP on RP.VCHRNO = CP.SALESVCHRNO  and RP.MCODE = CP.MCODE   
   LEFT JOIN #CMI CMI ON RP.MCODE = CMI.MCODE  
   LEFT JOIN MENUITEM MI ON RP.MCODE = MI.MCODE  
   where RP.VCHRNO = @VoucherNo  
  DECLARE @ProgressValue  NUMERIC(5,2);  
  DECLARE @ProgressMsg Varchar(max);   
  SET @ProgressValue = CAST(@i AS float) / CAST(@COUNT AS float) * 100 ;  
  SET @ProgressMsg = CONCAT('Completed ',@ProgressValue)  
  print @ProgressMsg  
  SET @i = @i + 1;    
  GOTOEND:  
 END    
END TRY     
BEGIN CATCH      
 SELECT  ERROR_NUMBER() AS ErrorNumber  ,ERROR_SEVERITY() AS ErrorSeverity  ,ERROR_STATE() AS ErrorState   ,ERROR_PROCEDURE() AS ErrorProcedure  ,ERROR_LINE() AS ErrorLine  ,ERROR_MESSAGE() AS ErrorMessage,   
 @VoucherNo VoucherNo;      
END CATCH;