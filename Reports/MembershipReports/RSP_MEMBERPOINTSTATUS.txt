CREATE OR ALTER PROCEDURE [dbo].[RSP_MEMBERPOINTSTATUS]
--DECLARE 
@DATE1 DATETIME,
@DATE2 DATETIME,
@POINT NUMERIC(18,0) = 0,
@OPT_REPMODE TINYINT = 1,					    --OrderByMember:1,OrderByValue:0
@MEMID VARCHAR(50) = '',
@DIVISION VARCHAR(10) = '%',
@OPT_SHOWSUMMARY_REPORT TINYINT = 0             --Summary:1,Detail:0
AS
IF @OPT_SHOWSUMMARY_REPORT = 1 -- SUMMARY REPORT
BEGIN
	SELECT A.MEMBERNO, FNAME AS MEMNAME, ISNULL(O.OPPOINT, 0) AS OPENINGPOINT,
	NETAMNT,PAMOUNT,MEMTOTPOINT AS TOTALPOINT,MEMREDEEMPOINT AS POINTDEDUCTION,ISNULL(OPPOINT, 0) + ISNULL(MEMTOTPOINT, 0) - ISNULL(MEMREDEEMPOINT, 0) DUEPOINT,C.GRADEVALUE
	INTO #REPORT FROM MEMBERSHIP B
	INNER JOIN MEMGRADE C ON B.SCHEMEID = C.SCHEMEID
	LEFT JOIN 
	(
		SELECT B.MEMBERID MEMBERNO, 
		SUM(CASE WHEN LEFT(B.VCHRNO,2) IN ('SR','CN') THEN A.NETAMNT *-1 ELSE A.NETAMNT END) AS NETAMNT,
		SUM(CASE WHEN LEFT(B.VCHRNO,2) <> 'LP' THEN B.AMOUNT ELSE 0 END) AS PAMOUNT,
		SUM(B.AMOUNT) AS NETPAMOUNT,
		SUM(B.MEMTOTPOINT) AS MEMTOTPOINT,
		SUM(B.MEMREDEEMPOINT) AS MEMREDEEMPOINT
		FROM MEMGRADETRAN_VIEW B 
		LEFT JOIN RMD_TRNMAIN A ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND A.PHISCALID = B.PHISCALID 		
		AND CONVERT(DATE, B.TRNDATE) BETWEEN @DATE1 AND @DATE2  AND B.DIVISION LIKE @DIVISION
		GROUP BY B.MEMBERID	
	) AS A  ON A.MEMBERNO = B.MEMID
	LEFT JOIN
	(
		SELECT MEMBERID, SUM(MEMTOTPOINT - MEMREDEEMPOINT) OPPOINT FROM MEMGRADETRAN_VIEW WHERE LEFT(VCHRNO,2) = 'MO' OR TRNDATE < @DATE1 GROUP BY MEMBERID
	) O ON A.MEMBERNO = O.MEMBERID
	WHERE  ISNULL(OPPOINT, 0) + ISNULL(MEMTOTPOINT, 0) - ISNULL(MEMREDEEMPOINT,0) >= @POINT --* C.GRADEVALUE 
	AND ISNULL(OPPOINT, 0) + ISNULL(MEMTOTPOINT, 0) - ISNULL(MEMREDEEMPOINT,0) <> 0

	IF @OPT_REPMODE = 1
	SELECT * FROM #REPORT
	ORDER BY MEMNAME 
	ELSE 
	SELECT * FROM #REPORT
	ORDER BY OPENINGPOINT + TOTALPOINT - POINTDEDUCTION
END

ELSE

SELECT TRNDATE, BSDATE, VCHRNO, TOTAMNT, DCAMNT, VATAMNT, NETAMNT, PAMOUNT, POINT, DPOINT , SUM(DUEPOINT) OVER (PARTITION BY GRADEVALUE ORDER BY TRNDATE, STAMP) DUEPOINT, GRADEVALUE, DT, VNO, STAMP FROM
(
	SELECT NULL AS TRNDATE, NULL AS BSDATE, 'OPENING B/L' AS VCHRNO,
	NULL AS TOTAMNT, NULL AS DCAMNT, NULL AS VATAMNT, NULL AS NETAMNT, SUM(ISNULL(A.AMOUNT,0)) AS PAMOUNT,
	NULL AS POINT, NULL AS DPOINT,SUM(MEMTOTPOINT - MEMREDEEMPOINT) AS DUEPOINT, NULL AS POINTAMOUNT,
	D.GRADEVALUE,'01-01-01' AS DT,'AAAAAAAAAAAA' AS VNO, 0 STAMP FROM  MEMGRADETRAN_VIEW A
	INNER JOIN MEMBERSHIP C ON A.MEMBERID = C.MEMID INNER JOIN MEMGRADE D ON C.SCHEMEID = D.SCHEMEID
	WHERE A.MEMBERID = @MEMID AND (A.TRNDATE< @DATE1 OR A.VCHRNO LIKE 'MO%') AND A.DIVISION LIKE @DIVISION
	GROUP BY D.GRADEVALUE

	UNION ALL

	SELECT B.TRNDATE, M.MITI BSDATE, B.VCHRNO,
	CASE WHEN LEFT(A.VCHRNO,2) IN ('DU','MO')  THEN NULL ELSE CASE WHEN LEFT(A.VCHRNO,2) IN ('SI','TI') THEN TOTAMNT ELSE TOTAMNT*-1 END END TOTAMNT,
	CASE WHEN LEFT(A.VCHRNO,2) IN ('DU','MO')  THEN NULL ELSE CASE WHEN LEFT(A.VCHRNO,2) IN ('SI','TI') THEN DCAMNT ELSE DCAMNT*-1 END END DCAMNT,
	CASE WHEN LEFT(A.VCHRNO,2) IN ('DU','MO')  THEN NULL ELSE CASE WHEN LEFT(A.VCHRNO,2) IN ('SI','TI') THEN VATAMNT ELSE VATAMNT*-1 END END VATAMNT,
	CASE WHEN LEFT(A.VCHRNO,2) IN ('DU','MO')  THEN NULL ELSE CASE WHEN LEFT(A.VCHRNO,2) IN ('SI','TI') THEN NETAMNT ELSE NETAMNT*-1 END END NETAMNT,
	CASE WHEN LEFT(A.VCHRNO,2) IN ('DU','MO')  THEN NULL ELSE B.AMOUNT END AS PAMOUNT,
	MEMTOTPOINT AS POINT, MEMREDEEMPOINT AS DPOINT,MEMTOTPOINT - MEMREDEEMPOINT  AS DUEPOINT, 
	CASE WHEN LEFT(A.VCHRNO,2) = 'DU' THEN  ABS(B.AMOUNT) ELSE NULL END AS POINTAMOUNT,
	D.GRADEVALUE,B.TRNDATE AS DT,ISNULL(A.VNUM,A.VCHRNO) AS VNO, B.STAMP FROM MEMGRADETRAN B 
	INNER JOIN MEMBERSHIP C ON B.MEMBERID = C.MEMID 
	INNER JOIN MEMGRADE D ON C.SCHEMEID = D.SCHEMEID
	JOIN DATEMITI M ON CONVERT(DATE, B.TRNDATE) = M.AD
	LEFT JOIN RMD_TRNMAIN A ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND A.PHISCALID = B.PHISCALID
	WHERE B.MEMBERID = @MEMID AND B.TRNDATE BETWEEN @DATE1 AND @DATE2 AND B.DIVISION LIKE @DIVISION
) AS A ORDER BY DT,STAMP