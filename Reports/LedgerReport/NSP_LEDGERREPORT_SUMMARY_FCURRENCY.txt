CREATE OR ALTER      PROCEDURE [dbo].[NSP_LEDGERREPORT_SUMMARY_FCURRENCY]
--Declare
	@ACID AS VARCHAR(500),
	@DATE1 AS DATETIME,
	@DATE2 AS DATETIME,
	@DIV VARCHAR(15)='%',
	@CostCenter Varchar(500)='',
	@showNdate tinyint = 0,
	@InSingleLedger tinyint=0,	
	@IsAccountLedger tinyint=0,
	@REPORTBYCOSTCENTER TINYINT = 0,
	@HASMULTILEDGER TINYINT = 1,
	@SHOWPRODUCTDETAIL TINYINT = 1,
	@FYID VARCHAR(10) = '%'
AS

set nocount on 

--SEt @Acid ='AT01002,PA18546V';set @date1='07/17/16';set @date2='04/07/17';set @div='MMX';SEt @CostCenter='COSTCENTER A,COSTCENTER B';set @InSingleLedger=1;
--SEt @IsAccountLedger=1

--TEMPORARY TABLE DECLARATION
-----------------------------

DECLARE @LedgerTable table(Sno numeric,trndate datetime,bsdate varchar(20),vchrno varchar(20),chalanno varchar(20),particulars varchar(100),
	Dramnt numeric(24,10),Cramnt numeric(24,10),naration VARCHAR(1500),B_acid varchar(20),division varchar(5),Balance numeric(24,10),A_acid varchar(20),Ccenter varchar(50), Rmk VARCHAR(1500),stamp numeric(22,8),Cheque varchar(50))

DECLARE @LedgerTable_tmp table(Sno numeric,trndate datetime,bsdate varchar(20),vchrno varchar(20),chalanno varchar(20),particulars varchar(100),
	Dramnt numeric(24,10),Cramnt numeric(24,10),naration VARCHAR(1500),B_acid varchar(20),division varchar(5),Balance numeric(24,10),A_acid varchar(20),Ccenter varchar(50), Rmk VARCHAR(1500),stamp numeric(22,8),Cheque varchar(50))

--DECLARING VARIABLES
---------------------
Declare @Sno numeric,@A_Acid varchar(20),@Dramnt numeric(24,10),@Cramnt numeric(24,10),@RunningTotal numeric(24,10)=0,
@A_Acid_Tmp varchar(20)='',@trndate datetime,@Bsdate varchar(20),@vchrno varchar(20),@Chalanno varchar(20),@particulars varchar(100),@naration VARCHAR(1500),
@B_acid varchar(20),@division varchar(5),@CCenter varchar(50), @Rmk VARCHAR(1500),@stamp numeric(22,8),@CHEQUE varchar(50)

if @div='' set @div='%'
BEGIN
IF @InSingleLedger=0 
	BEGIN
		IF @REPORTBYCOSTCENTER = 0
			Insert into @LedgerTable_tmp
			SELECT  ROW_NUMBER() over(PARTITION by CASE WHEN @REPORTBYCOSTCENTER = 0 THEN A_ACID ELSE COSTCENTER END ORDER BY TRNDATE, VCHRNO) as SNo, TRNDATE, BSDATE, VCHRNO, CHALANNO, PARTICULARS,DRAMNT,CRAMNT,
			CASE WHEN CHARINDEX(CHAR(10),NARATION,0) >0 THEN LEFT(NARATION,LEN(NARATION)-2) ELSE NARATION END as NARATION, 
			null B_ACID,DIVISION,DRAMNT-CRAMNT AS BALANCE,A_ACID,COSTCENTER,REMARKS,STAMP,CHEQUE
			FROM
			(
				--MAIN REPORT QUERY
				--------------------		
				SELECT NULL AS TRNDATE, NULL AS BSDATE, NULL AS VCHRNO, NULL AS CHALANNO, 'OPENING BALANCE' AS PARTICULARS,
				CASE WHEN(x.OPBAL >=0) THEN x.OPBAL ELSE 0 END AS DRAMNT, CASE WHEN(x.OPBAL<0) THEN x.OPBAL * -1 ELSE 0 END AS CRAMNT,'' AS NARATION,NULL AS DIVISION,acid as A_acid,COSTCENTER COSTCENTER,NULL REMARKS,0 STAMP,NULL CHEQUE
				FROM
				(
					SELECT a.A_ACID,'' COSTCENTER,
					sum(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END)
					-SUM(case when isnull(FCurrency,'')<>'' and  CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS OPBAL FROM DBO.RMD_TRNTRAN_FN(@FYID) A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION 
					WHERE A.A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV AND 
					(LEFT(A.VCHRNO,2) = 'OB' OR B.TRNDATE < @DATE1) AND ((@COSTCENTER='' and isnull(A.CostCenter,'') like '%') or (@COSTCENTER <> '' and  A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))
					group by A.A_ACID
				) as X right join rmd_aclist Y on x.A_acid=Y.acid
				where Y.ACID in (select * from dbo.Split(@acid,','))		
				
				UNION ALL
								
				SELECT M.TRNDATE, M.BSDATE,  M.VCHRNO, M.CHALANNO,
				dbo.GetParticularForLedger(M.VCHRNO,M.DIVISION)  AS PARTICULAR, CONVERT(MONEY,CAST(M.DRAMNT AS VARCHAR(25)),2) AS DRAMNT,
				CONVERT(MONEY, CAST(M.CRAMNT AS VARCHAR(25)),1) AS CRAMNT, M.NARATION, M.DIVISION,A_ACID,M.COSTCENTER,
				CASE WHEN M.NARATION = M.REMARKS THEN '' ELSE M.REMARKS END REMARKS,STAMP,CASE WHEN ISNULL(M.CHEQUENO,'') <> '' THEN ' Chq. No : ' + CAST(M.ChequeNo AS VARCHAR(25)) +  '  Dt : ' +  CAST(m.chequedate AS VARCHAR(25)) ELSE '' END AS CHEQUE
				FROM
				(
					SELECT B.TRNDATE,B.BSDATE,B.VCHRNO, B.CHALANNO, A.DIVISION, A.A_ACID, 
					SUM(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END) AS DRAMNT, 
					SUM(case when isnull(FCurrency,'')<>'' and  CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS CRAMNT, case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END  AS NARATION,A.COSTCENTER,ISNULL(B.REMARKS,'')REMARKS,
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) STAMP,ISNULL(A.CHEQUENO,'') CHEQUENO,ISNULL(A.CHEQUEDATE,'') CHEQUEDATE from 
					DBO.RMD_TRNTRAN_FN(@FYID) AS A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO=B.VCHRNO AND A.DIVISION=B.DIVISION 
					WHERE A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV  AND (B.TRNDATE >= @DATE1 AND B.TRNDATE <= @DATE2)
					AND A.VCHRNO NOT LIKE 'OB%'  and ((@COSTCENTER='' AND isnull(A.CostCenter,'') LIKE '%') OR (@COSTCENTER <> '' AND A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))
					GROUP BY B.VCHRNO,B.CHALANNO,A.DIVISION,A.A_ACID,case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END,B.REMARKS,B.TRNDATE,B.BSDATE,A.COSTCENTER,ISNULL(A.CHEQUENO,''),ISNULL(A.CHEQUEDATE,''),
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) 
				) AS M
			)A
		ELSE
			Insert into @LedgerTable_tmp
			SELECT  ROW_NUMBER() over(PARTITION by CASE WHEN @REPORTBYCOSTCENTER = 0 THEN A_ACID ELSE COSTCENTER END ORDER BY TRNDATE, VCHRNO) as SNo, TRNDATE, BSDATE, VCHRNO, CHALANNO, PARTICULARS,DRAMNT,CRAMNT,
			CASE WHEN CHARINDEX(CHAR(10),NARATION,0) >0 THEN LEFT(NARATION,LEN(NARATION)-2) ELSE NARATION END as NARATION, 
			null B_ACID,DIVISION,DRAMNT-CRAMNT AS BALANCE,A_ACID,COSTCENTER,REMARKS,STAMP,CHEQUE
			FROM
			(
				--MAIN REPORT QUERY
				--------------------
				SELECT NULL AS TRNDATE, NULL AS BSDATE, NULL AS VCHRNO, NULL AS CHALANNO, 'OPENING BALANCE' AS PARTICULARS,
				CASE WHEN(x.OPBAL >=0) THEN x.OPBAL ELSE 0 END AS DRAMNT, CASE WHEN(x.OPBAL<0) THEN x.OPBAL * -1 ELSE 0 END AS CRAMNT,'' AS NARATION,NULL AS DIVISION,a_acid as A_acid,Y.CostCenterName COSTCENTER,NULL REMARKS,0 STAMP,NULL CHEQUE
				FROM
				(
					SELECT a.A_ACID,ISNULL(A.COSTCENTER,'') COSTCENTER,
					sum(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END)
					-SUM(case when isnull(FCurrency,'')<>'' and  CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS OPBAL FROM DBO.RMD_TRNTRAN_FN(@FYID) A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION 
					WHERE A.A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV AND 
					(LEFT(A.VCHRNO,2) = 'OB' OR B.TRNDATE < @DATE1) AND ((@COSTCENTER='' and isnull(A.CostCenter,'') like '%') or (@COSTCENTER <> '' and  A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))
					group by A.A_ACID,ISNULL(A.COSTCENTER,'') 
				) as X right join COSTCENTER Y on x.costcenter=Y.CostCenterName
				where (@COSTCENTER='' and isnull(Y.CostCenterName,'') like '%') or (@COSTCENTER <> '' and  Y.CostCenterName IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,',')))
						
				UNION ALL

				SELECT M.TRNDATE, M.BSDATE,  M.VCHRNO, M.CHALANNO,
				dbo.GetParticularForLedger(M.VCHRNO,M.DIVISION)  AS PARTICULAR, CONVERT(MONEY,CAST(M.DRAMNT AS VARCHAR(25)),2) AS DRAMNT,
				CONVERT(MONEY, CAST(M.CRAMNT AS VARCHAR(25)),1) AS CRAMNT, M.NARATION, M.DIVISION,A_ACID,M.COSTCENTER,
				CASE WHEN M.NARATION = M.REMARKS THEN '' ELSE M.REMARKS END REMARKS,STAMP,
				CASE WHEN ISNULL(M.CHEQUENO,'') <> '' THEN ' Chq. No : ' + CAST(M.ChequeNo AS VARCHAR(25)) +  '  Dt : ' +  CAST(m.chequedate AS VARCHAR(25)) ELSE '' END AS CHEQUE 
				FROM
				(
					SELECT B.TRNDATE,B.BSDATE,B.VCHRNO, B.CHALANNO, A.DIVISION, A.A_ACID, 
					SUM(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END) AS DRAMNT, 
					SUM(case when isnull(FCurrency,'')<>'' and  CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS CRAMNT, case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END  AS NARATION,A.COSTCENTER,ISNULL(B.REMARKS,'')REMARKS,
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) STAMP,ISNULL(A.CHEQUENO,'') CHEQUENO,ISNULL(A.CHEQUEDATE,'') CHEQUEDATE from 
					DBO.RMD_TRNTRAN_FN(@FYID) AS A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO=B.VCHRNO AND A.DIVISION=B.DIVISION 
					WHERE A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV  AND (B.TRNDATE >= @DATE1 AND B.TRNDATE <= @DATE2)
					AND A.VCHRNO NOT LIKE 'OB%'  and ((@COSTCENTER='' AND isnull(A.CostCenter,'') LIKE '%') OR (@COSTCENTER <> '' AND A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))
					GROUP BY B.VCHRNO,B.CHALANNO,A.DIVISION,A.A_ACID,case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END,B.REMARKS,B.TRNDATE,B.BSDATE,A.COSTCENTER,ISNULL(A.CHEQUENO,''),ISNULL(A.CHEQUEDATE,''),
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) 
				) AS M
			)A
	END

ELSE
	BEGIN
		IF @REPORTBYCOSTCENTER = 0
			Insert into @LedgerTable_tmp
			SELECT  ROW_NUMBER() over(PARTITION by CASE WHEN @REPORTBYCOSTCENTER = 0 THEN A_ACID ELSE COSTCENTER END ORDER BY TRNDATE, VCHRNO) as SNo, TRNDATE, BSDATE, VCHRNO, CHALANNO, PARTICULARS,DRAMNT,CRAMNT,
			CASE WHEN CHARINDEX(CHAR(10),NARATION,0) >0 THEN LEFT(NARATION,LEN(NARATION)-2) ELSE NARATION END as NARATION, 
			null B_ACID,DIVISION,DRAMNT-CRAMNT AS BALANCE,A_ACID,COSTCENTER,REMARKS,STAMP,CHEQUE
			FROM
			(
				--MAIN REPORT QUERY
				--------------------		
				SELECT NULL AS TRNDATE, NULL AS BSDATE, NULL AS VCHRNO, NULL AS CHALANNO, 'OPENING BALANCE' AS PARTICULARS,
				CASE WHEN(x.OPBAL >=0) THEN x.OPBAL ELSE 0 END AS DRAMNT, CASE WHEN(x.OPBAL<0) THEN x.OPBAL * -1 ELSE 0 END AS CRAMNT,'' AS NARATION,NULL AS DIVISION,'X001' A_acid,COSTCENTER COSTCENTER,NULL REMARKS,0 STAMP,NULL CHEQUE 
				FROM
				(
					SELECT 'AT' A_ACID,'' COSTCENTER,
					sum(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END)
					-SUM(case when isnull(FCurrency,'')<>'' and   CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS OPBAL FROM DBO.RMD_TRNTRAN_FN(@FYID) A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION 
					WHERE A.A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV AND 
					(LEFT(A.VCHRNO,2) = 'OB' OR B.TRNDATE < @DATE1) AND ((@COSTCENTER='' and isnull(A.CostCenter,'') like '%') or (@COSTCENTER <> '' and  A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))					
				) as X right join rmd_aclist Y on x.A_acid=Y.acid WHERE Y.ACID = 'AT'
				
				UNION ALL

				SELECT M.TRNDATE, M.BSDATE,  M.VCHRNO, M.CHALANNO,
				dbo.GetParticularForLedger(M.VCHRNO,M.DIVISION)  AS PARTICULAR, CONVERT(MONEY,CAST(M.DRAMNT AS VARCHAR(25)),2) AS DRAMNT,
				CONVERT(MONEY, CAST(M.CRAMNT AS VARCHAR(25)),1) AS CRAMNT, M.NARATION, M.DIVISION,A_ACID,M.COSTCENTER,
				CASE WHEN M.NARATION = M.REMARKS THEN '' ELSE M.REMARKS END REMARKS,STAMP,
				CASE WHEN ISNULL(M.CHEQUENO,'') <> '' THEN ' Chq. No : ' + CAST(M.ChequeNo AS VARCHAR(25)) +  '  Dt : ' +  CAST(m.chequedate AS VARCHAR(25)) ELSE '' END AS CHEQUE
				FROM
				(
					SELECT B.TRNDATE,B.BSDATE,B.VCHRNO, B.CHALANNO, A.DIVISION, 'X001' A_ACID, 
					SUM(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END) AS DRAMNT, 
					SUM(case when isnull(FCurrency,'')<>'' and  CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS CRAMNT, case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END  AS NARATION,'' COSTCENTER,ISNULL(B.REMARKS,'')REMARKS,
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) STAMP,ISNULL(A.CHEQUENO,'') CHEQUENO,ISNULL(A.CHEQUEDATE,'') CHEQUEDATE from 
					DBO.RMD_TRNTRAN_FN(@FYID) AS A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO=B.VCHRNO AND A.DIVISION=B.DIVISION 
					WHERE A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV  AND (B.TRNDATE >= @DATE1 AND B.TRNDATE <= @DATE2)
					AND A.VCHRNO NOT LIKE 'OB%'  and ((@COSTCENTER='' AND isnull(A.CostCenter,'') LIKE '%') OR (@COSTCENTER <> '' AND A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))
					GROUP BY B.VCHRNO,B.CHALANNO,A.DIVISION,case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END,B.REMARKS,B.TRNDATE,B.BSDATE,ISNULL(A.CHEQUENO,''),ISNULL(A.CHEQUEDATE,''),
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) 
				) AS M
			)A
		ELSE
			Insert into @LedgerTable_tmp
			SELECT  ROW_NUMBER() over(PARTITION by CASE WHEN @REPORTBYCOSTCENTER = 0 THEN A_ACID ELSE COSTCENTER END ORDER BY TRNDATE, VCHRNO) as SNo, TRNDATE, BSDATE, VCHRNO, CHALANNO, PARTICULARS,DRAMNT,CRAMNT,
			CASE WHEN CHARINDEX(CHAR(10),NARATION,0) >0 THEN LEFT(NARATION,LEN(NARATION)-2) ELSE NARATION END as NARATION, 
			null B_ACID,DIVISION,DRAMNT-CRAMNT AS BALANCE,A_ACID,COSTCENTER,REMARKS,STAMP,CHEQUE
			FROM
			(
				--MAIN REPORT QUERY
				--------------------
				SELECT NULL AS TRNDATE, NULL AS BSDATE, NULL AS VCHRNO, NULL AS CHALANNO, 'OPENING BALANCE' AS PARTICULARS,
				CASE WHEN(x.OPBAL >=0) THEN x.OPBAL ELSE 0 END AS DRAMNT, CASE WHEN(x.OPBAL<0) THEN x.OPBAL * -1 ELSE 0 END AS CRAMNT,'' AS NARATION,NULL AS DIVISION,'X001' A_acid,
				'N/A' COSTCENTER,NULL REMARKS,0 STAMP,NULL CHEQUE
				FROM
				(
					SELECT 'AT' A_ACID,'AT' COSTCENTER,
					sum(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END)
					-SUM(case when isnull(FCurrency,'')<>'' and  CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS OPBAL FROM DBO.RMD_TRNTRAN_FN(@FYID) A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION 
					WHERE A.A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV AND 
					(LEFT(A.VCHRNO,2) = 'OB' OR B.TRNDATE < @DATE1) AND ((@COSTCENTER='' and isnull(A.CostCenter,'') like '%') or (@COSTCENTER <> '' and  A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))					
				) as X right join RMD_ACLIST Y on x.A_ACID=Y.ACID WHERE Y.ACID = 'AT'
						
				UNION ALL

				SELECT M.TRNDATE, M.BSDATE,  M.VCHRNO, M.CHALANNO,
				dbo.GetParticularForLedger(M.VCHRNO,M.DIVISION)  AS PARTICULAR, CONVERT(MONEY,CAST(M.DRAMNT AS VARCHAR(25)),2) AS DRAMNT,
				CONVERT(MONEY, CAST(M.CRAMNT AS VARCHAR(25)),1) AS CRAMNT, M.NARATION, M.DIVISION,A_ACID,M.COSTCENTER,
				CASE WHEN M.NARATION = M.REMARKS THEN '' ELSE M.REMARKS END REMARKS,STAMP,
				CASE WHEN ISNULL(M.CHEQUENO,'') <> '' THEN ' Chq. No : ' + CAST(M.ChequeNo AS VARCHAR(25)) +  '  Dt : ' +  CAST(m.chequedate AS VARCHAR(25)) ELSE '' END AS CHEQUE 
				FROM
				(
					SELECT B.TRNDATE,B.BSDATE,B.VCHRNO, B.CHALANNO, A.DIVISION, 'X001' A_ACID, 
					SUM(case when isnull(FCurrency,'')<>'' and  DRAMNT > 1 THEN FCurAmount ELSE 0  END) AS DRAMNT, 
					SUM(case when isnull(FCurrency,'')<>'' and  CRAMNT > 1 THEN FCurAmount ELSE 0  END) AS CRAMNT, case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END  AS NARATION,'N/A' COSTCENTER,ISNULL(B.REMARKS,'')REMARKS,
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) STAMP,ISNULL(A.CHEQUENO,'') CHEQUENO,ISNULL(A.CHEQUEDATE,'') CHEQUEDATE from  
					DBO.RMD_TRNTRAN_FN(@FYID) AS A INNER JOIN DBO.RMD_TRNMAIN_FN(0,@FYID) B ON A.VCHRNO=B.VCHRNO AND A.DIVISION=B.DIVISION 
					WHERE A_ACID IN (select * from dbo.split(@acid,',')) AND A.DIVISION LIKE @DIV  AND (B.TRNDATE >= @DATE1 AND B.TRNDATE <= @DATE2)
					AND A.VCHRNO NOT LIKE 'OB%'  and ((@COSTCENTER='' AND isnull(A.CostCenter,'') LIKE '%') OR (@COSTCENTER <> '' AND A.CostCenter IN (SELECT * FROM dbo.SPLIT(@COSTCENTER,','))))
					GROUP BY B.VCHRNO,B.CHALANNO,A.DIVISION,case when isnull(NARATION1,'')='' then NARATION ELSE NARATION1 END,B.REMARKS,B.TRNDATE,B.BSDATE,ISNULL(A.CHEQUENO,''),ISNULL(A.CHEQUEDATE,''),
					ISNULL(B.STAMP,convert(float,convert(datetime,B.TRNDATE + ' ' + ISNULL(B.TRNTIME,'00:01:00')))) 
				) AS M
			)A
	END

END

--SELECT * FROM @LedgerTable_tmp

--PREPARING RECORD WITH RUNNING TOTAL
-------------------------------------
Declare  LedgerCursor Cursor for select Sno,A_Acid,Dramnt,Cramnt,trndate,Bsdate,vchrno,Chalanno,particulars,naration,B_acid,division,Ccenter,Rmk,stamp,Cheque from @Ledgertable_tmp
open LedgerCursor
fetch next from LedgerCursor into @Sno,@A_Acid,@Dramnt,@cramnt,@trndate,@Bsdate,@vchrno,@Chalanno,@particulars,@naration,@B_acid,@division,@Ccenter,@Rmk,@stamp,@CHEQUE
while @@fetch_status=0
Begin
	if @REPORTBYCOSTCENTER = 0
		begin
		if @A_Acid <> @A_Acid_tmp 
			Begin
				set @RunningTotal=0
				set @A_Acid_tmp=@A_Acid
			end
		Set @RunningTotal=@Runningtotal+@Dramnt-@Cramnt
		insert into @LedgerTable Values (@sno,@trndate,@bsdate,@vchrno,@chalanno,@particulars,@Dramnt ,@Cramnt ,@naration ,@B_acid ,@division ,@RunningTotal,@A_acid,@ccenter,@rmk,@stamp,@CHEQUE)
		fetch next from LedgerCursor into @Sno,@A_Acid,@Dramnt,@cramnt,@trndate,@Bsdate,@vchrno,@Chalanno,@particulars,@naration,@B_acid,@division,@Ccenter,@Rmk,@stamp,@CHEQUE
		end
	else
		begin
		if @Ccenter <> @A_Acid_tmp 
			Begin
				set @RunningTotal=0
				set @A_Acid_tmp=@ccenter
			end
		Set @RunningTotal=@Runningtotal+@Dramnt-@Cramnt
		insert into @LedgerTable Values (@sno,@trndate,@bsdate,@vchrno,@chalanno,@particulars,
				@Dramnt ,@Cramnt ,@naration ,@B_acid ,@division ,@RunningTotal,@A_acid,@ccenter,@rmk,@stamp,@CHEQUE)
		fetch next from LedgerCursor into @Sno,@A_Acid,@Dramnt,@cramnt,@trndate,@Bsdate,@vchrno,@Chalanno,@particulars,@naration,@B_acid,@division,@Ccenter,@Rmk,@stamp,@CHEQUE 
		end
End
Close LedgerCursor
Deallocate LedgerCursor

--select * from @LedgerTable order by a_acid,sno
--select * from @LedgerTable order by ccenter,sno

--PREPARING REPORT OUTPUT
--------------------------
if 	@REPORTBYCOSTCENTER = 0 
	BEGIN

		SELECT [DATE],VNO,PARTICULAR,CONVERT(VARCHAR,CAST(DRAMNT AS MONEY),1) DRAMNT,CONVERT(VARCHAR,CAST(CRAMNT AS MONEY),1) CRAMNT,BALANCE,B_ACID,DIVISION,XSNO,NULL CCENTER FROM 
		(
		--ACCOUNT NAME

		SELECT 0 SNO,NULL AS [DATE],NULL VNO,'A/C : ' + UPPER(Y.ACNAME)  AS PARTICULAR,NULL AS DRAMNT,NULL AS CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,NULL AS ORD,0 STAMP,A_acid,5 XSNO 
		FROM @LedgerTable X INNER JOIN RMD_ACLIST Y ON X.A_ACID = Y.ACID WHERE @InSingleLedger = 0 GROUP BY A_ACID,Y.ACNAME
 		
		UNION ALL		

		--DETAIL PART
		SELECT A.SNO,CASE WHEN @SHOWNDATE = 1 THEN A.BSDATE ELSE CONVERT(VARCHAR(25),A.TRNDATE,105) END [DATE],
		CASE WHEN UPPER(A.PARTICULARS) <> 'OPENING BALANCE' THEN A.VCHRNO + CASE WHEN A.chalanno <> '' AND A.chalanno <> A.VCHRNO 
		THEN ' (' + A.CHALANNO + ')' ELSE '' END ELSE '' END VNO,
		CASE WHEN UPPER(A.PARTICULARS) <> 'OPENING BALANCE' THEN A.PARTICULARS ELSE A.PARTICULARS END PARTICULARS,A.DRAMNT,A.CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(A.BALANCE) AS MONEY),1) + CASE WHEN A.BALANCE >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		A.B_ACID,A.DIVISION,'A' ORD,A.STAMP,A_acid, CASE WHEN UPPER(A.PARTICULARS) = 'OPENING BALANCE' then 10 else 0 end XSNO  FROM @LedgerTable A

		UNION ALL
		--ITEM DETAIL 
		SELECT X.SNO,NULL [DATE],NULL VNO, CAST(B.SNO AS VARCHAR(25)) + '. ' + LEFT(A.DESCA,30) + '  (@' + CAST(B.RATE AS VARCHAR(25)) + ' X ' + CAST(B.QUANTITY AS VARCHAR(25)) + ' = ' + CAST(B.AMOUNT AS VARCHAR(25)) +')' [PARTICULARS],
		NULL DRAMNT, NULL CRAMNT,NULL BALANCE,NULL B_ACID,X.DIVISION,'A1' ORD,X.STAMP,X.A_acid,ISNULL(B.SNO,0) XSNO  FROM @LedgerTable X INNER JOIN DBO.RMD_TRNPROD_FN(0,@FYID) B ON X.vchrno = B.VCHRNO AND 
		X.DIVISION = B.DIVISION INNER JOIN MENUITEM A ON B.MCODE = A.MCODE WHERE @SHOWPRODUCTDETAIL = 1

		UNION ALL
		--NARATION
		SELECT Sno,'' AS [DATE], '                    Nar :' VNO,  X.naration + ' ' + case when x.cheque <> '' then x.Cheque else '' end  AS PARTICULAR,NULL AS DRAMNT,NULL AS CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'C' AS ORD,0 STAMP,A_acid,100 XSNO  
		FROM @LedgerTable X LEFT JOIN RMD_ACLIST Y ON X.A_ACID = Y.ACID WHERE ISNULL(X.NARATION,'') <> '' 
		GROUP BY A_ACID,X.naration,x.vchrno,sno,cheque,case when x.cheque <> '' then x.Cheque else '' end

		UNION ALL

		SELECT Sno,'' [DATE],'                    Rmk :' VNO, X.rmk  AS PARTICULAR,NULL AS DRAMNT,NULL AS CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'D' AS ORD,0 STAMP,A_acid,100 XSNO  
		FROM @LedgerTable X LEFT JOIN RMD_ACLIST Y ON X.A_ACID = Y.ACID WHERE ISNULL(X.rmk,'') <> '' GROUP BY A_ACID,X.rmk,x.vchrno,sno

		UNION ALL
		--BLANK
		SELECT MAX(SNO)+1,NULL AS [DATE],NULL VNO,NULL AS PARTICULAR,NULL DRAMNT, NULL CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'E' AS ORD,0 STAMP, A_acid,0 XSNO
		FROM @LedgerTable GROUP BY A_ACID

		UNION ALL	
		--RUNNING TOTAL
		
		SELECT MAX(SNO)+2,NULL AS [DATE],NULL VNO,'RUNNING TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS MONEY),1) + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'F' AS ORD,0 STAMP,A_ACID A_acid,1000 XSNO
		FROM @LedgerTable WHERE PARTICULARS NOT LIKE 'OPENING BALANCE' GROUP BY A_ACID

		UNION ALL	
		--LEDGER TOTAL
		SELECT MAX(SNO)+3,NULL AS [DATE],NULL VNO,'LEDGER TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS MONEY),1) + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'F' AS ORD,0 STAMP,A_ACID A_acid,1000 XSNO
		FROM @LedgerTable GROUP BY A_ACID

		UNION ALL
		--BLANK
		SELECT MAX(SNO)+4,NULL AS [DATE],NULL VNO,NULL AS PARTICULAR,NULL DRAMNT, NULL CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'G' AS ORD,0 STAMP, A_acid,0 XSNO
		FROM @LedgerTable WHERE @HASMULTILEDGER = 1 AND @InSingleLedger = 0  GROUP BY A_ACID

		UNION ALL
		--GRAND TOTAL OPENING
		SELECT MAX(SNO)+5,NULL AS [DATE],NULL VNO,'GRAND TOTAL OPENING >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'H' AS ORD,0 STAMP, 'Z0000001' A_acid,1000 XSNO 
		FROM @LedgerTable WHERE PARTICULARS  = 'OPENING BALANCE' AND @HASMULTILEDGER = 1 AND @InSingleLedger = 0 

		UNION ALL
		--GRAND TOTAL RUNNING TOTAL
		SELECT MAX(SNO)+6,NULL AS [DATE],NULL VNO,'GRAND RUNNING TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS MONEY),1) + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'I' AS ORD,0 STAMP,'Z0000001' A_acid,1000 XSNO
		FROM @LedgerTable WHERE PARTICULARS NOT LIKE 'OPENING BALANCE' AND @HASMULTILEDGER = 1 AND @InSingleLedger = 0 

		UNION ALL
		--GRAND TOTAL
		SELECT MAX(SNO)+7,NULL AS [DATE],NULL VNO,'GRAND TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS MONEY),1)  + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'J' AS ORD,0 STAMP,'Z0000001' A_acid,1000 XSNO 
		FROM @LedgerTable WHERE @HASMULTILEDGER = 1 AND @InSingleLedger = 0 

		) A WHERE SNO IS NOT NULL ORDER BY A_ACID,SNO,ORD,STAMP,XSNO

	END
ELSE

BEGIN

	SELECT [DATE],VNO,PARTICULAR,CONVERT(VARCHAR,CAST(DRAMNT AS MONEY),1) DRAMNT,CONVERT(VARCHAR,CAST(CRAMNT AS MONEY),1) CRAMNT,BALANCE,B_ACID,DIVISION,XSNO,CCENTER FROM 
		(
		--ACCOUNT NAME

		SELECT 0 SNO,NULL AS [DATE],NULL VNO,'A/C : ' + UPPER(Y.ACNAME)  AS PARTICULAR,NULL AS DRAMNT,NULL AS CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,NULL AS ORD,0 STAMP,A_acid,5 XSNO,NULL CCENTER 
		FROM @LedgerTable X INNER JOIN RMD_ACLIST Y ON X.A_ACID = Y.ACID GROUP BY A_ACID,Y.ACNAME
 		
		UNION ALL

		SELECT 0 SNO,NULL AS [DATE],NULL VNO,'Sub Ledger : ' + UPPER(X.CCENTER)  AS PARTICULAR,NULL AS DRAMNT,NULL AS CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,NULL AS ORD,0 STAMP,A_acid,5 XSNO,X.CCENTER 
		FROM @LedgerTable X INNER JOIN RMD_ACLIST Y ON X.A_ACID = Y.ACID GROUP BY A_ACID,X.CCENTER
 		
		UNION ALL

		--DETAIL PART
		SELECT A.SNO,CASE WHEN @SHOWNDATE = 1 THEN A.BSDATE ELSE CONVERT(VARCHAR(25),A.TRNDATE,105) END [DATE],
		A.VCHRNO + CASE WHEN A.chalanno <> '' AND A.chalanno <> A.VCHRNO THEN ' (' + A.CHALANNO + ')' ELSE '' END VNO,
		CASE WHEN UPPER(A.PARTICULARS) <> 'OPENING BALANCE' THEN A.PARTICULARS + ' #: ' + A.VCHRNO + 
		CASE WHEN A.chalanno <> '' AND A.chalanno <> A.VCHRNO THEN ' (' + A.CHALANNO + ')' ELSE '' END 
		ELSE A.PARTICULARS END PARTICULARS,A.DRAMNT,A.CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(A.BALANCE) AS MONEY),1) + CASE WHEN A.BALANCE >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,A.DIVISION,'A' ORD,A.STAMP,A_acid,CASE WHEN UPPER(A.PARTICULARS) = 'OPENING BALANCE' then 10 else 0 end XSNO,A.CCENTER  FROM @LedgerTable A

		UNION ALL
		--ITEM DETAIL 
		SELECT X.SNO,NULL [DATE],NULL VNO,'   ' + CAST(B.SNO AS VARCHAR(25)) + '. ' + LEFT(A.DESCA,30) + '  (@' + CAST(B.RATE AS VARCHAR(25)) + ' X ' + CAST(B.QUANTITY AS VARCHAR(25)) + ' = ' + CAST(B.AMOUNT AS VARCHAR(25)) +')' [PARTICULARS],
		NULL DRAMNT, NULL CRAMNT,NULL BALANCE,NULL B_ACID,X.DIVISION,'A1' ORD,X.STAMP,X.A_acid,ISNULL(B.SNO,0) XSNO,X.CCENTER  FROM @LedgerTable X INNER JOIN DBO.RMD_TRNPROD_FN(0,@FYID) B ON X.vchrno = B.VCHRNO AND 
		X.DIVISION = B.DIVISION INNER JOIN MENUITEM A ON B.MCODE = A.MCODE WHERE @SHOWPRODUCTDETAIL = 1

		UNION ALL
		--NARATION
		SELECT Sno,NULL [DATE],NULL VNO,' Nar : ' + X.naration + ' ' + case when x.cheque <> '' then x.Cheque else '' end  AS PARTICULAR,NULL AS DRAMNT,NULL AS CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'C' AS ORD,100 STAMP,A_acid,0 XSNO,X.CCENTER  
		FROM @LedgerTable X INNER JOIN RMD_ACLIST Y ON X.A_ACID = Y.ACID WHERE ISNULL(X.NARATION,'') <> '' GROUP BY A_ACID,X.naration,x.vchrno,sno,X.CCENTER,case when x.cheque <> '' then x.Cheque else '' end

		UNION ALL

		SELECT Sno,NULL [DATE],NULL VNO,' Rmk : ' + X.rmk  AS PARTICULAR,NULL AS DRAMNT,NULL AS CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'D' AS ORD,100 STAMP,A_acid,0 XSNO,X.CCENTER
		FROM @LedgerTable X INNER JOIN RMD_ACLIST Y ON X.A_ACID = Y.ACID WHERE ISNULL(X.rmk,'') <> '' GROUP BY A_ACID,X.rmk,x.vchrno,sno,X.CCENTER

		UNION ALL
		--BLANK
		SELECT MAX(SNO)+1,NULL AS [DATE],NULL VNO,NULL AS PARTICULAR,NULL DRAMNT, NULL CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'E' AS ORD,0 STAMP, A_acid,0 XSNO,CCENTER
		FROM @LedgerTable GROUP BY CCENTER,A_ACID

		UNION ALL	
		--RUNNING TOTAL
		SELECT MAX(SNO)+2,NULL AS [DATE],NULL VNO,'RUNNING TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS VARCHAR(25))  + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'F' AS ORD,0 STAMP,A_ACID A_acid,1000 XSNO,CCENTER
		FROM @LedgerTable WHERE PARTICULARS NOT LIKE 'OPENING BALANCE' GROUP BY A_ACID,CCENTER

		UNION ALL	
		--LEDGER TOTAL
		SELECT MAX(SNO)+3,NULL AS [DATE],NULL VNO,'LEDGER TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS MONEY),1)  + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'F' AS ORD,0 STAMP,A_ACID A_acid,1000 XSNO,CCENTER
		FROM @LedgerTable GROUP BY A_ACID,CCENTER

		UNION ALL
		--BLANK
		SELECT MAX(SNO)+4,NULL AS [DATE],NULL VNO,NULL AS PARTICULAR,NULL DRAMNT, NULL CRAMNT,NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'G' AS ORD,0 STAMP, A_acid,0 XSNO,CCENTER
		FROM @LedgerTable WHERE @HASMULTILEDGER = 1 AND @InSingleLedger = 0  GROUP BY A_ACID,CCENTER

		UNION ALL
		--GRAND TOTAL OPENING
		SELECT MAX(SNO)+5,NULL AS [DATE],NULL VNO,'GRAND TOTAL OPENING >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		NULL BALANCE,NULL B_ACID,NULL AS DIVISION,'H' AS ORD,0 STAMP, 'Z0000001' A_acid,1000 XSNO,'ZZZZZZZZZZZZZZZZZZ'CCENTER 
		FROM @LedgerTable WHERE PARTICULARS  = 'OPENING BALANCE' AND @HASMULTILEDGER = 1  AND @InSingleLedger = 0 

		UNION ALL
		--GRAND TOTAL RUNNING TOTAL
		SELECT MAX(SNO)+6,NULL AS [DATE],NULL VNO,'GRAND RUNNING TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS MONEY),1) + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'I' AS ORD,0 STAMP,'Z0000001' A_acid,1000 XSNO,'ZZZZZZZZZZZZZZZZZZ'CCENTER 
		FROM @LedgerTable WHERE PARTICULARS NOT LIKE 'OPENING BALANCE' AND @HASMULTILEDGER = 1 AND @InSingleLedger = 0 

		UNION ALL
		--GRAND TOTAL
		
		SELECT MAX(SNO)+7,NULL AS [DATE],NULL VNO,'GRAND TOTAL >>' PARTICULAR,SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT,
		CONVERT(VARCHAR,CAST(ABS(SUM(DRAMNT)- SUM(CRAMNT)) AS MONEY),1) + CASE WHEN SUM(DRAMNT)- SUM(CRAMNT) >=0 THEN ' DR' ELSE ' CR' END BALANCE,
		NULL B_ACID,NULL AS DIVISION,'J' AS ORD,0 STAMP,'Z0000001' A_acid,1000 XSNO,'ZZZZZZZZZZZZZZZZZZ'CCENTER  
		FROM @LedgerTable WHERE @HASMULTILEDGER = 1 AND @InSingleLedger = 0 

		) A WHERE SNO IS NOT NULL ORDER BY CCENTER,SNO,ORD,STAMP,XSNO

END

