CREATE OR ALTER PROCEDURE [dbo].[NSP_GROUPLEDGER]
--DECLARE 
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@DIV VARCHAR(3) = '%',
	@PARENT VARCHAR(25) = '%',
	@ACTYPE VARCHAR(2) = '%',
	@SHOWINDETAIL TINYINT = 0,
	@ISPARYGROUPLEDGER TINYINT = 0,
	@FYID VARCHAR(10) = '%'	  
AS

--SET @DATE1 = '07-17-15'; SET @DATE2 = '07-16-16'; SET @DIV = '%';SET @PARENT = 'BS';SET @ACTYPE = '%'
set nocount on

DECLARE @OPDR NUMERIC(24,10)=0,@DDR NUMERIC(24,10)=0,@DCR NUMERIC(24,10)=0,@DEBTORS NUMERIC(24,10)=0
DECLARE @OPCR NUMERIC(24,10)=0,@CDR NUMERIC(24,10)=0,@CCR NUMERIC(24,10)=0,@CREDITORS NUMERIC(24,10)=0
if @ACTYPE = 'DI' OR @ACTYPE = 'DE' OR @ACTYPE = 'II' OR @ACTYPE = 'IE' OR @ACTYPE = 'PA' 
	GOTO JUMP

if @ACTYPE = 'AT' OR @ACTYPE = '%'	
	SELECT 
	@OPDR = SUM(CASE WHEN A.VCHRNO LIKE 'AO%' OR A.TRNDATE< @DATE1 THEN DRAMNT-CRAMNT ELSE 0 END),
	@DDR= SUM(CASE WHEN A.VCHRNO NOT LIKE 'AO%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN DRAMNT ELSE 0 END),
	@DCR = SUM(CASE WHEN A.VCHRNO NOT LIKE 'AO%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN CRAMNT ELSE 0 END),
	@DEBTORS = SUM(DRAMNT) - SUM(CRAMNT) 
	FROM DBO.RMD_TRNMAIN_FN(0,@FYID) A INNER JOIN DBO.RMD_TRNTRAN_FN(@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND ISNULL(A.PHISCALID,'') = ISNULL(B.PHISCALID,'') 
	INNER JOIN RMD_ACLIST  C ON B.A_ACID = C.ACID 
	WHERE A.TRNDATE <= @DATE2 AND ISNULL(A.DIVISION,'') LIKE @DIV AND C.ACID LIKE 'PA%' AND C.PTYPE = 'C' --AND ISNULL(B.COSTCENTER,'') LIKE @CCENTER
	
if @ACTYPE = 'LB' OR @ACTYPE = '%'	
	SELECT 
	@OPCR = SUM(CASE WHEN A.VCHRNO LIKE 'AO%' OR A.TRNDATE< @DATE1 THEN DRAMNT-CRAMNT ELSE 0 END),
	@CDR= SUM(CASE WHEN A.VCHRNO NOT LIKE 'AO%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN DRAMNT ELSE 0 END),
	@CCR = SUM(CASE WHEN A.VCHRNO NOT LIKE 'AO%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN CRAMNT ELSE 0 END),
	@CREDITORS = SUM(DRAMNT) - SUM(CRAMNT) 
	FROM DBO.RMD_TRNMAIN_FN(0,@FYID) A INNER JOIN DBO.RMD_TRNTRAN_FN(@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND ISNULL(A.PHISCALID,'') = ISNULL(B.PHISCALID,'') 
	INNER JOIN RMD_ACLIST  C ON B.A_ACID = C.ACID 
	WHERE A.TRNDATE <= @DATE2 AND ISNULL(A.DIVISION,'') LIKE @DIV AND C.ACID LIKE 'PA%' AND C.PTYPE = 'V'  --AND ISNULL(B.COSTCENTER,'') LIKE @CCENTER

JUMP:
	
IF OBJECT_ID('TEMPDB..#FINALRECORD') is not null drop table #FINALRECORD
CREATE TABLE #FINALRECORD (A_ACID VARCHAR(20),OPENING_BL NUMERIC(24,12),RUNNING_DR NUMERIC(24,12),RUNNING_CR NUMERIC(24,12),CLOSING_BL NUMERIC(24,12),PARENT VARCHAR(25),MAINGROUP VARCHAR(25))

IF @ISPARYGROUPLEDGER = 0
	INSERT INTO #FINALRECORD (A_ACID,OPENING_BL,RUNNING_DR,RUNNING_CR,CLOSING_BL,PARENT,MAINGROUP)
	SELECT * FROM
	(
	SELECT A_ACID,
	OPENING_BL = SUM(CASE WHEN A.VCHRNO LIKE 'OP%' OR A.TRNDATE< @DATE1 THEN DRAMNT-CRAMNT ELSE 0 END),
	RUNNING_DR = SUM(CASE WHEN A.VCHRNO NOT LIKE 'OP%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN DRAMNT ELSE 0 END),
	RUNNING_CR = SUM(CASE WHEN A.VCHRNO NOT LIKE 'OP%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN CRAMNT ELSE 0 END),
	CLOSING_BL = SUM(DRAMNT) - SUM(CRAMNT),C.PARENT SUBGROUP,C.MAINGROUP 
	FROM DBO.RMD_TRNMAIN_FN(0,@FYID) A INNER JOIN DBO.RMD_TRNTRAN_FN(@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND ISNULL(A.PHISCALID,'') = ISNULL(B.PHISCALID,'') 
	INNER JOIN RMD_ACLIST  C ON B.A_ACID = C.ACID 
	WHERE A.TRNDATE <= @DATE2 AND ISNULL(A.DIVISION,'') LIKE @DIV AND C.ACID NOT LIKE 'PA%' -- AND ISNULL(B.COSTCENTER,'') LIKE @CCENTER
	GROUP BY A_ACID,C.PARENT,C.MAINGROUP
	UNION ALL
	SELECT A.ACID,OPDR,DDR,DCR,DEBTORS,B.PARENT,B.MAINGROUP FROM (SELECT 'AT01001' ACID, @OPDR OPDR,@DDR DDR,@DCR DCR,@DEBTORS DEBTORS) A INNER JOIN RMD_ACLIST B ON A.ACID = B.ACID
	UNION ALL
	SELECT A.ACID,OPCR,CDR,CCR,CREDITORS,B.PARENT,B.MAINGROUP FROM (SELECT 'LB01001' ACID, @OPCR OPCR,@CDR CDR,@CCR CCR,@CREDITORS CREDITORS) A INNER JOIN RMD_ACLIST B ON A.ACID = B.ACID
	) A
ELSE
	INSERT INTO #FINALRECORD (A_ACID,OPENING_BL,RUNNING_DR,RUNNING_CR,CLOSING_BL,PARENT,MAINGROUP)
	SELECT * FROM
	(
	SELECT A_ACID,
	OPENING_BL = SUM(CASE WHEN A.VCHRNO LIKE 'AO%' OR A.TRNDATE< @DATE1 THEN DRAMNT-CRAMNT ELSE 0 END),
	RUNNING_DR = SUM(CASE WHEN A.VCHRNO NOT LIKE 'AO%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN DRAMNT ELSE 0 END),
	RUNNING_CR = SUM(CASE WHEN A.VCHRNO NOT LIKE 'AO%' AND A.TRNDATE BETWEEN @DATE1 AND @DATE2  THEN CRAMNT ELSE 0 END),
	CLOSING_BL = SUM(DRAMNT) - SUM(CRAMNT),C.PARENT SUBGROUP,C.MAINGROUP 
	FROM DBO.RMD_TRNMAIN_FN(0,@FYID) A INNER JOIN DBO.RMD_TRNTRAN_FN(@FYID) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND ISNULL(A.PHISCALID,'') = ISNULL(B.PHISCALID,'') 
	INNER JOIN RMD_ACLIST  C ON B.A_ACID = C.ACID 
	WHERE A.TRNDATE <= @DATE2 AND ISNULL(A.DIVISION,'') LIKE @DIV AND C.ACID LIKE 'PA%' -- AND ISNULL(B.COSTCENTER,'') LIKE @CCENTER
	GROUP BY A_ACID,C.PARENT,C.MAINGROUP
	) A


IF OBJECT_ID('TEMPDB..#TREE') is not null drop table #TREE

select A.ID,A.ACID,A.PARENT,A.TYPE,A.LEVEL,A.ACCODE,A.ACNAME,B.OPENING_BL,B.RUNNING_DR,B.RUNNING_CR,B.CLOSING_BL
INTO #TREE from dbo.TreeExpandFunction_Account(@PARENT,'',0,0,0,@ISPARYGROUPLEDGER) AS A
LEFT JOIN #FINALRECORD B ON A.ACID=B.A_ACID


--GRAND TOTAL
--------------
IF OBJECT_ID('TEMPDB..#TOTAL') is not null drop table #TOTAL
SELECT 'TOTAL >>' ACNAME,SUM(ISNULL(OPENING_BL,0)) OPENING_BL,SUM(ISNULL(RUNNING_DR,0))RUNNING_DR, SUM(ISNULL(RUNNING_CR,0))RUNNING_CR,SUM(ISNULL(CLOSING_BL,0)) CLOSING_BL
INTO #TOTAL FROM #TREE 

DECLARE @LVL INT
select @LVL=MAX(LEVEL) from #TREE 

WHILE @lvl > 0
BEGIN
	UPDATE A SET A.OPENING_BL = B.OPENING_BL,A.RUNNING_DR = B.RUNNING_DR,A.RUNNING_CR = B.RUNNING_CR,A.CLOSING_BL = B.CLOSING_BL
	FROM #TREE A INNER JOIN
	(
		SELECT PARENT,SUM(ISNULL(OPENING_BL,0)) OPENING_BL,SUM(ISNULL(RUNNING_DR,0))RUNNING_DR, SUM(ISNULL(RUNNING_CR,0))RUNNING_CR,SUM(ISNULL(CLOSING_BL,0)) CLOSING_BL
		FROM #TREE WHERE LEVEL = @LVL 
		GROUP BY PARENT
	) B ON A.ACID = B.PARENT

    SET @lvl = @lvl - 1;
END

SELECT CASE WHEN TYPE = 'G' THEN UPPER(A.ACNAME) ELSE A.ACNAME END ACNAME,
CONVERT(VARCHAR,CAST(ABS(OPENING_BL) AS MONEY),1) OPENING_BL,CASE WHEN OPENING_BL>=0 THEN ' DR' ELSE ' CR' END O_DRCR,
CONVERT(VARCHAR,CAST(RUNNING_DR AS MONEY),1) RUNNING_DR,CONVERT(VARCHAR,CAST(RUNNING_CR AS MONEY),1) RUNNING_CR,
CONVERT(VARCHAR,CAST(ABS(CLOSING_BL) AS MONEY),1) CLOSING_BL,CASE WHEN CLOSING_BL>=0 THEN ' DR' ELSE ' CR' END C_DRCR,A.ACID,A.TYPE 
FROM #TREE A WHERE (@SHOWINDETAIL = 0 AND LEVEL = 2) OR (@SHOWINDETAIL = 1 AND LEVEL>1) AND (ABS(OPENING_BL)+RUNNING_DR+RUNNING_CR) <> 0
UNION ALL
SELECT A.ACNAME,
CONVERT(VARCHAR,CAST(ABS(OPENING_BL) AS MONEY),1) OPENING_BL,CASE WHEN OPENING_BL>=0 THEN ' DR' ELSE ' CR' END O_DRCR,
CONVERT(VARCHAR,CAST(RUNNING_DR AS MONEY),1) RUNNING_DR,CONVERT(VARCHAR,CAST(RUNNING_CR AS MONEY),1) RUNNING_DR,
CONVERT(VARCHAR,CAST(ABS(CLOSING_BL) AS MONEY),1) CLOSING_BL,CASE WHEN CLOSING_BL>=0 THEN ' DR' ELSE ' CR' END C_DRCR,'ZZZZZ' ACID,'C' TYPE
FROM #TOTAL A 

IF OBJECT_ID('TEMPDB..#FINALRECORD') is not null drop table #FINALRECORD
IF OBJECT_ID('TEMPDB..#TOTAL') is not null drop table #TOTAL
IF OBJECT_ID('TEMPDB..#TREE') is not null drop table #TREE

set nocount off