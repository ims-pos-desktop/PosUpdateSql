CREATE OR ALTER     PROCEDURE [dbo].[TertiaryDailySalesFootfall]
@DATE1 DATE =NULL,
@DATE2 DATE = NULL,
@DIVISION VARCHAR(3) = '%',
@OPT_VATINCLUSIVE TINYINT = 1
as
--DECLARE @DATE1 DATE ='16-JUL-2018',@DATE2 DATE = '17-DEC-2018',@DIVISION VARCHAR(3) = '%'
DECLARE @FBDATE DATE,@FEDATE DATE
SELECT @FBDATE=FBDATE,@FEDATE = FEDATE FROM COMPANY ;
IF @DATE1 IS NULL SET @DATE1  = @FBDATE;
IF @DATE2 IS NULL SET @DATE2 = @FEDATE;
IF OBJECT_ID('TEMPDB..#NEPALIMONTHS') IS NOT NULL DROP TABLE #NEPALIMONTHS
SELECT * INTO  #NEPALIMONTHS FROM  DATEMITI_FULL WHERE AD BETWEEN @DATE1 AND @DATE2


IF OBJECT_ID('TEMPDB..#NEPMONTHS') IS NOT NULL DROP TABLE #NEPMONTHS

;WITH CTE_Date_Base_Table AS

	(
		SELECT
			@DATE1 AS calendar_date,1 AS DAY_COUNT,1 AS WEEK_COUNT,DATEPART(DW,@DATE1) WEEK_DAY,1 WEEK_DAY_WEEK,AD,SAL,MAHINA,MAHINANAME,GATE,MINDATE
			,MAXDATE,ROW_NUMBER() OVER (ORDER BY AD) SNO FROM #NEPALIMONTHS where AD = @DATE1
		UNION ALL
		SELECT
			DATEADD (DAY, 1, cDBT.calendar_date),
			CASE WHEN cDBT.MAHINA <> b.MAHINA  then 1 else CASE WHEN cDBT.DAY_COUNT < 7 THEN cDBT.DAY_COUNT+1 ELSE 1 END END,
			CASE WHEN cDBT.MAHINA <> b.MAHINA  then 1 else  case when cDBT.DAY_COUNT < 7 then cDBT.WEEK_COUNT ELSE  cDBT.WEEK_COUNT+1 end END,
			DATEPART(DW,B.AD) WEEK_DAY,
			CASE WHEN cDBT.MAHINA <> b.MAHINA  then 1 else  case when DATEPART(DW,B.AD) = 1 then cDBT.WEEK_DAY_WEEK+1 ELSE cDBT.WEEK_DAY_WEEK  end END,
			b.AD ,b.SAL,b.mahina,b.MAHINANAME,B.GATE,b.mindate,b.maxdate,cdbt.sno
		FROM
			CTE_Date_Base_Table cDBT join #NEPALIMONTHS b on  DATEADD (DAY, 1, cDBT.calendar_date)=b.AD
		WHERE
			DATEADD (DAY, 1, cDBT.calendar_date) <= @DATE2 
	)

SELECT
	cDBT.calendar_date,AD,cDBT.DAY_COUNT,cDBT.WEEK_COUNT,MAHINA,MAHINANAME,GATE,MINDATE,MAXDATE,SAL,
	WEEK_DAY,WEEK_DAY_WEEK
	INTO #NEPMONTHS
FROM
	CTE_Date_Base_Table cDBT 
ORDER BY calendar_date 
OPTION
	(MAXRECURSION 0)
	
------------------------------------------------
SELECT A.AD,A.SAL,A.MAHINA,A.MAHINANAME,A.GATE,A.WEEK_COUNT [WEEK],D.WEEK_NAME,B.Footfall,[No of Bill Generated],[Qty Solds], [Value Realized],cast(cast((([No of Bill Generated]/B.Footfall) *100) as decimal(5,2)) as varchar(20)) + '%' [Conversion],[Average Ticket Value],
[Avg Garment Realization],[Avg Basket Size] FROM 
(
	SELECT A.AD,A.SAL,A.MAHINA,A.MAHINANAME,A.GATE,WEEK_COUNT,A.WEEK_DAY, CAST(COUNT(DISTINCT B.VCHRNO) AS DECIMAL(5,2)) [No of Bill Generated],
	SUM(REALQTY) [Qty Solds],
	CASE WHEN @OPT_VATINCLUSIVE = 0 THEN SUM(AMOUNT-DISCOUNT) ELSE SUM(NETAMOUNT) END [Value Realized],
	CASE WHEN @OPT_VATINCLUSIVE = 0 THEN SUM(AMOUNT-DISCOUNT) ELSE SUM(NETAMOUNT) END/CASE WHEN COUNT(DISTINCT B.VCHRNO)=0 THEN NULL ELSE COUNT(DISTINCT B.VCHRNO) END [Average Ticket Value],
	CASE WHEN @OPT_VATINCLUSIVE = 0 THEN SUM(AMOUNT-DISCOUNT) ELSE SUM(NETAMOUNT) END/case WHEN SUM(REALQTY)=0 then null else sum(REALQTY) END [Avg Garment Realization],SUM(REALQTY)/CASE WHEN COUNT(DISTINCT B.VCHRNO)=0 THEN NULL ELSE COUNT(DISTINCT B.VCHRNO) END [Avg Basket Size]
	FROM #NEPMONTHS A LEFT JOIN SALES_TRNMAIN B ON A.AD = B.TRNDATE
	LEFT JOIN  SALES_TRNPROD C ON B.VCHRNO=C.VCHRNO AND B.DIVISION=C.DIVISION 
	AND B.PHISCALID=C.PHISCALID
	WHERE B.DIVISION LIKE @DIVISION AND B.VoucherType IN ('SI', 'TI')
	GROUP BY A.AD,A.SAL,A.MAHINA,A.MAHINANAME,WEEK_COUNT,A.GATE,A.WEEK_DAY) A
LEFT JOIN 
	(
	SELECT A.AD,A.SAL,A.MAHINA,WEEK_COUNT,A.GATE,SUM(B.TOTALFOOTFALLS)  Footfall FROM #NEPMONTHS A LEFT JOIN Footfall B ON A.AD=B.Date
	GROUP BY A.AD,A.SAL,A.MAHINA,WEEK_COUNT,A.GATE
	) B 
ON A.SAL=B.SAL AND A.MAHINA=B.MAHINA AND A.WEEK_COUNT=B.WEEK_COUNT AND A.GATE=B.GATE
LEFT JOIN
(SELECT * FROM  (VALUES(1,'SUNDAY'),(2,'MONDAY'),(3,'TUESDAY'),(4,'WEDNESDAY'),(5,'THURSDAY'),(6,'FRIDAY'),(7,'SATURDAY')) AS WEEKNAMES(WEEK_DAY,WEEK_NAME))
D ON A.WEEK_DAY = D.WEEK_DAY
ORDER BY A.SAL,A.MAHINA,A.WEEK_COUNT,GATE 


DROP TABLE #NEPMONTHS
drop table #NEPALIMONTHS

set nocount off

SELECT * FROM SALES_TRNPROD