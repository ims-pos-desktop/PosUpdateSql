CREATE OR ALTER PROCEDURE [dbo].[TertiaryWeeklyFootFall]
@DATE1 DATE =NULL,
@DATE2 DATE = NULL,
@DIVISION VARCHAR(3) = '%',
@OPT_VATINCLUSIVE TINYINT = 1
as
--DECLARE @DATE1 DATE ='16-JUL-2014',@DATE2 DATE = '17-AUG-2017'
DECLARE @FBDATE DATE,@FEDATE DATE
SELECT @FBDATE=FBDATE,@FEDATE = FEDATE FROM COMPANY ;
IF @DATE1 IS NULL SET @DATE1  = @FBDATE;
IF @DATE2 IS NULL SET @DATE2 = @FEDATE;
IF OBJECT_ID('TEMPDB..#NEPALIMONTHS') IS NOT NULL DROP TABLE #NEPALIMONTHS

SELECT SAL,MAHINA,MAHINANAME,MINDATE,MAXDATE,N,TRNDATE INTO #NEPALIMONTHS FROM 
(
	SELECT SAL,MAHINA,MAHINANAME,MINDATE,MAXDATE,N, DATEADD(DAY,B.N-1,MINDATE) TRNDATE 
	 FROM  
	 (SELECT A.MAHINA,B.MAHINANAME,A.SAL,MIN(AD) MINDATE, MAX(AD) MAXDATE FROM (
		SELECT LEFT(MITI,2) GATE,SUBSTRING(MITI,4,2) MAHINA,SUBSTRING(MITI,7,4) SAL,AD FROM DATEMITI 
		WHERE AD BETWEEN @DATE1 AND @DATE2
		) AS A --NEPMONTH
	inner join NEPMONTH B ON A.MAHINA =B.MAHINA GROUP BY A.MAHINA,B.MAHINANAME,SAL) A   CROSS JOIN Tally B 
	WHERE DATEADD(DAY ,B.N-1,MINDATE) <= MAXDATE 
)A WHERE MINDATE >= @DATE1  AND MAXDATE <= @DATE2 order by mindate

IF OBJECT_ID('TEMPDB..#NEPMONTHS') IS NOT NULL DROP TABLE #NEPMONTHS

;WITH CTE_Date_Base_Table AS

	(
		SELECT
			@DATE1 AS calendar_date,1 AS DAY_COUNT,1 AS WEEK_COUNT,DATEPART(DW,@DATE1) WEEK_DAY,1 WEEK_DAY_WEEK,TRNDATE,SAL,MAHINA,MAHINANAME,MINDATE
			,MAXDATE,ROW_NUMBER() OVER (ORDER BY TRNDATE) SNO FROM #NEPALIMONTHS where TRNDATE = @DATE1
		UNION ALL
		SELECT
			DATEADD (DAY, 1, cDBT.calendar_date),
			CASE WHEN cDBT.MAHINA <> b.MAHINA  then 1 else CASE WHEN cDBT.DAY_COUNT < 7 THEN cDBT.DAY_COUNT+1 ELSE 1 END END,
			CASE WHEN cDBT.MAHINA <> b.MAHINA  then 1 else  case when cDBT.DAY_COUNT < 7 then cDBT.WEEK_COUNT ELSE  cDBT.WEEK_COUNT+1 end END,
			DATEPART(DW,B.TRNDATE) WEEK_DAY,
			CASE WHEN cDBT.MAHINA <> b.MAHINA  then 1 else  case when DATEPART(DW,B.TRNDATE) = 1 then cDBT.WEEK_DAY_WEEK+1 ELSE cDBT.WEEK_DAY_WEEK  end END,
			b.TRNDATE ,b.SAL,b.mahina,b.MAHINANAME,b.mindate,b.maxdate,cdbt.sno
		FROM
			CTE_Date_Base_Table cDBT join #NEPALIMONTHS b on  DATEADD (DAY, 1, cDBT.calendar_date)=b.TRNDATE
		WHERE
			DATEADD (DAY, 1, cDBT.calendar_date) <= @DATE2
	)

SELECT
	cDBT.calendar_date,TRNDATE,cDBT.DAY_COUNT,cDBT.WEEK_COUNT,MAHINA,MAHINANAME,MINDATE,MAXDATE,SAL,
	WEEK_DAY,WEEK_DAY_WEEK
	INTO #NEPMONTHS
FROM
	CTE_Date_Base_Table cDBT 
ORDER BY calendar_date 
OPTION
	(MAXRECURSION 0)
	
------------------------------------------------
SELECT A.SAL,A.MAHINA,A.MAHINANAME,A.WEEK_COUNT [WEEK],B.Footfall,[No of Bill Generated],[Qty Solds], [Value Realized],cast(cast((([No of Bill Generated]/B.Footfall) *100) as decimal(10,2)) as varchar(20)) + '%' [Conversion],[Average Ticket Value],
[Avg Garment Realization],[Avg Basket Size] FROM 
(
SELECT A.SAL,A.MAHINA,A.MAHINANAME,WEEK_COUNT, CAST(COUNT(DISTINCT B.VCHRNO) AS DECIMAL(10,2)) [No of Bill Generated],SUM(REALQTY) [Qty Solds],
CASE WHEN @OPT_VATINCLUSIVE = 0 THEN SUM(AMOUNT-DISCOUNT) ELSE SUM(NETAMOUNT) END [Value Realized],
CASE WHEN @OPT_VATINCLUSIVE = 0 THEN SUM(AMOUNT-DISCOUNT) ELSE SUM(NETAMOUNT) END/COUNT(DISTINCT B.VCHRNO) [Average Ticket Value],
CASE WHEN @OPT_VATINCLUSIVE = 0 THEN SUM(AMOUNT-DISCOUNT) ELSE SUM(NETAMOUNT) END/SUM(REALQTY) [Avg Garment Realization],SUM(REALQTY)/COUNT(DISTINCT B.VCHRNO) [Avg Basket Size]
FROM #NEPMONTHS A LEFT JOIN SALES_TRNMAIN B ON A.TRNDATE = B.TRNDATE
LEFT JOIN  SALES_TRNPROD C ON B.VCHRNO=C.VCHRNO AND B.DIVISION=C.DIVISION 
AND B.PHISCALID=C.PHISCALID
WHERE B.DIVISION LIKE @DIVISION AND B.VoucherType IN ('SI', 'TI')
GROUP BY A.SAL,A.MAHINA,A.MAHINANAME,WEEK_COUNT) A
LEFT JOIN 
(
SELECT A.SAL,A.MAHINA,WEEK_COUNT,SUM(B.TOTALFOOTFALLS)  Footfall FROM #NEPMONTHS A LEFT JOIN Footfall B ON A.TRNDATE=B.Date
GROUP BY A.SAL,A.MAHINA,WEEK_COUNT
) B ON A.SAL=B.SAL AND A.MAHINA=B.MAHINA AND A.WEEK_COUNT=B.WEEK_COUNT
ORDER BY A.SAL,A.MAHINA,A.WEEK_COUNT 

DROP TABLE #NEPMONTHS
drop table #NEPALIMONTHS

set nocount off