CREATE OR ALTER PROCEDURE [dbo].[RSP_BRANCHWISE_CONSOLIDATED_LEDGERS]
--DECLARE
	@DATE1 VARCHAR(25),
	@DATE2 VARCHAR(25),
	@OPT_Summary TINYINT = 2,			--Detail:0,ClosingSummary:1,OpeningSummary:2
	@CHK_STATUS TINYINT = 0,			--Status:1:0
	@CostCenter varchar(25) = '%',
	@OPT_TREE TINYINT=0,				--LedgerWise:0,GroupWise:1
	@FX_ISPARYGROUPLEDGER TINYINT = 0,
	@OPT_DebtorOrCreditor char(1) = 'C',      --Debtors:C,Creditors:V
	@FYID VARCHAR(10) = '%',
	@AREA_ID INT=0,
	@CATEGORY_ID INT =0,
	@ACID VARCHAR(25) = '%',
	@SELECTEDACIDLIST VARCHAR(500) = ''
AS
--SET @DATE1 = '07/16/21';SET @DATE2 = '08/16/21';SET @OPT_Summary = 0;SET @OPT_TREE =0;SET @FYID='78/79'
--SET @SELECTEDACIDLIST = 'AT01002,DE01002'
set nocount on
IF @SELECTEDACIDLIST != ''
SET @ACID = @SELECTEDACIDLIST
if OBJECT_ID('tempdb..#PARTYFILTER') is not null drop table #PARTYFILTER
select * INTO #PARTYFILTER from fnPartyFilter(@AREA_ID,@CATEGORY_ID,@ACID,0,0,0,0,0)

if OBJECT_ID('tempdb..#result') is not null drop table #result
if OBJECT_ID('tempdb..#result1') is not null drop table #result1
if OBJECT_ID('tempdb..#result2') is not null drop table #result2
				
SELECT A.DIVISION, C.ACCODE, C.ACNAME,  
SUM(CASE WHEN A.VoucherType IN ('AO', 'OB') OR B.TRNDATE<@DATE1 THEN DRAMNT-CRAMNT ELSE 0 END ) OPAMNT, 
SUM(CASE WHEN A.VoucherType NOT IN ('AO', 'OB') AND B.TRNDATE BETWEEN @DATE1 AND @DATE2 THEN DRAMNT ELSE 0 END) DRAMNT,
SUM(CASE WHEN A.VoucherType NOT IN ('AO', 'OB')  AND B.TRNDATE BETWEEN @DATE1 AND @DATE2 THEN CRAMNT ELSE 0 END) CRAMNT,
SUM(DRAMNT) - SUM(CRAMNT) AMOUNT, A_ACID ACID ,c.AREA_NAME,c.CATEGORY_NAME
into #result2
FROM RMD_TRNTRAN A INNER JOIN RMD_TRNMAIN B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION INNER JOIN #PARTYFILTER C ON A.A_ACID = C.ACID
WHERE ((@FX_ISPARYGROUPLEDGER = 1 AND LEFT(A_ACID,2) = 'PA') OR (@FX_ISPARYGROUPLEDGER = 0 AND LEFT(A_ACID,2) <> 'PA'))
AND (@FX_ISPARYGROUPLEDGER = 0 OR PTYPE = @OPT_DebtorOrCreditor)  
AND (B.TRNDATE < =  @date2  OR B.VoucherType IN('AO','OB'))
AND ISNULL(A.CostCenter,'') LIKE @CostCenter 
AND B.PhiscalID = @FYID
AND ((@OPT_Summary <> 2 and A.VCHRNO LIKE '%') or (@OPT_Summary = 2 and A.VoucherType IN ('AO', 'OB')))
GROUP BY A.DIVISION, A_ACID,C.ACNAME,C.ACCODE,c.AREA_NAME,c.CATEGORY_NAME
order by ACNAME

SELECT * INTO #result FROM #RESULT2
UNION ALL
SELECT 'ZZZ' DIVISION, ACCODE, ACNAME, OPAMNT, DRAMNT, CRAMNT, AMOUNT, ACID, AREA_NAME, CATEGORY_NAME  FROM #result2

--SELECT * FROM #result
CREATE TABLE TEMPDB..#RESULT1(ID INT, ACID VARCHAR(25), PARENT VARCHAR(25), [TYPE] CHAR(1), [LEVEL] TINYINT, ACCODE VARCHAR(25), ACNAME VARCHAR(250), OPAMNT DECIMAL(22,12), DRAMNT DECIMAL(22,12),CRAMNT DECIMAL(22,12), AMOUNT DECIMAL(22,12), AREA_NAME VARCHAR(250), CATEGORY_NAME VARCHAR(250), DIVISION VARCHAR(3))								

IF @OPT_TREE = 0
	INSERT INTO #RESULT1
	SELECT 0, ACID, '', 'A', 0, ACCODE, ACNAME, OPAMNT, DRAMNT, CRAMNT, AMOUNT, AREA_NAME, CATEGORY_NAME, DIVISION FROM #result
ELSE 
BEGIN
	DECLARE @CUR_ACID VARCHAR(25)
	IF @FX_ISPARYGROUPLEDGER = 0
		SET @CUR_ACID = 'BS'
	ELSE 
		SELECT @CUR_ACID = ACID FROM RMD_ACLIST WHERE PARENT = 'PA' AND PTYPE = @OPT_DebtorOrCreditor
		
	INSERT INTO #RESULT1
	SELECT A.ID,A.ACID,A.PARENT,A.TYPE,A.LEVEL,A.ACCODE,A.ACNAME,B.OPAMNT,B.DRAMNT,B.CRAMNT,B.AMOUNT,B.AREA_NAME,B.CATEGORY_NAME, DIVISION
	FROM dbo.TreeExpandFunction_Account(@CUR_ACID,'LEDGER',0,0,0,@FX_ISPARYGROUPLEDGER) AS A
	LEFT JOIN #RESULT B ON A.ACID=B.ACID
									
	IF OBJECT_ID('TEMPDB..#TOTAL') is not null drop table #TOTAL
	SELECT SUM(ISNULL(OPAMNT,0)) OPAMNT,SUM(ISNULL(DRAMNT,0)) DRAMNT,SUM(ISNULL(CRAMNT,0))CRAMNT, SUM(ISNULL(AMOUNT,0))AMOUNT INTO #TOTAL FROM #RESULT1
	--TOTALING WITH IN TREE
	-----------------------		
	DECLARE @LVL INT
	select @LVL=MAX(LEVEL) from #RESULT1 
	WHILE @lvl > 0
	BEGIN
		UPDATE A SET A.OPAMNT = B.OPAMNT,A.DRAMNT= B.DRAMNT,A.CRAMNT= B.CRAMNT,A.AMOUNT= B.AMOUNT
		FROM #RESULT1 A INNER JOIN
		(
			SELECT PARENT,SUM(ISNULL(OPAMNT,0)) OPAMNT,SUM(ISNULL(DRAMNT,0)) DRAMNT,SUM(ISNULL(CRAMNT,0))CRAMNT, SUM(ISNULL(AMOUNT,0))AMOUNT
			FROM #RESULT1 WHERE LEVEL = @LVL GROUP BY PARENT
		) B ON A.ACID = B.PARENT

		SET @lvl = @lvl - 1;
	END
END
--SELECT * FROM #result1 ORDER BY ID

DECLARE @query  AS VARCHAR(MAX)
	,@colOP  AS NVARCHAR(MAX)
	,@colIN  AS NVARCHAR(MAX)
	,@colOUT  AS NVARCHAR(MAX)
	,@colBAL  AS NVARCHAR(MAX)
	,@colheader  AS NVARCHAR(MAX)
	,@opDrCr AS VARCHAR(MAX) = ''
	,@clDrCr AS VARCHAR(MAX) = ''
	--CONVERT(VARCHAR,CAST(ABS(OPAMNT) AS MONEY),1)

IF @CHK_STATUS = 1
BEGIN
	IF @OPT_Summary = 1
		SET @colheader = 'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL([ZZZ_BAL],0))) AS MONEY),1) + IIF(SUM(ISNULL([ZZZ_BAL],0))>=0, '' DR'', '' CR'') [Grand Total]'
			+',' + STUFF((SELECT distinct ',' +'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL(' + QUOTENAME(INITIAL+'_BAL') +',0))) AS MONEY),1) + IIF(SUM(ISNULL(' + QUOTENAME(INITIAL +'_BAL' ) +',0))>=0, '' DR'', '' CR'')' + QUOTENAME([NAME])
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')
	ELSE IF @OPT_Summary = 2
		SET @colheader = 'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL([ZZZ],0))) AS MONEY),1) + IIF(SUM(ISNULL([ZZZ],0))>=0, '' DR'', '' CR'') [Grand Total]'
				+',' + STUFF((SELECT distinct ',' +'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL(' + QUOTENAME(INITIAL ) +',0))) AS MONEY),1) + IIF(SUM(ISNULL(' + QUOTENAME(INITIAL ) +',0))>=0, '' DR'', '' CR'')'  + QUOTENAME([NAME])
				FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')
	ELSE 
		SET @colheader = 'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL([ZZZ],0))) AS MONEY),1) + IIF(SUM(ISNULL([ZZZ],0))>=0, '' DR'', '' CR'') [ZZZ_OP]'
			+',' + 'CONVERT(DECIMAL(18,2), SUM(ISNULL([ZZZ_DR],0))) [ZZZ_DR]'
			+',' + 'CONVERT(DECIMAL(18,2), SUM(ISNULL([ZZZ_CR],0))) [ZZZ_CR]'
			+',' + 'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL([ZZZ_BAL],0))) AS MONEY),1) + IIF(SUM(ISNULL([ZZZ_BAL],0))>=0, '' DR'', '' CR'') [ZZZ_BAL]'
			+',' + STUFF((SELECT distinct ',' +'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL(' + QUOTENAME(INITIAL ) +',0))) AS MONEY),1) + IIF(SUM(ISNULL(' + QUOTENAME(INITIAL ) +',0))>=0, '' DR'', '' CR'')'  + QUOTENAME([INITIAL]+'_OP')
			+',' +'CONVERT(DECIMAL(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL+'_DR') +',0))) ' +QUOTENAME([INITIAL]+'_DR')
			+',' +'CONVERT(DECIMAL(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL+'_CR') +',0)))' +QUOTENAME([INITIAL]+'_CR')
			+',' +'CONVERT(VARCHAR, CAST(ABS(SUM(ISNULL(' + QUOTENAME(INITIAL+'_BAL') +',0))) AS MONEY),1) + IIF(SUM(ISNULL(' + QUOTENAME(INITIAL +'_BAL' ) +',0))>=0, '' DR'', '' CR'')' +QUOTENAME([INITIAL]+'_BAL')
			FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')
END

ELSE
BEGIN
	IF @OPT_Summary = 1
		SET @colheader = 'CONVERT(NUMERIC(18,2), SUM(ISNULL([ZZZ_BAL],0))) [Grand Total]'
			+',' + STUFF((SELECT distinct ',' +'CONVERT(NUMERIC(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL+'_BAL') +',0)))' + QUOTENAME([NAME])
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')
	ELSE IF @OPT_Summary = 2
		SET @colheader = 'CONVERT(NUMERIC(18,2), SUM(ISNULL([ZZZ],0))) [Grand Total]'
			+ ',' + STUFF((SELECT distinct ',' +'CONVERT(NUMERIC(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL ) +',0)))'  + QUOTENAME([NAME])
			FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')
	ELSE 
		SET @colheader = 'CONVERT(NUMERIC(18,2), SUM(ISNULL([ZZZ],0))) [ZZZ_OP]'
			+',' + 'CONVERT(DECIMAL(18,2), SUM(ISNULL([ZZZ_DR],0))) [ZZZ_DR]'
			+',' + 'CONVERT(DECIMAL(18,2), SUM(ISNULL([ZZZ_CR],0))) [ZZZ_CR]'
			+',' + 'CONVERT(NUMERIC(18,2), SUM(ISNULL([ZZZ_BAL],0))) [ZZZ_BAL]'
			+',' + STUFF((SELECT distinct ',' +'CONVERT(NUMERIC(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL ) +',0)))'  + QUOTENAME([INITIAL]+'_OP')
			+',' +'CONVERT(DECIMAL(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL+'_DR') +',0))) ' +QUOTENAME([INITIAL]+'_DR')
			+',' +'CONVERT(DECIMAL(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL+'_CR') +',0)))' +QUOTENAME([INITIAL]+'_CR')
			+',' +'CONVERT(NUMERIC(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL+'_BAL') +',0)))' +QUOTENAME([INITIAL]+'_BAL')
			FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')
END
PRINT(@COLHEADER)

SET @colOP = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL ) 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'') + ',[ZZZ]'

SET @colIN = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL+'_DR') 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'') + ',[ZZZ_DR]'

SET @colOut = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL+'_CR') 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'') + ',[ZZZ_CR]'

SET @colBal = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL+'_BAL') 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'') + ',[ZZZ_BAL]'

SET  @QUERY ='
SELECT ACID, ACCODE, ACNAME, AREA_NAME [Area], CATEGORY_NAME [Category], [TYPE],  ' + @colheader + ' FROM
(    
    SELECT A.[ID], A.[ACCODE], A.[ACNAME], A.AREA_NAME, A.CATEGORY_NAME, [TYPE], A.DIVISION, A.DIVISION + ''_DR'' DIV_DR
	, A.DIVISION + ''_CR'' DIV_CR, A.DIVISION + ''_BAL'' DIV_BAL
	, A.OPAMNT, A.DRAMNT, A.CRAMNT, A.AMOUNT, A.ACID  FROM #RESULT1 A 
) AS S
PIVOT
(
	SUM(OPAMNT) for DIVISION in ('+@colOP+')
) AS OP
PIVOT
(
	SUM(DRAMNT) for DIV_DR in ('+@colIN+')
) AS I
PIVOT
(
	SUM(CRAMNT) for DIV_CR in ('+@colOUT+')
) AS O
PIVOT
(
	SUM(AMOUNT) for DIV_BAL in ('+@colBAL+')
) AS BAL
GROUP BY [ID], ACCODE, ACNAME, ACID, AREA_NAME, CATEGORY_NAME,[TYPE]
ORDER BY [ID]'
PRINT @QUERY
EXECUTE(@QUERY)

set nocount off
