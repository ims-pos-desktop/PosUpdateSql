CREATE OR ALTER PROCEDURE [dbo].[RSP_DUEVOUCHERREPORT_VTRACK]
--DECLARE
@PLEDGER_ACID VARCHAR(25),
@DATE2 VARCHAR(25),
@AGE1 INTEGER = 0,
@AGE2 INTEGER = 0,
@CHK_SHOWCLEAREDBILLED TINYINT =0,                        --CHK_SHOWCLEAREDBILLED:1:0
@OPT_SHOWSUMMARY_REPORT TINYINT = 0             --Summary:1,Detail:0
AS
set nocount on
DECLARE @BL NUMERIC(18,2) =0
DECLARE @PTYPE CHAR(1) = 'V'
DECLARE @CHECKAGE TINYINT = 0

SELECT @BL= CASE WHEN @PTYPE = 'C' THEN SUM(DRAMNT)-SUM(CRAMNT) ELSE SUM(CRAMNT)-SUM(DRAMNT) END FROM RMD_TRNTRAN A INNER JOIN RMD_TRNMAIN B ON A.VCHRNO =B.VCHRNO AND A.DIVISION = B.DIVISION AND A.PHISCALID = B.PHISCALID
WHERE A_aCID = @PLEDGER_ACID AND B.TRNDATE <= @DATE2

SELECT @PTYPE = PTYPE FROM RMD_ACLIST WHERE ACID = @PLEDGER_ACID
BEGIN
IF @AGE1 = 0 AND @AGE2 = 0
SET @CHECKAGE = 0
ELSE
SET @CHECKAGE = 1
END
IF @OPT_SHOWSUMMARY_REPORT = 1
	SET @PLEDGER_ACID = 'PA%'

if OBJECT_ID('tempdb..#TBL1') is not null drop table #TBL1

SELECT * INTO #TBL1 FROM
(
SELECT A.TRNDATE,A.BSDATE,A.VCHRNO,A.CHALANNO,A.BILLAMOUNT,B.CLRAMOUNT,A.BILLAMOUNT-ISNULL(B.CLRAMOUNT,0)DUEBALANCE, A.DUEDATE,DATEDIFF(DAY,A.TRNDATE, @DATE2) AGE_BILLDATE,CASE WHEN DATEDIFF(DAY,ISNULL(A.DUEDATE,A.TRNDATE), @DATE2)>0 THEN 'MATURED' ELSE 'NON MATURED' END STATUS,A.COSTCENTER,C.NAME DIVISION,A.ACID
FROM
(
SELECT TRNDATE,BSDATE,DUEDATE,VCHRNO,CHALANNO,DIVISION,ACID,SUM(BILLAMOUNT)BILLAMOUNT,COSTCENTER,PHISCALID FROM
(
SELECT A.TRNDATE,A.BSDATE,A.DUEDATE,A.VCHRNO,A.CHALANNO,A.DIVISION,B.A_ACID ACID,CASE WHEN @PTYPE = 'V' THEN B.CRAMNT ELSE B.DRAMNT END BILLAMOUNT,ISNULL(B.COSTCENTER,'') COSTCENTER,A.PhiscalID FROM RMD_TRNMAIN A
INNER JOIN RMD_TRNTRAN B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND ISNULL(A.PHISCALID,'') = ISNULL(B.PHISCALID,'')
INNER JOIN RMD_ACLIST C ON B.A_aCID = C.ACID
WHERE B.A_ACID LIKE @PLEDGER_ACID AND C.PTYPE = 'V'
) A GROUP BY TRNDATE,BSDATE,DUEDATE,VCHRNO,CHALANNO,DIVISION,ACID,COSTCENTER,PHISCALID HAVING SUM(BILLAMOUNT) > 0
)A LEFT JOIN
(
SELECT VCHRNO,REFDIVISION,SUM(AMOUNT) CLRAMOUNT,ACID,PHISCALID FROM RMD_BILLTRACK WHERE ((@PTYPE = 'V' AND VCHRNO NOT LIKE 'DN%') OR (@PTYPE = 'C' AND VCHRNO NOT LIKE 'CN%'))
AND ACID LIKE @PLEDGER_ACID
GROUP BY REFDIVISION,PHISCALID,ACID,VCHRNO
) B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.REFDIVISION AND A.ACID = B.ACID --AND A.PHISCALID = B.PHISCALID
INNER JOIN DIVISION C ON A.DIVISION = C.INITIAL WHERE
(@CHECKAGE = 0 AND DATEDIFF(DAY,A.TRNDATE, @DATE2)>=0) OR (@CHECKAGE = 1 AND (DATEDIFF(DAY,A.TRNDATE, @DATE2) BETWEEN @AGE1 AND @AGE2))
)A WHERE (@CHK_SHOWCLEAREDBILLED = 0 AND DUEBALANCE <> 0) OR (@CHK_SHOWCLEAREDBILLED = 1 AND DUEBALANCE >= -0.0000000000000001)

--select * from #TBL1

--PREPARING RESULT
-------------------

IF @OPT_SHOWSUMMARY_REPORT = 1
SELECT B.ACNAME PARTY_NAME,
SUM(CASE WHEN AGE_BILLDATE<15 THEN DUEBALANCE ELSE 0 END) LESS15DAYS,
SUM(CASE WHEN AGE_BILLDATE>=15 AND AGE_BILLDATE <30 THEN DUEBALANCE ELSE 0 END) x15DAYS,
SUM(CASE WHEN AGE_BILLDATE>=30 AND AGE_BILLDATE <45 THEN DUEBALANCE ELSE 0 END) x30DAYS,
SUM(CASE WHEN AGE_BILLDATE>=45 AND AGE_BILLDATE <60 THEN DUEBALANCE ELSE 0 END) x45DAYS,
SUM(CASE WHEN AGE_BILLDATE>=60 AND AGE_BILLDATE <75 THEN DUEBALANCE ELSE 0 END) x60DAYS,
SUM(CASE WHEN AGE_BILLDATE>=75 AND AGE_BILLDATE <90 THEN DUEBALANCE ELSE 0 END) x75DAYS,
SUM(CASE WHEN AGE_BILLDATE>=90  THEN DUEBALANCE ELSE 0 END) x90DAY,
SUM(DUEBALANCE) TOTAL_BALANCE, SUM(CASE WHEN STATUS = 'MATURED' THEN DUEBALANCE ELSE 0 END) MATURED,B.ACID
FROM #TBL1 A INNER JOIN RMD_ACLIST B ON A.ACID = B.ACID GROUP BY B.ACNAME,B.ACID
ORDER BY B.ACNAME

ELSE
SELECT * FROM
(
SELECT *,'A' FLG,TRNDATE TDATE,VCHRNO VNO FROM #TBL1
UNION ALL
SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'B' FLG,NULL,NULL
UNION ALL
SELECT NULL,NULL,'TOTAL >>',NULL,SUM(BILLAMOUNT)BILLAMOUNT,SUM(CLRAMOUNT) CLRAMOUNT,SUM(DUEBALANCE)DUEBALANCE,NULL,NULL,NULL,NULL,NULL,NULL,'C' FLG,NULL,NULL
FROM #TBL1
UNION ALL
SELECT NULL,NULL,'NON TRACKED AMOUNT >>',NULL,NULL,NULL CLRAMOUNT,(SUM(A.DUEBALANCE)-@BL)*-1 DUEBALANCE,NULL,NULL,NULL,NULL,NULL,NULL,'D' FLG,NULL,NULL FROM #TBL1 A
HAVING (SUM(A.DUEBALANCE)-@BL) <> 0
UNION ALL
SELECT NULL,NULL,'LEDGER BALANCE >>',NULL,NULL,NULL,@BL DUEBALANCE,NULL,NULL,NULL,NULL,NULL,NULL,'E' FLG,NULL,NULL
) A ORDER BY FLG,TDATE,VNO

set nocount off