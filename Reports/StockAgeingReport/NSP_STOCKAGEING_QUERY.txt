CREATE OR ALTER procedure [dbo].[NSP_STOCKAGEING_QUERY]
--DECLARE
 @SUPPLIER AS VARCHAR(25), 
 @DATE DATETIME,
 @D1 NUMERIC,
 @D2 NUMERIC,
 @D3 NUMERIC,
 @D4 NUMERIC,
 @D5 NUMERIC,
 @D6 NUMERIC,
 @PRODUCT VARCHAR(50),
 @DIV VARCHAR(20) ,
 @FLG TINYINT,
 @ByCostRate tinyint=0,
 @WISE VARCHAR(20) ='ITEM',
 @FYID VARCHAR(10) = '%'
AS

--set @ByCostRate=N'0';
--SELECT  @D1=15, @D2=30, @D3=45, @D4=60, @D5=75, @D6=90, @DATE='2023-07-26', @FYID = '79/80', @DIV=N'%', @PRODUCT=N'%', @SUPPLIER=N'%', @FLG=0

DECLARE @DATE1 DATETIME,@DATE2 DATETIME
SELECT @DATE1 = BeginDate FROM PhiscalYear WHERE PhiscalId = @FYID
SET @DATE2 = CONVERT(DATE,@DATE);
IF OBJECT_ID('TEMPDB..#SUMTABLE') IS NOT NULL DROP TABLE #SUMTABLE

--insert sum of total stock till now ie, sum(realqty_in-realqty)
SELECT CASE @WISE WHEN 'ITEM' THEN a.mcode WHEN 'MGROUP' THEN C.MGROUP WHEN 'MENUCAT' THEN C.MCAT END AS MCODE,
SUM(realqty_in-realqty) total 
INTO #SUMTABLE FROM rmd_trnprod_fn(0,@FYID) a 
inner join rmd_trnmain_fn(0,@FYID) b on a.VCHRNO=b.VCHRNO and a.DIVISION = b.DIVISION and a.PhiscalID=b.PhiscalID 
INNER JOIN MENUITEM C ON A.MCODE= C.MCODE 
where A.MCODE LIKE @PRODUCT AND B.TRNDATE BETWEEN @DATE1 AND @DATE2  AND B.DIVISION LIKE @DIV  AND ISNULL(C.SUPCODE,'') LIKE @SUPPLIER
group by CASE @WISE WHEN 'ITEM' THEN a.mcode WHEN 'MGROUP' THEN C.MGROUP WHEN 'MENUCAT' THEN C.MCAT END having sum(realqty_in-realqty) > 0

if OBJECT_ID('TEMPDB..#AGINGTABLE') IS NOT NULL DROP TABLE #AGINGTABLE
--first create a colum that holds the date diff as accoriding to parameter(d1,d2...) passed
--then sum total as per datediff and segregate it to different columns with (a,b,c,)
select mcode,total ,sum(case when days =@D1 then remaining  else 0 end) as D1
,sum(case when days =@D2 then remaining else 0 end) as D2,sum(case when days =@D3 then remaining else 0 end) as D3,
sum(case when days =@D4 then remaining else 0 end) as D4,sum(case when days =@D5 then remaining else 0 end) as D5,
sum(case when days = @D6 then remaining else 0 end) as D6,sum(case when days = 365 then remaining else 0 end) as D7
INTO #AGINGTABLE
from 
(
select A.mcode,a.trndate,a.VCHRNO,b.total,a.REALQTY_IN  ,
DATEDIFF(d,trndate,@DATE) daynos,case when DATEDIFF(d,trndate,@DATE) < @D1  then @D1 
	 when DATEDIFF(d,trndate,@DATE) between @D1  and @D2  then @D2 
	 when DATEDIFF(d,trndate,@DATE) between @D2 and @D3 then @D3 
	 when DATEDIFF(d,trndate,@DATE) between @D3 and @D4 then @D4 
	 when DATEDIFF(d,trndate,@DATE) between @D4 and @D5 then @D5 
	 when DATEDIFF(d,trndate,@DATE) between @D5 and @D6 then @D6 
	 when DATEDIFF(d,trndate,@DATE) > @D6  then 365 end  days
,sum(realqty_in) over(partition by a.mcode order by trndate desc rows unbounded preceding) as cumulative
, case when total - sum(realqty_in) over(partition by a.mcode order by trndate desc rows unbounded preceding) >= 0 
	then realqty_in 
	else total - sum(realqty_in) over(partition by a.mcode order by trndate desc rows unbounded preceding) + realQty_in end as remaining
,REALQTY_IN + total -sum(realqty_in) over(partition by a.mcode order by trndate desc rows unbounded preceding) as minimum
from (
select  CASE @WISE WHEN 'ITEM' THEN a.mcode WHEN 'MGROUP' THEN C.MGROUP WHEN 'MENUCAT' THEN C.MCAT END AS MCODE,b.VCHRNO,b.trndate,a.realqty_in from RMD_TRNPROD_FN(0, @FYID) a inner join rmd_trnmain_FN(0, @FYID) b on a.VCHRNO=b.VCHRNO and a.DIVISION = b.DIVISION and a.PhiscalID=b.PhiscalID 
INNER JOIN MENUITEM C ON A.MCODE= C.MCODE 
where b.VoucherType in ('OP','PI','TR','GR')) as a
left  join #SUMTABLE  as b on a.MCODE=b.MCODE  
) as a where minimum >=0  group by MCODE,total

SELECT null AS SN, B.MENUCODE CODE, CASE WHEN @WISE = 'ITEM'  OR @WISE = 'MGROUP' THEN  B.DESCA ELSE A.MCODE END AS PARTICULAR,VW.[Main Group] ,VW.[Main Category]  ,VW.[Sub Category],vw.[Super Category] ,
D1,D2,D3,D4,D5,D6,D7, B.PRATE_A PRATE, IIF(B.VAT = 1, 1.13,1) * B.PRATE_A PRATE_IncVAT, B.RATE_A SRATE,IIF(B.VAT = 1, 1.13,1) * B.RATE_A SRATE_IncVAT, A.TOTAL,A.MCODE, B.BASEUNIT Unit, AC.ACNAME Supplier
FROM #AGINGTABLE A 
LEFT JOIN MENUITEM B ON A.MCODE= B.MCODE 
LEFT JOIN RMD_ACLIST AC ON B.SUPCODE = AC.ACID
LEFT JOIN vwItemHeirarchy VW ON VW.MCODE=A.MCODE  order by PARTICULAR