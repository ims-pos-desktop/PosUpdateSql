ALTER PROCEDURE [dbo].[NSP_TRIALBALANCE]
--DECLARE 
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@DIV VARCHAR(3) = '%',
	@COSTCENTER VARCHAR(50)='%',
	@SHOWSUBLEDGER TINYINT = 0,
	@SHOWDEBTORSCREDITORS TINYINT= 0,
	@ONLYOPENINGTRIAL TINYINT = 0,
	@SUMMARYREPORT TINYINT = 0,
	@LEV TINYINT = 1,
	@LEDGERWISE TINYINT = 0,
	@SHOWVALUEINNET TINYINT = 1,
	@SHOWZEROBL TINYINT = 0
AS

set nocount on

--SET @DATE1 = '07-15-2016';SET @DATE2 = '06/27/17'; SET @DIV = 'HOF'; SET @SHOWSUBLEDGER =1; set @SHOWDEBTORSCREDITORS = 1; SET @ONLYOPENINGTRIAL = 0
--SET @SUMMARYREPORT = 0; SET @LEDGERWISE = 0
DECLARE @BDT DATETIME
SELECT @BDT = FBDATE FROM COMPANY


DECLARE @DIVISIONWISESTOCK TINYINT
SELECT @DIVISIONWISESTOCK = ISNULL(DivisionwiseWareHouse,0) FROM SETTING

DECLARE @OSTOCK NUMERIC(24,12)
if @DIVISIONWISESTOCK = 0
	SELECT @OSTOCK = SUM(A.REALQTY_IN * A.REALRATE) FROM RMD_TRNPROD A INNER JOIN MENUITEM C ON A.MCODE = C.MCODE WHERE A.VCHRNO LIKE 'OP%' AND ISNULL(C.PTYPE,0) <10 
	AND WAREHOUSE NOT IN (SELECT NAME FROM RMD_WAREHOUSE WHERE ISNULL(ISADJUSTMENT,0) = 1)
ELSE
	SELECT @OSTOCK = SUM(A.REALQTY_IN * A.REALRATE)FROM RMD_TRNPROD A INNER JOIN MENUITEM C ON A.MCODE = C.MCODE WHERE A.VCHRNO LIKE 'OP%' AND ISNULL(C.PTYPE,0) <10 
	AND ISNULL(A.WAREHOUSE,'') IN (SELECT NAME FROM RMD_WAREHOUSE WHERE ISNULL(IsAdjustment,0) =0 AND ISNULL(ISVIRTUAL,0)=0 AND ISNULL(DIVISION,'') LIKE @DIV)
	

IF OBJECT_ID('TEMPDB..#TRNTRAN') is not null drop table #TRNTRAN
CREATE TABLE #TRNTRAN (A_ACID VARCHAR(20),DRAMNT NUMERIC(24,12),CRAMNT NUMERIC(24,12),TRNDATE DATETIME,VCHRNO VARCHAR(25))

INSERT INTO #TRNTRAN
SELECT * FROM 
(
SELECT A.A_ACID,A.DRAMNT,A.CRAMNT,B.TRNDATE,A.VCHRNO FROM RMD_TRNTRAN A INNER JOIN RMD_TRNMAIN B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND ISNULL(A.PHISCALID,'') = ISNULL(B.PHISCALID,'')
WHERE A_ACID NOT LIKE 'PA%' AND B.TRNDATE <=@DATE2 AND ISNULL(A.COSTCENTER,'') LIKE @COSTCENTER AND ISNULL(A.DIVISION,'') LIKE @DIV 
AND ((@ONLYOPENINGTRIAL = 0 AND A.VCHRNO LIKE '%') OR (@ONLYOPENINGTRIAL = 1 AND (A.VOUCHERTYPE IN ('OP','AO', 'OB'))))
UNION ALL
SELECT 
CASE WHEN @SHOWDEBTORSCREDITORS = 0 THEN CASE WHEN C.PTYPE = 'C' THEN 'AT01001' ELSE 'LB01001' END ELSE A_ACID END A_ACID,
A.DRAMNT,A.CRAMNT,B.TRNDATE,A.VCHRNO FROM RMD_TRNTRAN A INNER JOIN RMD_TRNMAIN B ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND ISNULL(A.PHISCALID,'') = ISNULL(B.PHISCALID,'')
INNER JOIN RMD_ACLIST C ON A.A_ACID = C.ACID
WHERE A_ACID LIKE 'PA%' AND B.TRNDATE <=@DATE2 AND ISNULL(A.COSTCENTER,'') LIKE @COSTCENTER AND ISNULL(A.DIVISION,'') LIKE @DIV
AND ((@ONLYOPENINGTRIAL = 0 AND A.VCHRNO LIKE '%') OR (@ONLYOPENINGTRIAL = 1 AND A.VCHRNO LIKE 'AO%')) 
UNION ALL
SELECT 'AT01004' ACID,@OSTOCK DRAMNT,0 CRAMNT,@BDT TRNDATE,'OP01' VCHRNO
UNION ALL
SELECT 'LB01002' ACID,0 DRAMNT, @OSTOCK CRAMNT,@BDT TRNDATE,'OP01' VCHRNO
) A 

--	SELECT * FROM #TRNTRAN

IF OBJECT_ID('TEMPDB..#REPORTDATA') is not null drop table #REPORTDATA
CREATE TABLE #REPORTDATA (ACID VARCHAR(20),OPENING_DR NUMERIC(24,12),OPENING_CR NUMERIC(24,12),RUNNING_DR NUMERIC(24,12),RUNNING_CR NUMERIC(24,12),CLOSING_DR NUMERIC(24,12),CLOSING_CR NUMERIC(24,12))

IF @SHOWVALUEINNET = 0
	INSERT INTO #REPORTDATA (ACID,OPENING_DR,OPENING_CR,RUNNING_DR,RUNNING_CR,CLOSING_DR,CLOSING_CR)
	SELECT A.A_ACID ACID,
	OPENING_DR = SUM(CASE WHEN LEFT(A.VCHRNO,2) IN ('OP','AO','OB') OR A.TRNDATE<@DATE1 THEN DRAMNT ELSE 0 END),
	OPENING_CR = SUM(CASE WHEN LEFT(A.VCHRNO,2) IN ('OP','AO','OB') OR A.TRNDATE<@DATE1 THEN CRAMNT ELSE 0 END),
	RUNNING_DR = SUM(CASE WHEN LEFT(A.VCHRNO,2) NOT IN ('OP','AO','OB') AND A.TRNDATE>=@DATE1 THEN DRAMNT ELSE 0 END),
	RUNNING_CR = SUM(CASE WHEN LEFT(A.VCHRNO,2) NOT IN ('OP','AO','OB') AND A.TRNDATE>=@DATE1 THEN CRAMNT ELSE 0 END),
	CLOSING_DR = SUM(DRAMNT),CLOSING_CR = SUM(CRAMNT)
	FROM #TRNTRAN A GROUP BY A.A_ACID
ELSE
	INSERT INTO #REPORTDATA (ACID,OPENING_DR,OPENING_CR,RUNNING_DR,RUNNING_CR,CLOSING_DR,CLOSING_CR)
	SELECT ACID,
	CASE WHEN OPENING_DR-OPENING_CR >=0 THEN OPENING_DR-OPENING_CR ELSE 0 END OPENING_DR,
	CASE WHEN OPENING_DR-OPENING_CR < 0 THEN ABS(OPENING_DR-OPENING_CR) ELSE 0 END OPENING_CR,
	RUNNING_DR,RUNNING_CR,
	CASE WHEN CLOSING_DR-CLOSING_CR >=0 THEN CLOSING_DR-CLOSING_CR ELSE 0 END CLOSING_DR,
	CASE WHEN CLOSING_DR-CLOSING_CR < 0 THEN ABS(CLOSING_DR-CLOSING_CR) ELSE 0 END CLOSING_CR
	FROM 
	(
	SELECT A.A_ACID ACID,
	OPENING_DR = SUM(CASE WHEN LEFT(A.VCHRNO,2) IN ('OP','AO','OB') OR A.TRNDATE<@DATE1 THEN DRAMNT ELSE 0 END),
	OPENING_CR = SUM(CASE WHEN LEFT(A.VCHRNO,2) IN ('OP','AO','OB') OR A.TRNDATE<@DATE1 THEN CRAMNT ELSE 0 END),
	RUNNING_DR = SUM(CASE WHEN LEFT(A.VCHRNO,2) NOT IN ('OP','AO','OB') AND A.TRNDATE>=@DATE1 THEN DRAMNT ELSE 0 END),
	RUNNING_CR = SUM(CASE WHEN LEFT(A.VCHRNO,2) NOT IN ('OP','AO','OB') AND A.TRNDATE>=@DATE1 THEN CRAMNT ELSE 0 END),
	CLOSING_DR = SUM(DRAMNT),CLOSING_CR = SUM(CRAMNT) 
	FROM #TRNTRAN A GROUP BY A.A_ACID
	) A

--SELECT * FROM #REPORTDATA

IF @LEDGERWISE = 1
BEGIN																																																																																																																																																																																	--TOTALING FOR LEDGER WISE REPORT
	IF OBJECT_ID('TEMPDB..#TOTAL1') is not null drop table #TOTAL1
	
	SELECT SUM(ISNULL(OPENING_DR,0)) OPENING_DR,SUM(ISNULL(OPENING_CR,0)) OPENING_CR,SUM(ISNULL(RUNNING_DR,0))RUNNING_DR, SUM(ISNULL(RUNNING_CR,0))RUNNING_CR,SUM(ISNULL(CLOSING_DR,0)) CLOSING_DR,SUM(ISNULL(CLOSING_CR,0)) CLOSING_CR
	INTO #TOTAL1 FROM #REPORTDATA
	
	--GOTO JUMP
END

--#REPORTDATA_TREE
------------------

IF OBJECT_ID('TEMPDB..#TREE') is not null drop table #TREE

select A.ID,A.ACID,A.PARENT,A.TYPE,A.LEVEL,A.ACCODE,A.ACNAME,B.OPENING_DR,B.OPENING_CR,B.RUNNING_DR,B.RUNNING_CR,B.CLOSING_DR,B.CLOSING_CR,A.MCAT 
INTO #TREE from dbo.TreeExpandFunction_Account('AL','ACCOUNT',0,@SHOWDEBTORSCREDITORS,@SHOWSUBLEDGER,0) AS A
LEFT JOIN #REPORTDATA B ON A.ACID=B.ACID

--SELECT * FROM #TREE

--TOTALING GROUPS/SUB GROUPS
----------------------------
IF OBJECT_ID('TEMPDB..#TOTAL') is not null drop table #TOTAL

SELECT SUM(ISNULL(OPENING_DR,0)) OPENING_DR,SUM(ISNULL(OPENING_CR,0)) OPENING_CR,SUM(ISNULL(RUNNING_DR,0))RUNNING_DR, SUM(ISNULL(RUNNING_CR,0))RUNNING_CR,SUM(ISNULL(CLOSING_DR,0)) CLOSING_DR,SUM(ISNULL(CLOSING_CR,0)) CLOSING_CR
INTO #TOTAL FROM #TREE 

DECLARE @LVL INT
select @LVL=MAX(LEVEL) from #TREE 

WHILE @lvl > 0
BEGIN
	UPDATE A SET A.OPENING_DR = B.OPENING_DR,A.OPENING_CR = B.OPENING_CR,A.RUNNING_DR = B.RUNNING_DR,A.RUNNING_CR = B.RUNNING_CR,A.CLOSING_DR = B.CLOSING_DR,A.CLOSING_CR = B.CLOSING_CR
	FROM #TREE A INNER JOIN
	(
		SELECT PARENT,SUM(ISNULL(OPENING_DR,0)) OPENING_DR,SUM(ISNULL(OPENING_CR,0)) OPENING_CR,SUM(ISNULL(RUNNING_DR,0))RUNNING_DR, SUM(ISNULL(RUNNING_CR,0))RUNNING_CR,SUM(ISNULL(CLOSING_DR,0)) CLOSING_DR,SUM(ISNULL(CLOSING_CR,0)) CLOSING_CR
		FROM #TREE WHERE LEVEL = @LVL 
		GROUP BY PARENT
	) B ON A.ACID = B.PARENT

    SET @lvl = @lvl - 1;
END

--SELECT * FROM #TREE

JUMP:

--RESULT
---------

IF @LEDGERWISE = 0
	BEGIN
		IF @ONLYOPENINGTRIAL =1
			SELECT * FROM 
			(
			SELECT CASE WHEN TYPE = 'G' THEN UPPER(A.ACNAME) ELSE A.ACNAME END ACNAME,A.ACCODE,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENIGN_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,ACID,TYPE,LEVEL,ID FROM #TREE A 
			WHERE ID <>1 AND ((@SUMMARYREPORT = 1 AND LEVEL <= @LEV+2) OR (@SUMMARYREPORT= 0 AND LEVEL <=100)) 
			AND ISNULL(OPENING_DR,0) + ISNULL(OPENING_CR,0) <> 0 AND ((@SHOWSUBLEDGER = 0 AND A.MCAT NOT IN ('SL','SG') OR @SHOWSUBLEDGER = 1 AND A.MCAT LIKE '%'))
			UNION ALL
			SELECT 'TOTAL >>',NULL ,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENIGN_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,'ZZZZZ' ACID,'G' TYPE,1000 LEVEL,99999 ID FROM #TOTAL A 
			) A ORDER BY ID
		ELSE
			SELECT * FROM 
			(
			SELECT CASE WHEN TYPE = 'G' THEN UPPER(A.ACNAME) ELSE ACNAME END ACNAME,A.ACCODE,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENIGN_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,
			CONVERT(VARCHAR,CAST(RUNNING_DR AS MONEY),1) RUNNING_DR,CONVERT(VARCHAR,CAST(RUNNING_CR AS MONEY),1) RUNNING_CR,
			CONVERT(VARCHAR,CAST(CLOSING_DR AS MONEY),1) CLOSING_DR,CONVERT(VARCHAR,CAST(CLOSING_CR AS MONEY),1) CLOSING_CR,
			ACID,TYPE,LEVEL,ID FROM #TREE A WHERE ID <>1 AND ((@SUMMARYREPORT = 1 AND LEVEL <= @LEV+2) OR (@SUMMARYREPORT= 0 AND LEVEL <=100)) AND
			((@SHOWZEROBL = 0 AND ISNULL(CLOSING_DR,0) + ISNULL(CLOSING_CR,0) <> 0) OR (@SHOWZEROBL = 1 AND ISNULL(CLOSING_DR,0) + ISNULL(CLOSING_CR,0) <> 99999999999999999999))
			AND ((@SHOWSUBLEDGER = 0 AND A.MCAT NOT IN ('SL','SG') OR @SHOWSUBLEDGER = 1 AND A.MCAT LIKE '%'))
			UNION ALL
			SELECT 'TOTAL >>',NULL,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENIGN_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,
			CONVERT(VARCHAR,CAST(RUNNING_DR AS MONEY),1) RUNNING_DR,CONVERT(VARCHAR,CAST(RUNNING_CR AS MONEY),1) RUNNING_CR,
			CONVERT(VARCHAR,CAST(CLOSING_DR AS MONEY),1) CLOSING_DR,CONVERT(VARCHAR,CAST(CLOSING_CR AS MONEY),1) CLOSING_CR,
			'ZZZZZ' ACID,'G' TYPE,1000 LEVEL,99999 ID FROM #TOTAL A 
			) A ORDER BY ID
	END

ELSE

BEGIN
	IF @ONLYOPENINGTRIAL =1
		SELECT * FROM 
		(
		SELECT A.ACNAME,A.ACCODE,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENING_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,B.ACID,TYPE,ACNAME AC FROM
		RMD_ACLIST A INNER JOIN #REPORTDATA B ON A.ACID = B.ACID
		UNION ALL
		SELECT 'TOTAL >>',NULL ,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENIGN_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,'ZZZZZ' ACID,'G' TYPE,'ZZZZZZZZZZZZZZZ'AC FROM #TOTAL1 A 
		) A ORDER BY AC
	ELSE
		SELECT * FROM 
		(
		SELECT A.ACNAME,A.ACCODE,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENIGN_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,
		CONVERT(VARCHAR,CAST(RUNNING_DR AS MONEY),1) RUNNING_DR,CONVERT(VARCHAR,CAST(RUNNING_CR AS MONEY),1) RUNNING_CR,
		CONVERT(VARCHAR,CAST(CLOSING_DR AS MONEY),1) CLOSING_DR,CONVERT(VARCHAR,CAST(CLOSING_CR AS MONEY),1) CLOSING_CR,
		A.ACID,'A' FLG,A.ACNAME AC FROM RMD_ACLIST A INNER JOIN #REPORTDATA B ON A.ACID = B.ACID
		UNION ALL
		SELECT 'TOTAL >>',NULL,CONVERT(VARCHAR,CAST(OPENING_DR AS MONEY),1) OPENIGN_DR,CONVERT(VARCHAR,CAST(OPENING_CR AS MONEY),1) OPENING_CR,
		CONVERT(VARCHAR,CAST(RUNNING_DR AS MONEY),1) RUNNING_DR,CONVERT(VARCHAR,CAST(RUNNING_CR AS MONEY),1) RUNNING_CR,
		CONVERT(VARCHAR,CAST(CLOSING_DR AS MONEY),1) CLOSING_DR,CONVERT(VARCHAR,CAST(CLOSING_CR AS MONEY),1) CLOSING_CR,
		'ZZZZZ' ACID,'G' TYPE,'ZZZZZZZZZZZZZZZ' AC FROM #TOTAL1 A 
		) A ORDER BY A.AC
END


IF OBJECT_ID('TEMPDB..#TRNTRAN') is not null drop table #TRNTRAN
IF OBJECT_ID('TEMPDB..#REPORTDATA') is not null drop table #REPORTDATA
IF OBJECT_ID('TEMPDB..#TREE') is not null drop table #TREE
IF OBJECT_ID('TEMPDB..#TRNTRAN') is not null drop table #TRNTRAN
IF OBJECT_ID('TEMPDB..#TOTAL') is not null drop table #TOTAL
IF OBJECT_ID('TEMPDB..#TOTAL1') is not null drop table #TOTAL1