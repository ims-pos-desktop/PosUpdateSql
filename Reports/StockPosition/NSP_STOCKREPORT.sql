CREATE OR ALTER PROCEDURE [dbo].[NSP_STOCKREPORT] 
--DBCC DROPCLEANBUFFERS
--DBCC FREEPROCCACHE
--DECLARE
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@WAREHOUSE VARCHAR(100) ='%',
	@CATEGORY VARCHAR(100) ='%',
	@SUPPLIER VARCHAR(25)='%',
	@ITEMGROUP VARCHAR(25) = '%',
	@PTYPE INT = 100,
	@PATH NVARCHAR(4000)='%',
	@BYBARCODE TINYINT = 0,
	@WISE VARCHAR(50) = 'ITEM', 
	@ItemCode varchar(max) = '%',
	@barcode VARCHAR(25) = '%',
	@DIVISION VARCHAR(3)= '%',
	@RepMode tinyint = 0,
	@TreeFormat tinyint = 0,
	@SHOWVALUATIONRATE TINYINT = 0,
	@GROUP VARCHAR(25)='MI',
	@DOVALUATION TINYINT = 0,
	@GRNWise TINYINT = 0,
	@FYID VARCHAR(10) = '%'
AS
--SELECT @DATE1 = '17 DEC 2023', @DATE2 ='14 JAN 2024', @FYID = '80/81', @DIVISION = 'HTC'
SET NOCOUNT ON

DECLARE @SHOWBARCODEDETAIL TINYINT
DECLARE @IGNOREMINUSTK TINYINT
DECLARE @BCWISERATE TINYINT
SELECT @SHOWBARCODEDETAIL = CONVERT(TINYINT, EnableBarcodeDetails) | ISNULL(HASVEHICLESALE,0),@IGNOREMINUSTK = IGNOREMINUSSTKINSVALUATION,@BCWISERATE = ISNULL(BarcodeWisePrice,0) FROM SETTING
if @SHOWVALUATIONRATE = 0
	set @DOVALUATION = 0
--GETTING WAREHOUSE LIST
-------------------------
IF OBJECT_ID('TEMPDB..#tblWarehouse') is not null drop table #tblWarehouse

CREATE TABLE #tblWarehouse (item varchar(max) COLLATE DATABASE_DEFAULT)
INSERT INTO #tblWarehouse SELECT ITEMS FROM DBO.Split(@WAREHOUSE ,',')

                      
--STOCK VALUATION 
-------------------
IF @DOVALUATION = 1
BEGIN
	DELETE FROM COSTING		
	--EXEC NSP_STOCKVALUATIONREPORT @DATE = @DATE2,@PATH = '%',@PHISCALID = @FYID,@DETAIL = 100,@ITEM = @ItemCode,@DOVALUATION = @DOVALUATION,@FIFO = 'F'	
	EXEC RSP_STOCKVALUATION_FIFO @DATE = @DATE2,@PATH = '%',@FYID = @FYID,@DETAIL = 100,@ITEM = @ItemCode, @DIVISION = @DIVISION
END

IF OBJECT_ID('TEMPDB..#RMD_TRNPROD') IS NOT NULL DROP TABLE #RMD_TRNPROD
--IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL DROP TABLE #DATA

SELECT 'OP100' VCHRNO,A.DIVISION,A.MCODE,SUM(REALQTY) REALQTY,
SUM(REALQTY_IN) REALQTY_IN,WAREHOUSE,A.BC INTO #RMD_TRNPROD FROM RMD_TRNPROD A 
INNER JOIN RMD_TRNMAIN B ON A.VCHRNO=B.VCHRNO AND A.DIVISION =B.DIVISION AND A.PhiscalID=B.PhiscalID 
WHERE ISNULL(A.PHISCALID,'') = @FYID AND (B.TRNDATE < @DATE1 OR A.VCHRNO LIKE 'OP%') AND B.DIVISION LIKE @DIVISION AND
(A.WAREHOUSE LIKE @WAREHOUSE OR A.WAREHOUSE IN (SELECT ITEM FROM #tblWarehouse)) --AND ISNULL(A.MCODE,'') LIKE @ITEMCODE 
and ((ISNULL(A.MCODE,'') in (select * from dbo.split(@ITEMCODE,',')) and @ITEMCODE <>'%') or (@ITEMCODE ='%' and ISNULL(A.MCODE,'') like @ITEMCODE))
GROUP BY A.DIVISION,A.MCODE,A.WAREHOUSE,A.BC

UNION ALL

SELECT A.VCHRNO VCHRNO,A.DIVISION,A.MCODE,REALQTY,
REALQTY_IN,WAREHOUSE,A.BC FROM RMD_TRNPROD A 
INNER JOIN RMD_TRNMAIN B ON A.VCHRNO=B.VCHRNO AND A.DIVISION =B.DIVISION AND A.PhiscalID=B.PhiscalID 
WHERE ISNULL(A.PHISCALID,'') = @FYID AND B.TRNDATE BETWEEN @DATE1 AND @DATE2 AND A.VCHRNO NOT LIKE 'OP%' AND B.DIVISION LIKE @DIVISION
AND (A.WAREHOUSE LIKE @WAREHOUSE OR A.WAREHOUSE IN (SELECT ITEM FROM #tblWarehouse)) --AND ISNULL(A.MCODE,'') LIKE @ITEMCODE 
and ((ISNULL(A.MCODE,'') in (select * from dbo.split(@ITEMCODE,',')) and @ITEMCODE <>'%') or (@ITEMCODE ='%' and ISNULL(A.MCODE,'') like @ITEMCODE))


--GETTING ITEM WISE STOCK BALANCE RECORD WITH STOCK VALUE
---------------------------------------------------------
IF OBJECT_ID('TEMPDB..#RMD_TRNPROD1') IS NOT NULL DROP TABLE #RMD_TRNPROD1

SELECT * INTO #RMD_TRNPROD1 FROM
(
	SELECT A.MCODE,A.OPQTY,A.PQTY,A.TRANSFERIN,A.SALESQTY,A.TRANSFEROUT,A.STOCKADJUSTMENT,A.SETTLEMENT,A.STOCKBALANCE,
	--A.MCAT,A.DESCA,A.MENUCODE,A.MGROUP,A.MGROUPNAME,A.MGROUPCODE,A.SUPPLIER,A.BASEUNIT,A.SRATE,
	BARCODE = CASE WHEN @BYBARCODE=0 THEN ISNULL(B.BARCODE, B.MENUCODE) ELSE ISNULL(A.BC,B.MENUCODE) END,
	PRATE = CASE WHEN @IGNOREMINUSTK = 1 AND A.STOCKBALANCE<0 THEN 0 ELSE B.PRATE END, 
	STOCKVALUE= (CASE WHEN @IGNOREMINUSTK = 1 AND A.STOCKBALANCE<0 THEN 0 ELSE B.PRATE END) * A.STOCKBALANCE
	FROM 
	(
		SELECT MCODE,
		OPQTY=SUM(CASE LEFT(VCHRNO,2) WHEN 'OP' THEN  REALQTY_IN-RealQty ELSE 0 END ),
		PQTY=SUM(CASE WHEN LEFT(VCHRNO,2) IN ('PI','PR','DN','GR') THEN REALQTY_IN-REALQTY ELSE 0 END) ,
		TRANSFERIN=SUM(CASE WHEN LEFT(VCHRNO,2) IN ('IS','TR','HV','SO','PK') THEN REALQTY_IN ELSE 0 END ), 
		SALESQTY=SUM(CASE WHEN LEFT(VCHRNO,2) IN ('SI','SR','TI','CN','RE','IV','IC','IR','NC','DL','DR','RC') THEN REALQTY-REALQTY_in ELSE 0 END ),
		TRANSFEROUT=SUM(CASE WHEN LEFT(VCHRNO,2) IN ('IS','TO','HV','SO','PK') THEN REALQTY ELSE 0 END ), 
		STOCKADJUSTMENT=SUM(CASE LEFT(VCHRNO,2) WHEN 'SA' THEN REALQTY_IN-REALQTY ELSE 0 END ),
		SETTLEMENT=SUM(CASE WHEN LEFT(VCHRNO,2) IN ('DM', 'ST') THEN  REALQTY_IN-REALQTY ELSE 0 END ),
		STOCKBALANCE=SUM(REALQTY_IN)-SUM(REALQTY), 
		CASE WHEN @BYBARCODE=0 THEN '' ELSE BC END BC
		FROM #RMD_TRNPROD A GROUP BY A.MCODE, CASE WHEN @BYBARCODE=0 THEN '' ELSE BC END
		HAVING ((@RepMode = 1 AND SUM(REALQTY_IN)-SUM(REALQTY) <> 0) OR (@RepMode = 2 AND SUM(REALQTY_IN)-SUM(REALQTY) < 0) OR (@RepMode = 3 AND SUM(REALQTY_IN)-SUM(REALQTY) = 0) OR  (@RepMode = 0 AND SUM(REALQTY_IN)-SUM(REALQTY) < 1000000000)) 
	) A 
	LEFT JOIN 
	(
		SELECT  A.MCODE, A.MENUCODE, MAX(B.[BCODE]) BARCODE, CASE WHEN @SHOWVALUATIONRATE = 0 THEN ISNULL(CASE WHEN ISNULL(A.CRATE,0) = 0 THEN A.PRATE_A ELSE ISNULL(A.CRATE,0) END,0) ELSE ISNULL(X.RATE,0) END PRATE FROM
		MENUITEM A
		LEFT JOIN BARCODE B ON A.MCODE = B.MCODE AND ISNULL(A.MENUCODE, '') <> ISNULL(B.BCODE, '')
		LEFT JOIN COSTING X ON A.MCODE = X.MCODE
		GROUP BY A.MCODE, A.MENUCODE, A.PRATE_A, A.CRATE, X.RATE
	) B ON A.MCODE = B.MCODE
)A  


--PREPARING RECORD TO SHOW REPORT AS PER REPORT OPTION
--------------------------------------------------------
if object_id('tempdb..#TRNPROD1') IS NOT NULL DROP TABLE #TRNPROD1

CREATE TABLE #TRNPROD1 (ITEMCODE VARCHAR(max) COLLATE DATABASE_DEFAULT,DESCA VARCHAR(max) COLLATE DATABASE_DEFAULT,BARCODE VARCHAR(max) COLLATE DATABASE_DEFAULT,
BASEUNIT VARCHAR(max),OPQTY NUMERIC(18,4),PQTY NUMERIC(18,4),TRANSFERIN NUMERIC(18,4),SALESQTY NUMERIC(18,4),TRANSFEROUT NUMERIC(18,4),STOCKADJUSTMENT NUMERIC(18,4),
SETTLEMENT NUMERIC(18,4),STOCKBALANCE NUMERIC(18,4),PRATE NUMERIC(18,4),STOCKVALUE NUMERIC(18,4),SRATE NUMERIC(18,4),SUPPLIER VARCHAR(max) COLLATE DATABASE_DEFAULT
,VAT VARCHAR(15) COLLATE DATABASE_DEFAULT,MCODE VARCHAR(max) COLLATE DATABASE_DEFAULT)

--ITEMCODE,DESCA,BARCODE,BASEUNIT,OPQTY,PQTY,TRANSFERIN,SALESQTYY,TRANSFEROUT,STOCKADJUSTMENT,SETTLEMENT,STOCKBALANCE,PRATE,STOCKVALUE,SRATE,SUPPLIER,MCODE

if object_id('tempdb..#TRNPROD') IS NOT NULL DROP TABLE #TRNPROD
SELECT * INTO #TRNPROD FROM 
(
	SELECT CASE @WISE WHEN 'ITEM' THEN B.DESCA WHEN 'ITEMCATEGORY' THEN ISNULL(B.MCAT,'N/A') ELSE ISNULL(C.DESCA,'') END DESCA,
	-- ITEMCODE is only applicable for Item Wise report, was causing string or binary data truncation error
	CASE @WISE WHEN 'ITEM' THEN B.MENUCODE ELSE '' END ITEMCODE,
	CASE @WISE WHEN 'ITEM' THEN CASE WHEN @BYBARCODE=0 THEN ISNULL(B.BARCODE,B.MENUCODE) ELSE A.BARCODE END ELSE '' END AS BARCODE,
	CASE @WISE WHEN 'ITEM' THEN B.BASEUNIT ELSE '' END BASEUNIT,CASE @WISE WHEN 'ITEM' THEN D.ACNAME ELSE '' END SUPPLIER,
	CASE @WISE WHEN 'ITEM' THEN A.MCODE WHEN 'ITEMCATEGORY' THEN ISNULL(B.MCAT,'N/A') ELSE ISNULL(B.MGROUP,'') END MCODE,
	CASE @WISE WHEN 'ITEM' THEN A.PRATE ELSE 0 END PRATE,
	CASE @WISE WHEN 'ITEM' THEN B.RATE_A ELSE 0 END SRATE,
	CASE @WISE WHEN 'ITEM'THEN (CASE WHEN b.VAT = 1 THEN 'Vat Item' ELSE 'Non-Vat Item' END) ELSE '' END VAT,
	OPQTY,PQTY,TRANSFERIN,SALESQTY,TRANSFEROUT,STOCKADJUSTMENT,SETTLEMENT,STOCKBALANCE,STOCKVALUE
	FROM #RMD_TRNPROD1 A INNER JOIN MENUITEM B ON A.MCODE= B.MCODE 
	LEFT JOIN MENUITEM C ON B.MGROUP = C.MCODE 
	LEFT JOIN RMD_ACLIST D ON ISNULL(B.SUPCODE,'') = D.ACID
	WHERE ISNULL(B.MCAT,'') LIKE @CATEGORY AND ISNULL(B.MGROUP,'') LIKE @ITEMGROUP AND ISNULL(B.SUPCODE,'') LIKE @SUPPLIER AND
	((@PATH='%' AND ISNULL(B.PATH,'') LIKE @PATH) OR (@PATH <> '%' 
	AND B.PARENT IN (SELECT MCODE FROM DBO.TreeExpand_function(@PATH,'PATH','1'))))
	AND ((@PTYPE=100 AND ISNULL(B.PTYPE,0)<10) OR (@PTYPE <> 100 AND ISNULL(B.PTYPE,0) = @PTYPE))
)A
	
INSERT INTO #TRNPROD1
(ITEMCODE,DESCA,BARCODE,BASEUNIT,OPQTY,PQTY,TRANSFERIN,SALESQTY,TRANSFEROUT,STOCKADJUSTMENT,SETTLEMENT,STOCKBALANCE,PRATE,STOCKVALUE,SRATE,SUPPLIER,VAT,MCODE)
SELECT * FROM
(
	SELECT ITEMCODE,DESCA,BARCODE,BASEUNIT,
	SUM(OPQTY) OPQTY,SUM(PQTY) PQTY,SUM(TRANSFERIN) TRANSFERIN,SUM(SALESQTY) SALESQTY,SUM(TRANSFEROUT) TRANSFEROUT,
	SUM(STOCKADJUSTMENT) STOCKADJUSTMENT,SUM(SETTLEMENT) SETTLEMENT,SUM(STOCKBALANCE) STOCKBALANCE,
	ISNULL(A.PRATE,0) PRATE,SUM(STOCKVALUE) STOCKVALUE,A.SRATE,A.SUPPLIER, A.VAT,A.MCODE
	FROM #TRNPROD A GROUP BY A.ITEMCODE,A.DESCA,A.BARCODE,A.BASEUNIT,ISNULL(A.PRATE,0),A.SRATE,A.SUPPLIER,A.VAT,A.MCODE
) A
	


 
--PREPARING REPORT 
-------------------
--CREATING TEMPORTY TABLE TO HOLD THE REPORT OUTPUT
----------------------------------------------------
IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE #RESULT

CREATE TABLE #RESULT (ITEMCODE VARCHAR(max),DESCA VARCHAR(max),BARCODE VARCHAR(max),
COLOR VARCHAR(max),SIZE VARCHAR(max),MAKE VARCHAR(max),GENDER VARCHAR(max),ORIGIN VARCHAR(max),FIT VARCHAR(max),SEASON VARCHAR(max),MEASUREMENT VARCHAR(max),ITYPE VARCHAR(max),
BASEUNIT VARCHAR(max),OPQTY NUMERIC(18,4),PQTY NUMERIC(18,4),TRANSFERIN NUMERIC(18,4),SALESQTY NUMERIC(18,4),TRANSFEROUT NUMERIC(18,4),STOCKADJUSTMENT NUMERIC(18,4),
SETTLEMENT NUMERIC(18,4),STOCKBALANCE NUMERIC(18,4),PRATE NUMERIC(18,4),STOCKVALUE NUMERIC(18,4),SRATE NUMERIC(18,4),SUPPLIER VARCHAR(max),VAT VARCHAR(15),MCODE VARCHAR(max),
ENGINENO VARCHAR(max), CHASISNO VARCHAR(max), VEHICLEREGNO VARCHAR(max), VEHICLEMODEL VARCHAR(max))

if @SHOWBARCODEDETAIL = 0
	BEGIN
		IF @BYBARCODE = 0 OR @WISE <> 'ITEM'
			INSERT INTO #RESULT
			SELECT ITEMCODE,DESCA,BARCODE,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,BASEUNIT,
			SUM(OPQTY)OPQTY,SUM(PQTY)PQTY,SUM(TRANSFERIN)TRANSFERIN,SUM(SALESQTY)SALESQTY,
			SUM(TRANSFEROUT)TRANSFEROUT,SUM(STOCKADJUSTMENT) STOCKADJUSTMENT,SUM(SETTLEMENT) SETTLEMENT,
			SUM(STOCKBALANCE) STOCKBALANCE, PRATE,SUM(STOCKVALUE)STOCKVALUE,A.SRATE,A.SUPPLIER, A.VAT,A.MCODE,
                        NULL, NULL, NULL, NULL
			FROM #TRNPROD1 A 
			GROUP BY A.ITEMCODE,A.DESCA,A.BARCODE,A.BASEUNIT,A.PRATE,A.SRATE,A.SUPPLIER,A.VAT,A.MCODE
			ORDER BY A.DESCA
		ELSE
			INSERT INTO #RESULT
			SELECT ITEMCODE,DESCA,B.BCODE,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,BASEUNIT,
			SUM(OPQTY)OPQTY,SUM(PQTY)PQTY,SUM(TRANSFERIN)TRANSFERIN,SUM(SALESQTY)SALESQTY,
			SUM(TRANSFEROUT)TRANSFEROUT,SUM(STOCKADJUSTMENT) STOCKADJUSTMENT,SUM(SETTLEMENT) SETTLEMENT,
			SUM(STOCKBALANCE) STOCKBALANCE, PRATE,SUM(STOCKVALUE)STOCKVALUE,CASE WHEN @BCWISERATE = 0 THEN A.SRATE ELSE B.SRATE_BC END SRATE,ISNULL(B.SUPPLIERNAME,A.SUPPLIER) SUPPLIER,A.VAT,A.MCODE,NULL, NULL, NULL, NULL
			FROM #TRNPROD1 A CROSS APPLY 
			(SELECT TOP 1 B.BCODE,B.MCODE,AC.ACNAME,SRATE SRATE_BC,AC.ACNAME SUPPLIERNAME FROM BARCODE B LEFT JOIN RMD_ACLIST AC ON ISNULL(B.SUPCODE,'') = AC.ACID WHERE B.MCODE = A.MCODE) B 
			GROUP BY A.ITEMCODE,A.DESCA,B.BCODE,A.BASEUNIT,A.PRATE,CASE WHEN @BCWISERATE = 0 THEN A.SRATE ELSE B.SRATE_BC END,ISNULL(B.SUPPLIERNAME,A.SUPPLIER),A.VAT,A.MCODE
			ORDER BY A.DESCA
	END
ELSE
	INSERT INTO #RESULT	
	SELECT ITEMCODE,DESCA,BARCODE,COLOR,SIZE,MAKE,GENDER,ORIGIN,FIT,SEASON,MEASUREMENT,ITYPE,BASEUNIT,
	SUM(OPQTY)OPQTY,SUM(PQTY)PQTY,SUM(TRANSFERIN)TRANSFERIN,SUM(SALESQTY)SALESQTY,
	SUM(TRANSFEROUT)TRANSFEROUT,SUM(STOCKADJUSTMENT) STOCKADJUSTMENT,SUM(SETTLEMENT) SETTLEMENT,
	SUM(STOCKBALANCE) STOCKBALANCE, IIF(ISNULL(VPRate,0) = 0, PRATE,VPRate) PRATE, SUM(IIF(ISNULL(VPRate,0) = 0, STOCKVALUE, VPRATE * STOCKBALANCE)) STOCKVALUE,
	A.SRATE,ISNULL(SUPPLIERNAME,A.SUPPLIER)SUPPLIER, A.VAT,A.MCODE, ENGINENO, CHASISNO, VEHICLEREGNO, VEHICLEMODEL
	FROM 
	(
		SELECT A.*,B.COLOR,B.SIZE,B.MAKE,B.GENDER,B.ORIGIN,B.FIT,B.SEASON,B.MEASUREMENT, B.[TYPE] ITYPE,X.SUPPLIERNAME, 
		ISNULL(B.VEHICLEENGINENO, '') ENGINENO, ISNULL(B.VEHICLECHASISNO, '') CHASISNO, ISNULL(B.VEHICLEREGISTRATIONNO, '') VEHICLEREGNO, ISNULL(B.VEHICLEMODEL, '') VEHICLEMODEL, VPRate
		FROM #TRNPROD1 A 
		LEFT JOIN vwVehicleBarcode B ON A.MCODE = B.MCODE AND A.BARCODE = B.BARCODE 
		LEFT JOIN
		(
			SELECT TOP 1 A.BCODE,A.MCODE,B.ACNAME SUPPLIERNAME FROM BARCODE A INNER JOIN RMD_ACLIST B ON ISNULL(A.SUPCODE,'') = B.ACID
		) X ON A.MCODE = X.MCODE
	) A 
	GROUP BY A.MCODE,A.VAT,A.DESCA,A.ITEMCODE,A.BARCODE,A.BASEUNIT,ISNULL(SUPPLIERNAME,A.SUPPLIER),
	IIF(ISNULL(VPRate,0) = 0, PRATE,VPRate),A.SRATE,A.COLOR,A.SIZE,A.MAKE,GENDER,ORIGIN,FIT,SEASON,MEASUREMENT,ITYPE, ENGINENO, CHASISNO, VEHICLEREGNO, VEHICLEMODEL
	ORDER BY A.DESCA

IF @TREEFORMAT=0
	SELECT B.[Main Group], B.[Main Category], B.[Sub Category], B.[Super Category], A.* FROM #RESULT A LEFT JOIN vwItemHeirarchy B ON A.MCODE = B.MCODE ORDER BY DESCA
ELSE
	BEGIN
		DECLARE @GROUPNAME AS VARCHAR(max)
		IF @GROUP='MI' 
			BEGIN
				SET @GROUPNAME = 'PRODUCTLIST'
			END
		ELSE
			BEGIN
				SELECT @GROUPNAME=Desca FROM MENUITEM WHERE MCODE=@GROUP 
			END 
		
		if @SHOWBARCODEDETAIL = 0
			BEGIN
				IF OBJECT_ID('TEMPDB..#TREE') IS NOT NULL DROP TABLE #TREE
				--PREPARING TREE
				SELECT CASE WHEN A.TYPE='G' THEN '-' ELSE NULL END AS SYMBOL, A.TYPE,A.LEVEL,A.DESCRIPTION,A.CODE,B.BARCODE,
				NULL COLOR,NULL SIZE,NULL MAKE,NULL GENDER,NULL ORIGIN,NULL FIT,NULL SEASON,NULL MEASUREMENT,NULL ITYPE,
				B.BASEUNIT,OPQTY,PQTY,TRANSFERIN,SALESQTY,TRANSFEROUT,STOCKADJUSTMENT,SETTLEMENT,STOCKBALANCE,PRATE,STOCKVALUE,SUPPLIER,
				A.PARENT,A.ID,A.MCODE INTO #TREE FROM TreeExpand_function (@GROUP ,@GROUPNAME ,0) AS A
				LEFT JOIN #RESULT B ON A.MCODE = B.MCODE

				--SUMMING GROUP
				DECLARE @LVL INT
				select @LVL=MAX(LEVEL) from #TREE 

				WHILE @lvl > 0
				BEGIN
					update A set A.OPQTY  =B.OPQTY  ,A.PQTY  =B.PQTY  , A.TRANSFERIN  =B.TRANSFERIN ,A.SALESQTY =B.SALESQTY ,A.TRANSFEROUT =B.TRANSFEROUT  ,
					A.STOCKADJUSTMENT =B.STOCKADJUSTMENT ,A.SETTLEMENT =B.SETTLEMENT  ,A.PRATE =B.PRATE  ,A.STOCKVALUE =B.STOCKVALUE,A.STOCKBALANCE=B.STOCKBALANCE 
					from #TREE A INNER JOIN 
					(select Parent,SUM(OPQTY) OPQTY,SUM(PQTY  ) PQTY,SUM(TRANSFERIN ) TRANSFERIN,SUM(SALESQTY ) SALESQTY,SUM(TRANSFEROUT ) TRANSFEROUT,
					SUM(STOCKADJUSTMENT ) STOCKADJUSTMENT,SUM(SETTLEMENT ) SETTLEMENT,SUM(STOCKBALANCE ) STOCKBALANCE,AVG(PRATE ) PRATE,SUM(STOCKVALUE ) STOCKVALUE from #TREE where level= @LVL group by parent) B on A.MCODE =B.Parent 
					SET @lvl = @lvl - 1;
				END

				SELECT * FROM #TREE where OPQTY <> 0 or PQTY <>0 or TRANSFERIN=0 or TRANSFEROUT=0 or SALESQTY <> 0 or TRANSFEROUT <> 0 or STOCKADJUSTMENT <> 0 or SETTLEMENT <> 0 ORDER BY ID
			END
		ELSE
			BEGIN
				IF OBJECT_ID('TEMPDB..#TREE1') IS NOT NULL DROP TABLE #TREE1
				--PREPARING TREE
				SELECT CASE WHEN A.TYPE='G' THEN '-' ELSE NULL END AS SYMBOL, A.TYPE,A.LEVEL,A.DESCRIPTION,A.CODE,B.BARCODE,
				COLOR,SIZE,MAKE,GENDER,ORIGIN,FIT,SEASON,MEASUREMENT,ITYPE,
				B.BASEUNIT,OPQTY,PQTY,TRANSFERIN,SALESQTY,TRANSFEROUT,STOCKADJUSTMENT,SETTLEMENT,STOCKBALANCE,PRATE,STOCKVALUE,SUPPLIER,
				A.PARENT,A.ID,A.MCODE INTO #TREE1 FROM TreeExpand_function (@GROUP ,@GROUPNAME ,0) AS A
				LEFT JOIN #RESULT B ON A.MCODE = B.MCODE

				--SUMMING GROUP
				--DECLARE @LVL INT
				select @LVL=MAX(LEVEL) from #TREE1 

				WHILE @lvl > 0
				BEGIN
					update A set A.OPQTY  =B.OPQTY  ,A.PQTY  =B.PQTY  , A.TRANSFERIN  =B.TRANSFERIN ,A.SALESQTY =B.SALESQTY ,A.TRANSFEROUT =B.TRANSFEROUT  ,
					A.STOCKADJUSTMENT =B.STOCKADJUSTMENT ,A.SETTLEMENT =B.SETTLEMENT  ,A.PRATE =B.PRATE  ,A.STOCKVALUE =B.STOCKVALUE,A.STOCKBALANCE=B.STOCKBALANCE 
					from #TREE1 A INNER JOIN 
					(select Parent,SUM(OPQTY) OPQTY,SUM(PQTY  ) PQTY,SUM(TRANSFERIN ) TRANSFERIN,SUM(SALESQTY ) SALESQTY,SUM(TRANSFEROUT ) TRANSFEROUT,
					SUM(STOCKADJUSTMENT ) STOCKADJUSTMENT,SUM(SETTLEMENT ) SETTLEMENT,SUM(STOCKBALANCE ) STOCKBALANCE,AVG(PRATE ) PRATE,SUM(STOCKVALUE ) STOCKVALUE from #TREE1 where level= @LVL group by parent) B on A.MCODE =B.Parent 
					SET @lvl = @lvl - 1;
				END

				SELECT * FROM #TREE1 where OPQTY <> 0 or PQTY <>0 or TRANSFERIN=0 or TRANSFEROUT=0 or SALESQTY <> 0 or TRANSFEROUT <> 0 or STOCKADJUSTMENT <> 0 or SETTLEMENT <> 0 ORDER BY ID
			END
			
END


IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE #RESULT
if object_id('tempdb..#TRNPROD1') IS NOT NULL DROP TABLE #TRNPROD1
if object_id('tempdb..#TRNPROD') IS NOT NULL DROP TABLE #TRNPROD
IF OBJECT_ID('TEMPDB..#RMD_TRNPROD') IS NOT NULL DROP TABLE #RMD_TRNPROD
IF OBJECT_ID('TEMPDB..#TREE1') IS NOT NULL DROP TABLE #TREE1
IF OBJECT_ID('TEMPDB..#TREE') IS NOT NULL DROP TABLE #TREE
IF OBJECT_ID('TEMPDB..#tblWarehouse') is not null drop table #tblWarehouse