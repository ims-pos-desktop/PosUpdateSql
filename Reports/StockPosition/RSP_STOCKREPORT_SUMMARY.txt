CREATE OR ALTER PROCEDURE [dbo].[RSP_STOCKREPORT_SUMMARY] 
--DBCC DROPCLEANBUFFERS
--DBCC FREEPROCCACHE
--DECLARE
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@WAREHOUSE VARCHAR(100) ='%',
	@MENUCAT VARCHAR(100) ='%',
	@SUPPLIER_ACID VARCHAR(20)='%',
	@MGROUP VARCHAR(20) = '%',
	@PTYPE INT='100',
	@PATH NVARCHAR(4000)='%',
	@CHK_BarcodeWise TINYINT =0,                        --CHK_BarcodeWise:1:0
	@OPT_WISE VARCHAR(50) = 'ITEM',            			--Mgroup:Mgroup,Item:Item,MCat:MCat
	@MCODE varchar(25) = '%',
	@barcode VARCHAR(25) = '%',
	@DIVISION VARCHAR(3)= '%',
	@OPT_RepMode tinyint = 0,					--All:0,NonZero:1,NegativeOnly:2,ZeroOnly:3
	@OPT_TREE tinyint = 0,                                          --NonTree:0,Tree:1
	@OPT_FIFO TINYINT = 0,                      ----FIFO:1,LatestMRP:0
	@GROUP VARCHAR(25)='MI',
	@DOVALUATION TINYINT = 0,
	@CHK_GRNWise TINYINT = 0,                     --CHK_GRNWise:1:0   
	@FYID VARCHAR(20) = '%'
AS
IF @OPT_FIFO = 1 
	SET @DOVALUATION = 1

--SET @DATE1 = '2020-07-16'; SET @DATE2 ='2021-07-15';
--SET @FYID = '77/78'; SET @MCODE = 'M5374'
set nocount on

DECLARE @SHOWBARCODEDETAIL TINYINT
DECLARE @IGNOREMINUSTK TINYINT
DECLARE @BCWISERATE TINYINT
SELECT @SHOWBARCODEDETAIL = CONVERT(TINYINT, EnableBarcodeDetails) | ISNULL(HASVEHICLESALE,0),@IGNOREMINUSTK = IGNOREMINUSSTKINSVALUATION,@BCWISERATE = ISNULL(BarcodeWisePrice,0) FROM SETTING
if @OPT_FIFO = 0
	set @DOVALUATION = 0

--GETTING WAREHOUSE LIST
-------------------------
IF OBJECT_ID('TEMPDB..#tblWarehouse') is not NULL drop table #tblWarehouse

CREATE TABLE #tblWarehouse (item varchar(100) COLLATE DATABASE_DEFAULT)
INSERT INTO #tblWarehouse SELECT ITEMS FROM DBO.Split(@WAREHOUSE ,',')

--STOCK VALUATION
-------------------
IF @DOVALUATION = 1
BEGIN
	DELETE FROM COSTING		
	--EXEC NSP_STOCKVALUATIONREPORT @DATE = @DATE2,@PATH = '%',@PHISCALID = @FYID,@DETAIL = 100,@ITEM = @MCODE,@DOVALUATION = @DOVALUATION,@FIFO = 'F'	
	EXEC RSP_STOCKVALUATION_FIFO @DATE = @DATE2,@PATH = '%',@FYID = @FYID,@DETAIL = 100,@ITEM = @ItemCode
END

IF OBJECT_ID('TEMPDB..#RMD_TRNPROD') IS NOT NULL DROP TABLE #RMD_TRNPROD
--IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL DROP TABLE #DATA

SELECT 'OP100' VCHRNO,A.DIVISION,A.MCODE,SUM(REALQTY) REALQTY,
SUM(REALQTY_IN) REALQTY_IN,WAREHOUSE,IIF(@CHK_BarcodeWise = 1, A.BC,'') BC, A.VoucherType INTO #RMD_TRNPROD FROM RMD_TRNPROD A 
INNER JOIN RMD_TRNMAIN B ON A.VCHRNO=B.VCHRNO AND A.DIVISION =B.DIVISION AND A.PhiscalID=B.PhiscalID 
WHERE ISNULL(A.PHISCALID,'') = @FYID AND (B.TRNDATE < @DATE1 OR A.VCHRNO LIKE 'OP%') AND B.DIVISION LIKE @DIVISION AND
(A.WAREHOUSE LIKE @WAREHOUSE OR A.WAREHOUSE IN (SELECT ITEM FROM #tblWarehouse)) AND ISNULL(A.MCODE,'') LIKE @MCODE 
GROUP BY A.DIVISION,A.MCODE,A.WAREHOUSE, IIF(@CHK_BarcodeWise = 1, A.BC,''), A.VoucherType

UNION ALL

SELECT A.VCHRNO VCHRNO,A.DIVISION,A.MCODE,REALQTY,
REALQTY_IN,WAREHOUSE,IIF(@CHK_BarcodeWise = 1, A.BC,'') BC, A.VoucherType FROM RMD_TRNPROD A 
INNER JOIN RMD_TRNMAIN B ON A.VCHRNO=B.VCHRNO AND A.DIVISION =B.DIVISION AND A.PhiscalID=B.PhiscalID 
WHERE ISNULL(A.PHISCALID,'') = @FYID AND B.TRNDATE BETWEEN @DATE1 AND @DATE2 AND A.VCHRNO NOT LIKE 'OP%' AND B.DIVISION LIKE @DIVISION
AND (A.WAREHOUSE LIKE @WAREHOUSE OR A.WAREHOUSE IN (SELECT ITEM FROM #tblWarehouse)) AND ISNULL(A.MCODE,'') LIKE @MCODE 

--GETTING ITEM WISE STOCK BALANCE RECORD WITH STOCK VALUE
---------------------------------------------------------
IF OBJECT_ID('TEMPDB..#RMD_TRNPROD1') IS NOT NULL DROP TABLE #RMD_TRNPROD1

SELECT * INTO #RMD_TRNPROD1 FROM
(
	SELECT A.MCODE,A.DIVISION,A.OPQTY,A.INQTY,A.OUTQTY,A.STOCKBALANCE,
	BARCODE = A.BC,
	PRATE = CASE WHEN @IGNOREMINUSTK = 1 AND A.STOCKBALANCE<0 THEN 0 ELSE B.PRATE END, 
	STOCKVALUE= (CASE WHEN @IGNOREMINUSTK = 1 AND A.STOCKBALANCE<0 THEN 0 ELSE B.PRATE END) * A.STOCKBALANCE
	FROM 
	(
		SELECT MCODE, DIVISION,
		OPQTY = SUM(IIF(VoucherType IN ('OP'), REALQTY_IN-RealQty, 0)),
		INQTY = SUM(IIF(REALQTY_IN > 0, REALQTY_IN, 0)) ,
		OUTQTY= SUM(IIF(REALQTY_IN > 0, 0, RealQty)),
		STOCKBALANCE=SUM(REALQTY_IN)-SUM(REALQTY), BC
		FROM #RMD_TRNPROD A GROUP BY A.MCODE, A.BC, A.DIVISION
	) A 
	LEFT JOIN 
	(
		SELECT A.MCODE,CASE WHEN @OPT_FIFO = 0 THEN ISNULL(CASE WHEN ISNULL(A.CRATE,0) = 0 THEN A.PRATE_A ELSE ISNULL(A.CRATE,0) END,0) ELSE ISNULL(X.RATE,0) END PRATE FROM
		MENUITEM A LEFT JOIN COSTING X ON A.MCODE = X.MCODE
	) B ON A.MCODE = B.MCODE
)A WHERE ((@OPT_RepMode = 1 AND STOCKBALANCE <> 0) OR (@OPT_RepMode = 2 AND STOCKBALANCE < 0) OR (@OPT_RepMode = 3 AND STOCKBALANCE = 0) OR  (@OPT_RepMode = 0 AND STOCKBALANCE < 1000000000)) 


--PREPARING RECORD TO SHOW REPORT AS PER REPORT OPTION
--------------------------------------------------------
if object_id('tempdb..#TRNPROD1') IS NOT NULL DROP TABLE #TRNPROD1

CREATE TABLE #TRNPROD1 (ITEMCODE VARCHAR(25) COLLATE DATABASE_DEFAULT,DESCA VARCHAR(200) COLLATE DATABASE_DEFAULT,BARCODE VARCHAR(50) COLLATE DATABASE_DEFAULT,
BASEUNIT VARCHAR(50), DIVISION VARCHAR(20), OPQTY NUMERIC(18,4),INQTY NUMERIC(18,4),OUTQTY NUMERIC(18,4), STOCKBALANCE NUMERIC(18,4),PRATE NUMERIC(18,4),
STOCKVALUE NUMERIC(18,4),SRATE NUMERIC(18,4),SUPPLIER VARCHAR(100) COLLATE DATABASE_DEFAULT,MCODE VARCHAR(100) COLLATE DATABASE_DEFAULT)


if object_id('tempdb..#TRNPROD') IS NOT NULL DROP TABLE #TRNPROD
SELECT * INTO #TRNPROD FROM 
(
	SELECT CASE @OPT_WISE WHEN 'ITEM' THEN B.DESCA WHEN 'ITEMCATEGORY' THEN ISNULL(B.MCAT,'N/A') ELSE ISNULL(C.DESCA,'') END DESCA,
	CASE @OPT_WISE WHEN 'ITEM' THEN B.MENUCODE WHEN 'ITEMCATEGORY' THEN '' ELSE ISNULL(C.MENUCODE,'') END ITEMCODE,
	CASE @OPT_WISE WHEN 'ITEM' THEN CASE WHEN @CHK_BarcodeWise=0 THEN ISNULL(B.BARCODE,B.MENUCODE) ELSE A.BARCODE END ELSE '' END AS BARCODE,
	CASE @OPT_WISE WHEN 'ITEM' THEN B.BASEUNIT ELSE '' END BASEUNIT,
	CASE @OPT_WISE WHEN 'ITEM' THEN D.ACNAME ELSE '' END SUPPLIER,
	CASE @OPT_WISE WHEN 'ITEM' THEN A.MCODE WHEN 'ITEMCATEGORY' THEN ISNULL(B.MCAT,'N/A') ELSE ISNULL(B.MGROUP,'') END MCODE,
	CASE @OPT_WISE WHEN 'ITEM' THEN A.PRATE ELSE 0 END PRATE,
	CASE @OPT_WISE WHEN 'ITEM' THEN B.RATE_A ELSE 0 END SRATE,
	OPQTY,INQTY,OUTQTY,STOCKBALANCE,STOCKVALUE, A.DIVISION
	FROM #RMD_TRNPROD1 A INNER JOIN MENUITEM B ON A.MCODE= B.MCODE 
	LEFT JOIN MENUITEM C ON B.MGROUP = C.MCODE 
	LEFT JOIN RMD_ACLIST D ON ISNULL(B.SUPCODE,'') = D.ACID
	WHERE ISNULL(B.MCAT,'') LIKE @MENUCAT AND ISNULL(B.MGROUP,'') LIKE @MGROUP AND ISNULL(B.SUPCODE,'') LIKE @SUPPLIER_ACID AND
	((@PATH='%' AND ISNULL(B.PATH,'') LIKE @PATH) OR (@PATH <> '%' 
	AND B.PARENT IN (SELECT MCODE FROM DBO.TreeExpand_function(@PATH,'PATH','1'))))
	AND ((@PTYPE=100 AND ISNULL(B.PTYPE,0)<10) OR (@PTYPE <> 100 AND ISNULL(B.PTYPE,0) = @PTYPE))
)A

INSERT INTO #TRNPROD1(ITEMCODE,DESCA,BARCODE,BASEUNIT,DIVISION,OPQTY,INQTY,OUTQTY,STOCKBALANCE,PRATE,STOCKVALUE,SRATE,SUPPLIER,MCODE)
SELECT * FROM
(
	SELECT ITEMCODE,DESCA,BARCODE,BASEUNIT,DIVISION,
	SUM(OPQTY) OPQTY,SUM(INQTY) PQTY,SUM(OUTQTY) TRANSFERIN, SUM(STOCKBALANCE) STOCKBALANCE,
	ISNULL(A.PRATE,0) PRATE,SUM(STOCKVALUE) STOCKVALUE,A.SRATE,A.SUPPLIER,A.MCODE
	FROM #TRNPROD A GROUP BY A.ITEMCODE,A.DESCA,A.BARCODE,A.BASEUNIT,ISNULL(A.PRATE,0),A.SRATE,A.SUPPLIER,A.MCODE, A.DIVISION
) A
	
 
--PREPARING REPORT 
-------------------
--CREATING TEMPORTY TABLE TO HOLD THE REPORT OUTPUT
----------------------------------------------------
IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE #RESULT
SELECT IH.[Main Group], IH.[Main Category], IH.[Sub Category], IH.[Super Category], ITEMCODE, DESCA, BARCODE, DIVISION, BASEUNIT,
SUM(OPQTY) OPQTY,SUM(INQTY) INQTY, SUM(OUTQTY) OUTQTY,
SUM(STOCKBALANCE) STOCKBALANCE, PRATE,SUM(STOCKVALUE)STOCKVALUE,A.SRATE,A.SUPPLIER,A.MCODE
INTO #RESULT
FROM #TRNPROD1 A 
LEFT JOIN vwItemHeirarchy IH ON A.MCODE = IH.MCODE
GROUP BY IH.[Main Group], IH.[Main Category], IH.[Sub Category], IH.[Super Category], A.ITEMCODE,A.DESCA,A.BARCODE,A.BASEUNIT,A.PRATE,A.SRATE,A.SUPPLIER,A.MCODE, A.DIVISION
ORDER BY A.DESCA

--SELECT * FROM #RESULT

 DECLARE @query  AS NVARCHAR(MAX),@colOP  AS NVARCHAR(MAX),
		       @colIN  AS NVARCHAR(MAX),@colOUT  AS NVARCHAR(MAX),@colBAL  AS NVARCHAR(MAX),@colVAL  AS NVARCHAR(MAX),@colheader  AS NVARCHAR(MAX);

SET @colheader = STUFF((SELECT distinct ',' +'SUM(ISNULL(' + QUOTENAME(INITIAL ) +',0))'  +QUOTENAME([INITIAL]+'_OP')
		            +',' +'SUM(ISNULL(' + QUOTENAME(INITIAL+'_IN') +',0))' +QUOTENAME([INITIAL]+'_IN')
					+',' +'SUM(ISNULL(' + QUOTENAME(INITIAL+'_OUT') +',0))' +QUOTENAME([INITIAL]+'_OUT')
					+',' +'SUM(ISNULL(' + QUOTENAME(INITIAL+'_BAL') +',0))' +QUOTENAME([INITIAL]+'_BAL')
					+',' +'CONVERT(NUMERIC(18,2), SUM(ISNULL(' + QUOTENAME(INITIAL+'_VAL') +',0)))' +QUOTENAME([INITIAL]+'_VAL')
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')

SET @colOP = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL ) 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')

SET @colIN = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL+'_IN') 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')

SET @colOut = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL+'_OUT') 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')

SET @colBal = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL+'_BAL') 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')

SET @colVal = STUFF((SELECT distinct ',' + QUOTENAME(INITIAL+'_VAL') 
            FROM DIVISION  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')

--SELECT ITEMCODE, DESCA, BASEUNIT, DIVISION, DIVISION + '_IN' DIV_IN,  DIVISION + '_OUT' DIV_OUT, DIVISION + '_BAL' DIV_BAL, DIVISION + '_VAL' DIV_VAL, OPQTY, INQTY, OUTQTY, STOCKBALANCE, STOCKVALUE   FROM #RESULT 
SET  @QUERY ='
SELECT [Main Group], [Main Category], [Sub Category], [Super Category], ITEMCODE,DESCA,BASEUNIT,PRATE,SRATE,SUPPLIER,MCODE ,'+@colheader+' FROM
(    
    SELECT [Main Group], [Main Category], [Sub Category], [Super Category],ITEMCODE, DESCA, BASEUNIT, DIVISION, DIVISION + ''_IN'' DIV_IN
	, DIVISION + ''_OUT'' DIV_OUT, DIVISION + ''_BAL'' DIV_BAL, DIVISION + ''_VAL'' DIV_VAL
	, OPQTY, INQTY, OUTQTY, STOCKBALANCE, STOCKVALUE, PRATE,SRATE, SUPPLIER,MCODE  FROM #RESULT 
) AS S
PIVOT
(
	SUM(OPQTY) for DIVISION in ('+@colOP+')
) AS OP
PIVOT
(
	SUM(INQTY) for DIV_IN in ('+@colIN+')
) AS I
PIVOT
(
	SUM(OUTQTY) for DIV_OUT in ('+@colOUT+')
) AS O
PIVOT
(
	SUM(STOCKBALANCE) for DIV_BAL in ('+@colBAL+')
) AS BAL
PIVOT
(
	SUM(STOCKVALUE) for DIV_VAL in ('+@colVAL+')
) AS VALUE
GROUP BY [Main Group], [Main Category], [Sub Category], [Super Category],ITEMCODE,DESCA,BASEUNIT,PRATE,SRATE,SUPPLIER,MCODE
'
PRINT @QUERY
EXECUTE(@QUERY)


--IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE #RESULT
if object_id('tempdb..#TRNPROD1') IS NOT NULL DROP TABLE #TRNPROD1
if object_id('tempdb..#TRNPROD') IS NOT NULL DROP TABLE #TRNPROD
IF OBJECT_ID('TEMPDB..#RMD_TRNPROD') IS NOT NULL DROP TABLE #RMD_TRNPROD
IF OBJECT_ID('TEMPDB..#tblWarehouse') is not NULL drop table #tblWarehouse

