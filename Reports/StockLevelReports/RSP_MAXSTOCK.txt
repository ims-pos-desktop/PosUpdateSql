CREATE OR ALTER PROCEDURE RSP_MAXSTOCK
--DECLARE
@WAREHOUSE VARCHAR(25) = '%',
@DIVISION VARCHAR(3) = '%',
@DATE1 DATETIME,
@FYID VARCHAR(10) = '%',
@OFFSET INT = 0,
@ROWS INT = 999999
AS
--SET @DIVISION='SCK'; SET @WAREHOUSE = 'Main Warehouse'; SET @DATE1 = '2021-07-15'; SET @FYID = '77/78'

DECLARE @WarehouseWiseStockLevel BIT = 0

SELECT MCODE, SUM(REALQTY_IN) - SUM(REALQTY) AS QTY INTO #STOCK FROM DBO.RMD_TRNMAIN_FN(0,@FYID) A 
JOIN DBO.RMD_TRNPROD_FN(0,@FYID) B ON A.VCHRNO = B.VCHRNO 
WHERE B.DIVISION LIKE @DIVISION AND B.WAREHOUSE LIKE @WAREHOUSE AND A.TRNDATE <= @DATE1 GROUP BY B.MCODE

IF @WarehouseWiseStockLevel = 0

	SELECT ROW_NUMBER() OVER (ORDER BY (A.QTY - B.MAXLEVEL))  SNO,  A.MCODE, B.MENUCODE, B.DESCA, B.BASEUNIT, ROLEVEL, MAXLEVEL, MINLEVEL, A.QTY, (A.QTY - B.MAXLEVEL) AS SQTY, B.PRATE_A,
	B.PRATE_A * (A.QTY - B.MAXLEVEL)  AS SAMNT, C.ACNAME FROM MENUITEM B 
	INNER JOIN  #STOCK A ON A.MCODE =  B.MCODE 
	LEFT JOIN RMD_ACLIST C ON B.SUPCODE = C.ACID  
	WHERE A.QTY > B.MAXLEVEL AND B.PTYPE < 10
	ORDER BY SQTY
	OFFSET (@OFFSET * @ROWS) ROWS FETCH NEXT @ROWS ROWS ONLY
ELSE

	SELECT ROW_NUMBER() OVER (ORDER BY (D.QTY - D.MAXLEVEL))  SNO, D.MCODE, B.MENUCODE, B.DESCA, B.BASEUNIT, D.QTY, D.ROLEVEL, D.MAXLEVEL, D.MINLEVEL, D.SQTY, B.PRATE_A,
	B.PRATE_A * (D.QTY - D.MAXLEVEL)  AS SAMNT, C.ACNAME FROM MENUITEM B INNER JOIN
	(
		SELECT A.MCODE, C.ROLEVEL, C.MAXLEVEL, C.MINLEVEL, A.QTY,(A.QTY - C.MAXLEVEL) AS SQTY FROM MULTISTOCKLEVEL AS C 
		INNER JOIN #STOCK AS A ON A.MCODE =  C.MCODE  AND C.WAREHOUSE LIKE @WAREHOUSE 
	) AS D ON B.MCODE =  D.MCODE LEFT JOIN RMD_ACLIST C  ON B.SUPCODE = C.ACID 
	WHERE D.QTY > D.MAXLEVEL AND B.PTYPE < 10
	ORDER BY SQTY
	OFFSET (@OFFSET * @ROWS) ROWS FETCH NEXT @ROWS ROWS ONLY
DROP TABLE #STOCK