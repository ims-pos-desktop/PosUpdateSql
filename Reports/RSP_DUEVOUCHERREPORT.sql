CREATE OR ALTER PROC RSP_DUEVOUCHERREPORT
--DECLARE 
@DATE1 DATETIME,
@CHK_ShowPaidVchr TINYINT = 0,    --CHK_ShowPaidVchr:1:0
@PLEDGER_ACID VARCHAR(10) = '%',
@OPT_WISE TINYINT = 1,               --Vendor:1,Customer:0
@AREA_ID INT = 0,
@CATEGORY_ID INT = 0,
@CHK_OnlyDataRow BIT = 0
AS

--SELECT @PLEDGER_ACID='PA1',@DATE1='2025-09-26 00:00:00',@OPT_WISE=0,@CHK_OnlyDataRow=1

IF @PLEDGER_ACID = '%' OR @PLEDGER_ACID ='' OR @PLEDGER_ACID = NULL
	SET @PLEDGER_ACID = 'PA%'

DROP TABLE IF EXISTS #PaidBalance
DROP TABLE IF EXISTS #BILLS
DROP TABLE IF EXISTS #RESULT

SELECT A.ACID, Paid INTO #PaidBalance FROM 
(
	SELECT T.A_ACID, IIF(@OPT_WISE = 1, SUM(T.DRAMNT), SUM(T.CRAMNT)) Paid FROM RMD_TRNTRAN T 
	JOIN RMD_TRNMAIN M ON T.VCHRNO = M.VCHRNO 
	WHERE T.A_ACID LIKE @PLEDGER_ACID AND M.TRNDATE < @DATE1
	GROUP BY  A_ACID
) T
JOIN RMD_ACLIST A ON T.A_ACID = A.ACID WHERE A.PType = IIF(@OPT_WISE  = 1, 'V', 'C')
--SELECT * FROM #PaidBalance

SELECT * INTO #BILLS FROM
(
	SELECT SNO, A_ACID ACID, VCHRNO, TRNDATE, BSDATE, BILL_AMNT, VoucherStatus FROM
	(
		SELECT ROW_NUMBER() OVER (ORDER BY T.A_ACID, TRNDATE) SNO, T.A_ACID, M.VCHRNO, M.TRNDATE, M.BSDATE, IIF(@OPT_WISE = 1, SUM(T.CRAMNT), SUM(T.DRAMNT)) BILL_AMNT, M.VoucherStatus FROM RMD_TRNTRAN T 
		JOIN RMD_TRNMAIN M ON T.VCHRNO = M.VCHRNO
		WHERE T.A_ACID LIKE @PLEDGER_ACID AND M.TRNDATE < @DATE1 AND IIF(@OPT_WISE  = 1, CRAMNT, DRAMNT) > 0
		GROUP BY  T.A_ACID, M.VCHRNO, M.TRNDATE, M.BSDATE, M.VoucherStatus
	) T
	JOIN RMD_ACLIST A ON T.A_ACID = A.ACID 
	WHERE A.PType = IIF(@OPT_WISE  = 1, 'V', 'C') 
) A WHERE ISNULL(VoucherStatus,'') <> 'Carry Forward'
ORDER BY A.ACID, A.TRNDATE DESC, A.VCHRNO DESC
--SELECT * FROM #BILLS

SELECT ACID, VCHRNO, TRNDATE, BSDATE, CONVERT(NUMERIC(18,2), BILL_AMNT) BILL_AMNT, 
CONVERT(NUMERIC(18,2), CASE WHEN A < 0 THEN BILL_AMNT ELSE CASE WHEN BILL_AMNT - A > 0 THEN BILL_AMNT - A ELSE 0 END END) PAID, 
CONVERT(NUMERIC(18,2), BILL_AMNT - CASE WHEN A < 0 THEN BILL_AMNT ELSE CASE WHEN BILL_AMNT - A > 0 THEN BILL_AMNT - A ELSE 0 END END) BALANCE INTO #RESULT FROM
(
	SELECT d.Paid, B.*, SUM(B.BILL_AMNT) OVER (PARTITION BY D.ACID ORDER BY SNO) -  D.Paid  A FROM #PaidBalance D JOIN #BILLS B ON D.ACID = B.ACID
) A 

SELECT * FROM
(
	SELECT R.*, DATEDIFF(d, R.TRNDATE, @DATE1) BILL_AGE, DATEADD(D, A.CrPeriod, R.TRNDATE) MaturityDate, IIF(DATEDIFF(d, R.TRNDATE, @DATE1) >= A.CRPERIOD, 'Matured','') IsMatured, 1 FLAG, 'A' [TYPE] FROM #RESULT R JOIN RMD_ACLIST A ON R.ACID = A.ACID WHERE @CHK_ShowPaidVchr = 1 OR R.BALANCE > 0
	UNION ALL 
	SELECT DISTINCT A.ACID, A.ACNAME, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 'G' FROM #RESULT R JOIN RMD_ACLIST A ON R.ACID = A.ACID AND @CHK_OnlyDataRow = 0
	UNION ALL
	SELECT ACID, 'TOTAL : ', NULL, NULL, SUM(BILL_AMNT) , SUM(PAID), SUM(BALANCE), NULL, NULL, NULL, 2, 'G' FROM #RESULT WHERE @CHK_OnlyDataRow = 0 GROUP BY ACID
	UNION ALL 
	SELECT DISTINCT ACID, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,NULL, 3, 'A' FROM #RESULT WHERE @CHK_OnlyDataRow = 0
) A 
ORDER BY ACID, FLAG, TRNDATE



