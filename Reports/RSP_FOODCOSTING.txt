CREATE OR ALTER   PROC [dbo].[RSP_FoodCosting]
--DECLARE
@DATE1 DATE,
@DATE2 DATE,
@DIVISION VARCHAR(3) = '%',
@MCODE VARCHAR(25) = '%',
@SELECTEDITEMLIST VARCHAR(500) = ''
AS

SET NOCOUNT ON
--SET @DATE1='2021-7-16 00:00:00'; SET @DATE2='2022-08-15 00:00:00'; SET @DIVISION=N'%'; SET @MCODE=N'%'; --SET @SELECTEDITEMLIST=N'M1010,M1011'

IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE tempdb..#RESULT
IF OBJECT_ID('TEMPDB..#RESULT1') IS NOT NULL DROP TABLE #RESULT1
IF OBJECT_ID('TEMPDB..#ADJUSTMENT') IS NOT NULL DROP TABLE #ADJUSTMENT

IF ISNULL(@SELECTEDITEMLIST,'') != '' SET @MCODE = @SELECTEDITEMLIST

SELECT CON.MCODE RawMCode, CON.UNIT, SUM(CON.Quantity) ConsumedQty, SUM(CON.AMOUNT) ConsumedAmount, TP.MCODE ReceipeMCode, SUM(TP.RealQty-TP.REALQTY_IN) SoldQty, SUM(Taxable + NonTaxable) SoldAmount 
INTO #RESULT FROM
(
	SELECT IM.VCHRNO, IM.TRNDATE, IM.REFBILL, IP.MCODE, IP.UNIT, (IP.RealQty - IP.REALQTY_IN) Quantity, IP.RATE, IP.AMOUNT, IP.REFSERIAL FROM INVMAIN IM (NOLOCK)
	JOIN INVPROD IP (NOLOCK) ON IM.VCHRNO = IP.VCHRNO 
	WHERE IM.TRNDATE BETWEEN @DATE1 AND @DATE2 AND  IM.VoucherType = 'RC' AND REFSERIAL IS NOT NULL AND IM.DIVISION LIKE @DIVISION 
	AND (@MCODE = '%' OR IP.MCODE in (select * from dbo.split(@MCODE,',')))
) CON 
JOIN TRNPROD TP ON CON.REFBILL = TP.VCHRNO AND CON.REFSERIAL = TP.SNO
GROUP BY CON.MCODE, CON.UNIT, TP.MCODE

/*
SELECT ReceipeMCode, SoldQty, SoldAmount, SUM(CONSUMEDAMOUNT), SUM(CONSUMEDAMOUNT)/SoldAmount * 100 FROM #RESULT
GROUP BY ReceipeMCode, SoldQty, SoldAmount
ORDER BY ReceipeMCode
*/

SELECT P.MCODE, SUM(P.REALQTY - P.REALQTY_IN) Quantity, SUM((P.RealQty - P.REALQTY_IN) * P.RATE) Amount INTO #Adjustment  FROM INVMAIN M 
JOIN INVPROD P ON M.VCHRNO = P.VCHRNO 
JOIN SETTLEMENTMODE S ON M.TRNMODE = S.DESCRIPTION
WHERE M.TRNDATE BETWEEN @DATE1 AND @DATE2 AND M.DIVISION LIKE @DIVISION AND M.VoucherType IN ('DM','SA') AND (M.VoucherType = 'SA' OR S.IncludeInFoodCosting = 1)
GROUP BY P.MCODE
--SELECT *, ConsumedQty/ SUM(ConsumedQty) OVER (PARTITION BY RawMCode) * 100 ConRatioQty, ConsumedAmount/ SUM(ConsumedAmount) OVER (PARTITION BY RawMCode) * 100 ConRatioAmount FROM #RESULT



	SELECT R.RawMcode, R.ReceipeMCode, R.MENUCODE, R.DESCA, R.UNIT, R.ConsumedQty, R.ConsumedQty / iif(TotalConsumed =0,1,TotalConsumed) ConRatio, R.SoldQty, 
	R.ConsumedAmount, R.SoldAmount 
	INTO #RESULT1 FROM
	(
		SELECT R.RawMcode, R.ReceipeMCode, M.MENUCODE, M.DESCA, R.UNIT, R.ConsumedQty, SUM(ConsumedQty) OVER (PARTITION BY RawMCode) TotalConsumed, R.SoldQty, 
		R.ConsumedAmount, R.SoldAmount
		, 2 FLG, 'A' [TYPE] FROM #RESULT R 
		JOIN MENUITEM M ON R.ReceipeMCode = M.MCODE
	) R

	SELECT ReceipeMCode, MENUCODE, DESCA, SoldQty, SoldAmount, SUM(CONSUMEDAMOUNT) IdealConsumption, SUM(CONSUMEDAMOUNT)/SoldAmount * 100 IdealFoodCost, 
	ISNULL(SUM(A.Amount * R.ConRatio),0) AdjAmount, (SUM(CONSUMEDAMOUNT) + ISNULL(SUM(A.Amount * R.ConRatio),0))/SoldAmount * 100 ActualFoodCost FROM #RESULT1 R
	LEFT JOIN #Adjustment A ON R.RawMcode = A.MCODE
	GROUP BY ReceipeMCode, SoldQty, SoldAmount, MENUCODE, DESCA
	ORDER BY ReceipeMCode
SET NOCOUNT OFF


