CREATE OR ALTER PROCEDURE [dbo].[RSP_ITEMEXPIRYREPORT] 
--DECLARE
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@DIVISION VARCHAR(3) = '%',
	@WAREHOUSE VARCHAR(100) = '%',
	@MENUCAT VARCHAR(100) ='%',
	@SUPPLIER_ACID VARCHAR(25)='%',
	@MGROUP VARCHAR(25) = '%',
	@GROUP VARCHAR(25)='%',
	@FYID VARCHAR(10),
	@CHK_OnlyExpTracked TINYINT = 1        --CHK_OnlyExpTracked:1:0
AS
--SET @DATE1 = '16 JUL 2019'; SET @DATE2 = '15 JUL 2024'; SET @WAREHOUSE = '%'; SET @DIVISION = '%'; SET @FYID = '76/77'
--DECLARE @DATE DATETIME = '03-27-18',@PATH VARCHAR(200) ='%',@PHISCALID VARCHAR(20)='%',@ITEM VARCHAR(25)= 'M28744P',@DETAIL TINYINT = 0

SET NOCOUNT ON

--TEMPORARY TABLE FOR STOCK VALUATION DETAIL RECORD
----------------------------------------------------
IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE #RESULT
CREATE TABLE #RESULT (VCHRNO VARCHAR(25),TRNDATE DATETIME,MCODE VARCHAR(25),PQTY NUMERIC(18,6),QTY NUMERIC(18,6),RATE NUMERIC(18,6),AMOUNT NUMERIC(18,6), EXPDATE DATETIME)

--GETTING STOCK QTY
--------------------
IF OBJECT_ID('TEMPDB..#STOCK') IS NOT NULL DROP TABLE #STOCK

SELECT A.* INTO #STOCK FROM
(
	SELECT A.MCODE,SUM(REALQTY_IN)-SUM(REALQTY) AS STOCKQTY FROM RMD_TRNPROD A
	INNER JOIN RMD_TRNMAIN B ON A.VCHRNO= B.VCHRNO --AND A.DIVISION=B.DIVISION AND ISNULL(A.PHISCALID,'')=ISNULL(B.PHISCALID,'') 
	WHERE A.PhiscalID = @FYID AND A.DIVISION LIKE @DIVISION --AND ISNULL(A.WAREHOUSE,'') IN (SELECT NAME FROM RMD_WAREHOUSE WHERE ISNULL(IsAdjustment,0) =0 AND ISNULL(ISVIRTUAL,0)=0 )
	GROUP BY A.MCODE  HAVING SUM(REALQTY_IN)-SUM(REALQTY) <> 0
) A
INNER JOIN MENUITEM B ON A.MCODE=B.MCODE
WHERE (@CHK_OnlyExpTracked = 0  OR B.REQEXPDATE = 1) AND 
B.PTYPE < 10 AND ISNULL(B.MCAT,'') LIKE @MENUCAT AND ISNULL(B.MGROUP,'') LIKE @MGROUP AND ISNULL(B.SUPCODE,'') LIKE @SUPPLIER_ACID

--SELECT * from #stock order by mcode

--GETTTING RECORD FOR VALUATION
-------------------------------
IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL DROP TABLE #DATA

SELECT A.VCHRNO,A.TRNDATE,C.MCODE, A.EXPDATE, ISNULL(QTY,0) QTY,ISNULL(RATE,0) RATE,ISNULL(C.STOCKQTY,0) STOCKQTY INTO #DATA FROM #STOCK C 
JOIN 
(
	SELECT A.VCHRNO,B.TRNDATE,A.MCODE,A.EXPDATE, SUM(REALQTY_IN) QTY,SUM((CASE WHEN ISNULL(A.CRATE,0) = 0 THEN ISNULL(RATE,0) ELSE ISNULL(A.CRATE,0) END) * REALQTY_IN)/sum(REALQTY_IN) AS RATE 
	FROM  RMD_TRNPROD A 
	INNER JOIN RMD_TRNMAIN B ON A.VCHRNO=B.VCHRNO --AND A.DIVISION=B.DIVISION AND ISNULL(A.PHISCALID,'')=ISNULL(B.PHISCALID,'')
	INNER JOIN MENUITEM M ON A.MCODE = M.MCODE
	WHERE  A.PhiscalID = @FYID AND A.DIVISION LIKE @DIVISION AND A.VoucherType IN ('PI','OP','TR') AND ISNULL(REALQTY_IN,0) <> 0 
	AND ISNULL(A.WAREHOUSE,'') IN (SELECT NAME FROM RMD_WAREHOUSE WHERE ISNULL(IsAdjustment,0) =0 AND ISNULL(ISVIRTUAL,0)=0 )
	AND M.PTYPE < 10 AND ISNULL(M.MCAT,'') LIKE @MENUCAT AND ISNULL(M.MGROUP,'') LIKE @MGROUP AND ISNULL(M.SUPCODE,'') LIKE @SUPPLIER_ACID
	GROUP BY A.VCHRNO,B.TRNDATE,A.MCODE, A.EXPDATE
	HAVING SUM(REALQTY_IN) > 0
) AS A ON C.MCODE=A.MCODE

--SELECT * FROM #data WHERE MCODE = 'M12266' order by mcode

--PROCESSING RECORD FOR STOCK VALUATION
-----------------------------------------	

--SELECT VCHRNO, TRNDATE, QTY, RATE, STOCKQTY, SUM(QTY) OVER (PARTITION BY MCODE ORDER BY TRNDATE DESC, VCHRNO DESC) CPQTY, MCODE, EXPDATE FROM #DATA WHERE MCODE = 'M406'
	
INSERT INTO #RESULT(VCHRNO,TRNDATE,MCODE,QTY,RATE,AMOUNT,PQTY, EXPDATE)
SELECT VCHRNO, TRNDATE, MCODE, STKQTY, RATE, STKQTY * RATE AMOUNT, PQTY, EXPDATE FROM
(
	SELECT VCHRNO, TRNDATE, QTY PQTY, RATE, IIF(STOCKQTY>=CPQTY, QTY, STOCKQTY - ISNULL(LAG(CPQTY) OVER (PARTITION BY MCODE ORDER BY TRNDATE DESC, VCHRNO DESC),0)) STKQTY, IIF(STOCKQTY>=CPQTY, QTY, CPQTY-STOCKQTY) * RATE AMOUNT, NULL VRATE, A.MCODE, 'B' FLG, EXPDATE FROM 
	(
		SELECT VCHRNO, TRNDATE, QTY, RATE, STOCKQTY, SUM(QTY) OVER (PARTITION BY MCODE ORDER BY TRNDATE DESC,VCHRNO DESC) CPQTY, MCODE, EXPDATE FROM #DATA --WHERE MCODE = 'M406'
	)A 
) B WHERE STKQTY > 0

--RESULT OUTPUT
SELECT B.MENUCODE ItemCode, B.DESCA ItemName, A.VCHRNO,A.TRNDATE,A.PQTY InQty, A.RATE, A.QTY STKQTY, AMOUNT,A.MCODE, EXPDATE FROM #RESULT A 
INNER JOIN MENUITEM B ON A.MCODE = B.MCODE 
WHERE EXPDATE IS NOT NULL
ORDER BY A.EXPDATE