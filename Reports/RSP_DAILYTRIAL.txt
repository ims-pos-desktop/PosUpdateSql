CREATE OR ALTER PROC RSP_DAILYTRIAL
--DECLARE
@DATE1 DATETIME,
@DATE2 DATETIME,
@DIVISION VARCHAR(3) = 'MMX',
@USER VARCHAR(50) = '%',
@OPT_TREE tinyint = 0                                          --NonTree:0,Tree:1
AS
--SET @DATE1 = '2021-02-01 00:00:00';SET @DATE2 = '2021-02-01 00:00:00'
--SET @USER = '%'
	   
if OBJECT_ID('Tempdb..#REPDATA') is not null drop table #REPDATA
       
SELECT TRNDATE, BSDATE, A.ACTYPE,T.A_ACID, A.ACCODE, A.ACNAME, SUM(T.DRAMNT) Dr, SUM(T.CRAMNT) Cr 
INTO #REPDATA FROM RMD_TRNMAIN M 
JOIN RMD_TRNTRAN T ON M.VCHRNO = T.VCHRNO AND M.DIVISION = T.DIVISION AND M.PHISCALID = T.PHISCALID
JOIN RMD_ACLIST A ON T.A_ACID = A.ACID
WHERE M.TRNDATE BETWEEN @DATE1 AND @DATE2 AND M.DIVISION LIKE @DIVISION 
AND (M.TRNUSER LIKE @USER OR M.TRNUSER IN (SELECT * FROM DBO.Split(@USER,',')))
GROUP BY TRNDATE, A_ACID, BSDATE, A.ACCODE, A.ACNAME, A.ACTYPE,T.A_ACID
ORDER BY TRNDATE, A.ACTYPE

if @OPT_TREE=0
begin 
	SELECT DISTINCT CONVERT(VARCHAR(10), TRNDATE, 101) ACCODE, BSDATE ACNAME, 'G' TYPE, 1 SECTION, NULL DEBIT, NULL CREDIT, TRNDATE FROM #REPDATA
    UNION ALL
    SELECT ISNULL(ACCODE, ''), ACNAME, 'A', 2, Dr , Cr, TRNDATE FROM #REPDATA
    UNION ALL
    SELECT '', 'TOTAL >>', 'G', 3, SUM(Dr), SUM(Cr), TRNDATE FROM #REPDATA GROUP BY TRNDATE
    UNION ALL
    SELECT DISTINCT '', '', '', 4, NULL , NULL,  TRNDATE FROM #REPDATA
    ORDER BY TRNDATE, SECTION
end
else
begin
	DECLARE @TREE TABLE (TRNDATE datetime,BSDATE varchar(20),ID int,ACID varchar(100),PARENT varchar(50),TYPE char,LEVEL int,ACCODE varchar(100),ACNAME varchar(300),DEBIT numeric(30,5),cREDIT numeric(30,5),MCAT varchar(200))
	        
	insert  INTO @TREE
	select B.TRNDATE,b.BSDATE,A.ID,A.ACID,A.PARENT,A.TYPE,A.LEVEL,A.ACCODE,A.ACNAME,b.Dr DEBIT,B.Cr CREDIT,A.MCAT 
	from dbo.TreeExpandFunction_Account('AL','ACCOUNT',0,1,1,0) AS A
	LEFT JOIN #REPDATA B ON A.ACID=B.A_ACID      
            
	insert  INTO @TREE
	SELECT *  FROM
	(
		select distinct b.TRNDATE,b.BSDATE,a.ID,a.ACID,a.PARENT,a.TYPE,a.LEVEL,a.ACCODE,a.ACNAME,a.DEBIT,a.cREDIT,A.MCAT from @TREE a,@TREE b where a.TYPE='G' 
	)A WHERE  a.trndate is not null	        
	        
	IF OBJECT_ID('TEMPDB..#TOTAL') is not null drop table #TOTAL
	        
    SELECT TRNDATE,SUM(ISNULL(DEBIT,0)) DEBIT,SUM(ISNULL(CREDIT,0)) CREDIT
    INTO #TOTAL FROM @TREE  GROUP BY TRNDATE
              
    DECLARE @LVL INT
    select @LVL=MAX(LEVEL) from @TREE 
              
    WHILE @lvl > 0
    BEGIN
        UPDATE A SET A.DEBIT = B.DEBIT,A.CREDIT = B.CREDIT
        FROM @TREE A INNER JOIN
        (
            SELECT TRNDATE,PARENT, SUM(ISNULL(DEBIT,0)) DEBIT,SUM(ISNULL(CREDIT,0)) CREDIT --
            FROM @TREE WHERE LEVEL = @LVL 
            GROUP BY PARENT,TRNDATE
        ) B ON A.ACID = B.PARENT AND A.TRNDATE=B.TRNDATE
                 
        SET @lvl = @lvl - 1;
    END
	--select * from @TREE
	SELECT ACNAME,ACCODE,TYPE,DEBIT,CREDIT FROM 
	(
		SELECT  DISTINCT FORMAT(TRNDATE,'dd/MM/yyyy') ACNAME,BSDATE ACCODE,'G' TYPE, NULL DEBIT, NULL CREDIT,null ACID,0 LEVEL,0 ID , TRNDATE, 1 SECTION FROM @TREE where TRNDATE is not null 
		union all
		SELECT CASE WHEN TYPE = 'G' THEN UPPER(A.ACNAME) ELSE ACNAME END ACNAME,A.ACCODE,TYPE,CONVERT(VARCHAR,CAST(DEBIT AS MONEY),1) DEBIT,CONVERT(VARCHAR,CAST(CREDIT AS MONEY),1) CREDIT,
		ACID,LEVEL,ID,TRNDATE , 2 SECTION
		FROM @TREE A WHERE ID <>1 AND  LEVEL <=5 AND A.MCAT NOT IN ('SL','SG')  AND A.MCAT LIKE '%' and ISNULL(DEBIT,0) + ISNULL(CREDIT,0) <> 0  and TRNDATE is not null 
		UNION ALL
		SELECT 'TOTAL >>',NULL,'G' TYPE,CONVERT(VARCHAR,CAST(DEBIT AS MONEY),1) DEBIT,CONVERT(VARCHAR,CAST(CREDIT AS MONEY),1) CREDIT,
		'ZZZZZ' ACID,1000 LEVEL,99999 ID ,TRNDATE, 3 SECTION 
		FROM #TOTAL A where TRNDATE is not null 
		union all
		SELECT DISTINCT '', '', '',  NULL , NULL,null ACID,1001 LEVEL,100000  ID,TRNDATE, 4 SECTION   FROM #REPDATA
		union all
		SELECT 'GRAND TOTAL >>',NULL,'G' TYPE,CONVERT(VARCHAR,CAST(sum(DEBIT) AS MONEY),1) DEBIT,CONVERT(VARCHAR,CAST(sum(CREDIT) AS MONEY),1) CREDIT,
				'ZZZZZ' ACID,1002 LEVEL,100002 ID ,max(TRNDATE), 5 SECTION 
		FROM #TOTAL A where TRNDATE is not null 
	) A ORDER BY TRNDATE,ID,LEVEL  
end


