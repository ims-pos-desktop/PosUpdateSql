CREATE OR ALTER PROC RSP_DAILYTRIAL
--DECLARE
@DATE1 DATETIME,
@DATE2 DATETIME,
@DIVISION VARCHAR(3) = '%',
@USER VARCHAR(50) = '%',
@OPT_TREE TINYINT = 0,                        --NONTREE:0,TREE:1
@FYID VARCHAR(10)
AS

--SET @DATE1 = '2021-07-01';SET @DATE2 = '2022-07-16'; SET @FYID = '78/79'

IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL DROP TABLE #DATA
IF OBJECT_ID('TEMPDB..#TEMP') IS NOT NULL DROP TABLE #TEMP
IF OBJECT_ID('TEMPDB..#REPDATA') IS NOT NULL DROP TABLE #REPDATA
CREATE TABLE #TEMP (TRNDATE DATETIME,BSDATE VARCHAR(10), A_ACID VARCHAR(30),DR NUMERIC(32,8), CR NUMERIC(32,8), NET NUMERIC(32,8))

SELECT TRNDATE, BSDATE,T.A_ACID,
IIF(M.VOUCHERTYPE IN('AO','OB'), 'OPENING', '') VOUCHERTYPE,
SUM(DRAMNT) DRAMNT, SUM(CRAMNT) CRAMNT
INTO #DATA  
FROM RMD_TRNMAIN M 
JOIN RMD_TRNTRAN T ON M.VCHRNO = T.VCHRNO 
WHERE M.TRNDATE BETWEEN @DATE1 AND @DATE2 AND M.DIVISION LIKE @DIVISION AND M.PHISCALID=@FYID
AND (M.TRNUSER LIKE @USER OR M.TRNUSER IN (SELECT * FROM DBO.SPLIT(@USER,',')))
GROUP BY TRNDATE,BSDATE,A_ACID, IIF(M.VOUCHERTYPE IN('AO','OB'), 'OPENING', '')


INSERT INTO #TEMP
SELECT CONVERT(DATETIME,'') TRNDATE,'' BSDATE,A_ACID ,0 DR,0 CR, SUM(DRAMNT-CRAMNT) NET 
FROM RMD_TRNMAIN M JOIN RMD_TRNTRAN T ON M.VCHRNO = T.VCHRNO
WHERE TRNDATE < @DATE1 OR T.VOUCHERTYPE IN ('AO','OB') AND T.PhiscalID = @FYID
GROUP BY A_ACID

UNION ALL

SELECT TRNDATE,BSDATE ,A_ACID,SUM(DRAMNT) DR,SUM(CRAMNT) CR,SUM(DRAMNT-CRAMNT) NET FROM #DATA 
WHERE TRNDATE BETWEEN @DATE1 AND @DATE2 AND VOUCHERTYPE<>'OPENING' 
GROUP BY TRNDATE,BSDATE,A_ACID

SELECT * INTO #REPDATA 
FROM 
( 
	SELECT TRNDATE,BSDATE,A_ACID,ACCODE,ACNAME,
	LAG(CLS) OVER (PARTITION BY A_ACID ORDER BY TRNDATE ASC) OPENING,DR,CR,CLS CLOSING 
	FROM 
	(
		SELECT TRNDATE,BSDATE,A_ACID,DR,CR,
		SUM(NET) OVER(PARTITION BY A_ACID ORDER BY TRNDATE ASC) CLS 
		FROM #TEMP 
	)A 
	LEFT JOIN RMD_ACLIST B ON A.A_ACID=B.ACID
) A 
WHERE TRNDATE <> '1 JAN 1900'  
ORDER BY ACNAME


IF @OPT_TREE=0
BEGIN 
	SELECT ACCODE,ACNAME,TYPE,SECTION,CONVERT(NUMERIC(32,2),[OPENING B/L]) OPENING,OPENING_DRCR,CONVERT(NUMERIC(32,2),DEBIT,0)DEBIT,CONVERT(NUMERIC(32,2),CREDIT,0)CREDIT,CONVERT(NUMERIC(32,2),[CLOSING B/L]) CLOSING, CLOSING_DRCR,TRNDATE 
	FROM (

		SELECT DISTINCT CONVERT(VARCHAR(10), TRNDATE, 101) ACCODE, BSDATE ACNAME, 'G' TYPE, 1 SECTION, NULL [OPENING B/L],NULL OPENING_DRCR,NULL DEBIT, NULL CREDIT,NULL [CLOSING B/L], NULL CLOSING_DRCR,TRNDATE 
		FROM #REPDATA  

		UNION ALL

		SELECT ISNULL(ACCODE, ''), ACNAME, 'A', 2,ABS(ISNULL(OPENING,0)) OPENING,IIF(ISNULL(OPENING,0)<0,'CR','DR')OPENING_DRCR, CONVERT(NUMERIC(32,2),DR) DR , CR,ABS(ISNULL(CLOSING,0)) CLOSING,IIF(ISNULL(CLOSING,0)<0,'CR','DR')CLOSING_DRCR, TRNDATE 
		FROM #REPDATA  

		UNION ALL

		SELECT '', 'TOTAL >>', 'G', 3, SUM(OPENING) [OPENING B/L],IIF(ISNULL(SUM(OPENING),0)<0,'CR','DR'), SUM(DR), SUM(CR),SUM(CLOSING) [CLOSING B/L], IIF(ISNULL(SUM(CLOSING),0)<0,'CR','DR'),TRNDATE 
		FROM #REPDATA  
		GROUP BY TRNDATE

		UNION ALL

		SELECT DISTINCT '', '', '', 4, NULL , NULL,NULL,NULL, NULL,NULL, TRNDATE 
		FROM #REPDATA  

	)A 
	ORDER BY TRNDATE, SECTION, ACNAME
END
ELSE
BEGIN
	DECLARE @TREE TABLE (TRNDATE DATETIME,BSDATE VARCHAR(50),ID INT,ACID VARCHAR(100),PARENT VARCHAR(50),TYPE CHAR,LEVEL INT,ACCODE VARCHAR(100),ACNAME VARCHAR(1000),OPENING NUMERIC(30,5),OPENING_DRCR VARCHAR(5),DEBIT NUMERIC(30,5),CREDIT NUMERIC(30,5),CLOSING NUMERIC(30,5),CLOSING_DRCR VARCHAR(5),MCAT VARCHAR(200))
	        
	INSERT  INTO @TREE
	SELECT B.TRNDATE,B.BSDATE,A.ID,A.ACID,A.PARENT,A.TYPE,A.LEVEL,A.ACCODE,A.ACNAME,B.OPENING,IIF(ISNULL(B.OPENING,0)<0,'CR','DR')OPENING_DRCR,B.DR DEBIT,B.CR CREDIT,B.CLOSING,IIF(ISNULL(B.CLOSING,0)<0,'CR','DR')CLOSING_DRCR,A.MCAT 
	FROM DBO.TREEEXPANDFUNCTION_ACCOUNT('AL','ACCOUNT',0,1,1,0) AS A
	LEFT JOIN #REPDATA B ON A.ACID=B.A_ACID 

	INSERT  INTO @TREE
	SELECT *  FROM
	(
		SELECT DISTINCT B.TRNDATE,B.BSDATE,A.ID,A.ACID,A.PARENT,A.TYPE,A.LEVEL,A.ACNAME,A.ACCODE,A.OPENING,A.OPENING_DRCR,A.DEBIT,A.CREDIT,A.CLOSING,A.CLOSING_DRCR,A.MCAT FROM @TREE A,@TREE B WHERE A.TYPE='G' 
	)A WHERE  A.TRNDATE IS NOT NULL	        
	        

	IF OBJECT_ID('TEMPDB..#TOTAL') IS NOT NULL DROP TABLE #TOTAL
	        
    SELECT TRNDATE,SUM(ISNULL(OPENING,0)) OPENING,SUM(ISNULL(DEBIT,0)) DEBIT,SUM(ISNULL(CREDIT,0)) CREDIT,SUM(ISNULL(CLOSING,0)) CLOSING
    INTO #TOTAL FROM @TREE  GROUP BY TRNDATE
              
    DECLARE @LVL INT
    SELECT @LVL=MAX(LEVEL) FROM @TREE 
              
    WHILE @LVL > 0
    BEGIN
        UPDATE A SET A.DEBIT = B.DEBIT,A.CREDIT = B.CREDIT,A.OPENING=B.OPENING,A.CLOSING=B.CLOSING
        FROM @TREE A INNER JOIN
        (
            SELECT TRNDATE,PARENT, SUM(ISNULL(OPENING,0)) OPENING, SUM(ISNULL(DEBIT,0)) DEBIT,SUM(ISNULL(CREDIT,0)) CREDIT, SUM(ISNULL(CLOSING,0)) CLOSING --
            FROM @TREE WHERE LEVEL = @LVL 
            GROUP BY PARENT,TRNDATE
        ) B ON A.ACID = B.PARENT AND A.TRNDATE=B.TRNDATE
                 
        SET @LVL = @LVL - 1;
    END
	
	SELECT ACNAME,ACCODE,TYPE,CONVERT(NUMERIC(32,2),OPENING) OPENING ,OPENING_DRCR,CONVERT(NUMERIC(32,2),DEBIT)DEBIT,CONVERT(NUMERIC(32,2),CREDIT)CREDIT,CONVERT(NUMERIC(32,2),CLOSING)CLOSING ,CLOSING_DRCR FROM 
	(
		SELECT  DISTINCT FORMAT(TRNDATE,'dd/MM/yyyy') ACNAME,BSDATE ACCODE,'G' TYPE, NULL OPENING,NULL OPENING_DRCR,  NULL DEBIT, NULL CREDIT,NULL CLOSING  ,NULL CLOSING_DRCR,NULL ACID,0 LEVEL,0 ID , TRNDATE, 1 SECTION FROM @TREE WHERE TRNDATE IS NOT NULL 
		UNION ALL
		SELECT CASE WHEN TYPE = 'G' THEN UPPER(A.ACNAME) ELSE ACNAME END ACNAME,A.ACCODE,TYPE,ABS(ISNULL(OPENING,0)) OPENING , OPENING_DRCR, DEBIT,CREDIT ,ABS(ISNULL(CLOSING,0)) CLOSING ,CLOSING_DRCR,
		ACID,LEVEL,ID,TRNDATE , 2 SECTION
		FROM @TREE A WHERE ID <>1 AND  LEVEL <=5 AND A.MCAT NOT IN ('SL','SG')  AND A.MCAT LIKE '%' AND ISNULL(DEBIT,0) + ISNULL(CREDIT,0) <> 0  AND TRNDATE IS NOT NULL 
		UNION ALL
		SELECT 'TOTAL >>',NULL,'G' TYPE,OPENING ,NULL,DEBIT, CREDIT,CLOSING ,NULL,
		'ZZZZZ' ACID,1000 LEVEL,99999 ID ,TRNDATE, 3 SECTION 
		FROM #TOTAL A WHERE TRNDATE IS NOT NULL 
		UNION ALL
		SELECT DISTINCT '', '', '',  NULL ,NULL,NULL, NULL,NULL,NULL,NULL ACID,1001 LEVEL,100000  ID,TRNDATE, 4 SECTION   FROM #REPDATA
		UNION ALL
		SELECT 'GRAND TOTAL >>',NULL,'G' TYPE,ABS(SUM(OPENING))  OPENING,NULL,SUM(DEBIT) DEBIT,SUM(CREDIT)  CREDIT,ABS(SUM(CLOSING)) CLOSING,NULL,
				'ZZZZZ' ACID,1002 LEVEL,100002 ID ,MAX(TRNDATE), 5 SECTION 
		FROM #TOTAL A WHERE TRNDATE IS NOT NULL 
	) A ORDER BY TRNDATE,ID,LEVEL  
END