CREATE OR ALTER  PROCEDURE RSP_ItemPriceChangeLog
--DECLARE 
	@DATE1 DATE,
	@DATE2 DATE,
	@MENUCAT VARCHAR(100) ='%',
	@SUPPLIER_ACID VARCHAR(20)='%',
	@MGROUP VARCHAR(20) = '%',
	@PTYPE INT='100'
AS
DECLARE @EnableServiceCharge TINYINT,
@EnablePanBill TINYINT,
@ItemWiseSchargeApply TINYINT,
@VATCONRATE DECIMAL(10,5),
@STAXRATE DECIMAL(10,5),
@Group VARCHAR(20) = 'MI',
@GroupName VARCHAR(500) = 'Product List'

SELECT @EnableServiceCharge = EnableServiceCharge, @EnablePanBill = EnablePanBill, @ItemWiseSchargeApply = ItemWiseSchargeApply, @VATCONRATE = VATCONRATE, @STAXRATE = 1.1 FROM SETTING

SELECT A.LogDate, A.LogUser, H.[Main Group], H.[Main Category], H.[Sub Category], H.[Super Category], M.MCODE, M.MENUCODE, M.DESCA, AC.ACNAME PARTY,
CONVERT(NUMERIC(18,2), A.OldRate) OldRate, CONVERT(NUMERIC(18,2), A.OldRate * m.MRP_FACTOR) OldMrp,
CONVERT(NUMERIC(18,2), A.NewRate) NewRate, CONVERT(NUMERIC(18,2), A.NewRate * m.MRP_FACTOR) NewMrp,
CONVERT(NUMERIC(18,2), A.OldRate_WSale) OldRate, CONVERT(NUMERIC(18,2), A.OldRate_WSale * m.MRP_FACTOR) OldMrp_WSale, 
CONVERT(NUMERIC(18,2), A.NewRate_WSale) OldRate_WSale, CONVERT(NUMERIC(18,2), A.NewRate_WSale * m.MRP_FACTOR) NewMrp_WSale FROM 
(
	SELECT *,
	CASE WHEN (@EnablePanBill = 1 OR VAT = 0) AND (@EnableServiceCharge = 0 OR (@ItemWiseSchargeApply = 1 AND HASSERVICECHARGE = 0)) THEN  CONVERT(DECIMAL(20,2),1)
	WHEN (@EnablePanBill = 1 OR VAT = 0) AND @EnableServiceCharge = 1 AND (@ItemWiseSchargeApply = 0 OR HASSERVICECHARGE = 1) THEN CONVERT(DECIMAL(20,2), @STAXRATE)
	WHEN @EnablePanBill = 0 AND VAT = 1 AND (@EnableServiceCharge = 0 OR (@ItemWiseSchargeApply = 1 AND HASSERVICECHARGE = 0)) THEN CONVERT(DECIMAL(20,2), @VATCONRATE)
	ELSE CONVERT(DECIMAL(20,2), @STAXRATE * @VATCONRATE) END MRP_FACTOR
	FROM MenuItem
) M
JOIN vwItemHeirarchy H ON M.MCODE = H.MCODE
JOIN
(
	SELECT	LAG(LOGDATE) OVER (PARTITION BY MCODE ORDER BY MCODE, LOGDATE) LogDate,
		LAG(LOGUSER) OVER (PARTITION BY MCODE ORDER BY MCODE, LOGDATE) LogUser,
		MCODE,
		LAG(RATE_A) OVER (PARTITION BY MCODE ORDER BY MCODE, LOGDATE) OldRate, 
		RATE_A NewRate,
		LAG(RATE_B) OVER (PARTITION BY MCODE ORDER BY MCODE, LOGDATE) OldRate_WSale, 
		RATE_B NewRate_WSale FROM 
		(
			SELECT LOGDATE, LOGUSER, MCODE, RATE_A, RATE_B FROM _LOG_MENUITEM
			UNION ALL
			SELECT GETDATE(), '', MCODE, RATE_A, RATE_B FROM MENUITEM
		) L
) A ON M.MCODE = A.MCODE 
LEFT JOIN RMD_ACLIST AC ON AC.ACID = M.SUPCODE
WHERE OLDRATE IS NOT NULL AND (OLDRATE <> NEWRATE OR OLDRATE_WSALE <> NEWRATE_WSALE)
AND A.LogDate BETWEEN @DATE1 AND @DATE2 
AND ISNULL(M.MCAT,'') LIKE @MENUCAT 
AND ISNULL(M.MGROUP,'') LIKE @MGROUP 
AND ISNULL(M.SUPCODE,'') LIKE @SUPPLIER_ACID
AND ((@PTYPE=100 AND ISNULL(M.PTYPE,0)<10) OR (@PTYPE <> 100 AND ISNULL(M.PTYPE,0) = @PTYPE))
ORDER BY MCODE, LogDate
